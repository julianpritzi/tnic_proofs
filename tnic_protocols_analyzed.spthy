theory TNICProtocols begin

// Function signature and definition of the equational theory E

builtins: natural-numbers
functions: adec/2, aenc/2, embed_certificate/2, fst/1,
           get_encryption_key/1, get_mTLS_key_half/3, get_master_key/2,
           get_session_key/3, h/1, hmac/2, mTLS_handshake/3, pair/2, pk/1,
           retrieve_certificate/1, sdec/2, senc/2, sign/2, snd/1, true/0, verify/3
equations:
    adec(aenc(x.1, pk(x.2)), x.2) = x.1,
    fst(<x.1, x.2>) = x.1,
    get_mTLS_key_half(mTLS_handshake(n_b, b_priv, pk(a_priv)), a_priv,
                      pk(b_priv))
  = n_b,
    retrieve_certificate(embed_certificate(controller, a_pub)) = a_pub,
    sdec(senc(x.1, x.2), x.2) = x.1,
    snd(<x.1, x.2>) = x.2,
    verify(sign(x.1, x.2), x.1, pk(x.2)) = true















rule (modulo E) publish_firmware:
   [ !TNIC_HW( $TNIC_ID, HW_key_priv ) ]
  -->
   [ Out( senc(<'frm', $frm>, HW_key_priv) ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) create_IPVendor_certificate:
   [ Fr( ~IPVendor_priv ) ]
  --[ NewSensitiveInformation( 'IPVendorPriv', ~IPVendor_priv ) ]->
   [
   !SensitiveInformation( 'IPVendorPriv', ~IPVendor_priv ),
   !IP_Vendor_Certificate( ~IPVendor_priv ), Out( pk(~IPVendor_priv) )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) create_controller:
   [ In( pub_key ) ] --> [ Out( embed_certificate($CTRL, pub_key) ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) create_bitstream:
   [ Fr( ~TNIC_bit ) ]
  --[
  Bitstream( ~TNIC_bit ), NewSensitiveInformation( 'Bitstream', ~TNIC_bit )
  ]->
   [
   !SensitiveInformation( 'Bitstream', ~TNIC_bit ),
   !IP_Vendor_Bitstream( ~TNIC_bit )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) create_secrets:
   [ Fr( ~secrets ) ]
  --[ Secrets( ~secrets ), NewSensitiveInformation( 'Secrets', ~secrets )
  ]->
   [
   !SensitiveInformation( 'Secrets', ~secrets ),
   !IP_Vendor_Secrets( ~secrets )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) bootstrapping_1:
   [ Fr( ~HW_key_priv ) ]
  --[
  TNICInit( $TNIC_ID, ~HW_key_priv ),
  NewSensitiveInformation( 'HwKeyPriv', ~HW_key_priv )
  ]->
   [
   !SensitiveInformation( 'HwKeyPriv', ~HW_key_priv ),
   !TNIC_HW( $TNIC_ID, ~HW_key_priv ),
   !TNIC_PubKey( $TNIC_ID, pk(~HW_key_priv) )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) bootstrapping_2:
   [
   !TNIC_HW( $TNIC_ID, HW_key_priv ), In( senc(<'frm', $frm>, HW_key_priv) )
   ]
  --[ TNICLoadFirmware( $TNIC_ID, $frm ) ]->
   [ !TNIC_HW_B1( $TNIC_ID, HW_key_priv, $frm ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) bootstrapping_3_4_5:
   [
   !TNIC_HW_B1( $TNIC_ID, HW_key_priv, $frm ), In( CTRL_bin ),
   Fr( ~Ctrl_priv )
   ]
  --[
  TNICLoadController( $TNIC_ID, CTRL_bin ),
  NewSensitiveInformation( 'CtrlPriv', ~Ctrl_priv )
  ]->
   [
   !SensitiveInformation( 'CtrlPriv', ~Ctrl_priv ),
   !Ctrl_Certificate( CTRL_bin, ~Ctrl_priv ),
   TNIC_HW_B2( $TNIC_ID, $frm, CTRL_bin, ~Ctrl_priv,
               <<h(CTRL_bin), pk(~Ctrl_priv)>, 
                sign(<h(CTRL_bin), pk(~Ctrl_priv)>, HW_key_priv)>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) get_tnic_public_key:
   [ !TNIC_HW( $TNIC_ID, HW_key_priv ) ] --> [ Out( pk(HW_key_priv) ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) attestation_1:
   [ !IP_Vendor_Certificate( IPVendor_priv ), Fr( ~n ) ]
  --[ StartUseNonce( ~n ), UseNonce( ~n ) ]->
   [ IP_Vendor_Session_1( $TNIC_ID, IPVendor_priv, ~n ), Out( ~n ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) attestation_2_3:
   [
   TNIC_HW_B2( $TNIC_ID, $frm, CTRL_bin, Ctrl_priv, Ctrl_bin_cert ), In( n )
   ]
  --[ UseNonce( n ) ]->
   [
   TNIC_Session_1( $TNIC_ID, $frm, CTRL_bin, Ctrl_priv, Ctrl_bin_cert, n ),
   Out( <<n, Ctrl_bin_cert>, sign(<n, Ctrl_bin_cert>, Ctrl_priv)> )
   ]

  /* has exactly the trivial AC variant */

restriction Restr_attestation_4_5_6a_1:
  "∀ x #NOW. (Restr_attestation_4_5_6a_1( x ) @ #NOW) ⇒ (x = true)"
  // safety formula

restriction Restr_attestation_4_5_6a_2:
  "∀ x #NOW. (Restr_attestation_4_5_6a_2( x ) @ #NOW) ⇒ (x = true)"
  // safety formula

rule (modulo E) attestation_4_5_6a:
   [
   Fr( n_rand ), IP_Vendor_Session_1( $TNIC_ID, IPVendor_priv, n ),
   !TNIC_PubKey( $TNIC_ID, HW_key_pub ),
   In( <
        <n, <h(embed_certificate($CTRL, pk(IPVendor_priv))), Ctrl_pub>, m_sig>, 
        cert_sig>
   )
   ]
  --[
  UseNonce( n ),
  Restr_attestation_4_5_6a_1( verify(cert_sig,
                                     <n, <h(embed_certificate($CTRL, pk(IPVendor_priv))), Ctrl_pub>, m_sig>,
                                     Ctrl_pub)
  ),
  Restr_attestation_4_5_6a_2( verify(m_sig,
                                     <h(embed_certificate($CTRL, pk(IPVendor_priv))), Ctrl_pub>, HW_key_pub)
  )
  ]->
   [
   IP_Vendor_Session_2( $TNIC_ID, IPVendor_priv, n, hmac(n, n_rand), $CTRL,
                        Ctrl_pub
   ),
   Out( mTLS_handshake(hmac(n, n_rand), IPVendor_priv, Ctrl_pub) )
   ]

  /*
  rule (modulo AC) attestation_4_5_6a:
     [
     Fr( n_rand ), IP_Vendor_Session_1( $TNIC_ID, IPVendor_priv, n ),
     !TNIC_PubKey( $TNIC_ID, HW_key_pub ),
     In( <
          <n, <h(embed_certificate($CTRL, pk(IPVendor_priv))), Ctrl_pub>, m_sig>, 
          cert_sig>
     )
     ]
    --[
    UseNonce( n ), Restr_attestation_4_5_6a_1( z ),
    Restr_attestation_4_5_6a_2( z.1 )
    ]->
     [
     IP_Vendor_Session_2( $TNIC_ID, IPVendor_priv, n, hmac(n, n_rand), $CTRL,
                          Ctrl_pub
     ),
     Out( mTLS_handshake(hmac(n, n_rand), IPVendor_priv, Ctrl_pub) )
     ]
    variants (modulo AC)
    1. $CTRL = $CTRL.12
       Ctrl_pub
             = Ctrl_pub.12
       HW_key_pub
             = HW_key_pub.12
       IPVendor_priv
             = IPVendor_priv.12
       cert_sig
             = cert_sig.12
       m_sig = m_sig.12
       n     = n.12
       z     = verify(cert_sig.12,
                      <n.12, 
                       <h(embed_certificate($CTRL.12, pk(IPVendor_priv.12))), Ctrl_pub.12>, 
                       m_sig.12>,
                      Ctrl_pub.12)
       z.1   = verify(m_sig.12,
                      <h(embed_certificate($CTRL.12, pk(IPVendor_priv.12))), Ctrl_pub.12>,
                      HW_key_pub.12)
    
    2. $CTRL = $x.12
       Ctrl_pub
             = x.14
       HW_key_pub
             = pk(x.15)
       IPVendor_priv
             = x.16
       cert_sig
             = cert_sig.17
       m_sig = sign(<h(embed_certificate($x.12, pk(x.16))), x.14>, x.15)
       n     = n.17
       z     = verify(cert_sig.17,
                      <n.17, <h(embed_certificate($x.12, pk(x.16))), x.14>, 
                       sign(<h(embed_certificate($x.12, pk(x.16))), x.14>, x.15)>,
                      x.14)
       z.1   = true
    
    3. $CTRL = $x.12
       Ctrl_pub
             = pk(x.14)
       HW_key_pub
             = HW_key_pub.19
       IPVendor_priv
             = x.16
       cert_sig
             = sign(<x.17, <h(embed_certificate($x.12, pk(x.16))), pk(x.14)>, x.18>,
                    x.14)
       m_sig = x.18
       n     = x.17
       z     = true
       z.1   = verify(x.18, <h(embed_certificate($x.12, pk(x.16))), pk(x.14)>,
                      HW_key_pub.19)
    
    4. $CTRL = $x.12
       Ctrl_pub
             = pk(x.14)
       HW_key_pub
             = pk(x.15)
       IPVendor_priv
             = x.16
       cert_sig
             = sign(<x.17, <h(embed_certificate($x.12, pk(x.16))), pk(x.14)>, 
                     sign(<h(embed_certificate($x.12, pk(x.16))), pk(x.14)>, x.15)>,
                    x.14)
       m_sig = sign(<h(embed_certificate($x.12, pk(x.16))), pk(x.14)>, x.15)
       n     = x.17
       z     = true
       z.1   = true
  */

rule (modulo E) attestation_6b:
   [
   Fr( n_rand ),
   TNIC_Session_1( $TNIC_ID, $frm, CTRL_bin, Ctrl_priv, Ctrl_bin_cert, n ),
   In( partial_mTLS )
   ]
  --[
  UseNonce( n ),
  EnsureFreshInformation( 'CtrlPartialmTLS',
                          <hmac(n, n_rand), partial_mTLS>
  ),
  EnsureFreshInformation( 'CtrlMasterSecret',
                          get_master_key(get_mTLS_key_half(partial_mTLS, Ctrl_priv,
                                                           retrieve_certificate(CTRL_bin)),
                                         hmac(n, n_rand))
  )
  ]->
   [
   TNIC_Session_2( $TNIC_ID, $frm, CTRL_bin, Ctrl_priv, Ctrl_bin_cert, n,
                   get_master_key(get_mTLS_key_half(partial_mTLS, Ctrl_priv,
                                                    retrieve_certificate(CTRL_bin)),
                                  hmac(n, n_rand))
   ),
   Out( mTLS_handshake(hmac(n, n_rand), Ctrl_priv,
                       retrieve_certificate(CTRL_bin))
   )
   ]

  /*
  rule (modulo AC) attestation_6b:
     [
     Fr( n_rand ),
     TNIC_Session_1( $TNIC_ID, $frm, CTRL_bin, Ctrl_priv, Ctrl_bin_cert, n ),
     In( partial_mTLS )
     ]
    --[
    UseNonce( n ),
    EnsureFreshInformation( 'CtrlPartialmTLS',
                            <hmac(n, n_rand), partial_mTLS>
    ),
    EnsureFreshInformation( 'CtrlMasterSecret',
                            get_master_key(z, hmac(n, n_rand))
    )
    ]->
     [
     TNIC_Session_2( $TNIC_ID, $frm, CTRL_bin, Ctrl_priv, Ctrl_bin_cert, n,
                     get_master_key(z, hmac(n, n_rand))
     ),
     Out( mTLS_handshake(hmac(n, n_rand), Ctrl_priv, z.1) )
     ]
    variants (modulo AC)
    1. CTRL_bin
             = CTRL_bin.17
       Ctrl_priv
             = Ctrl_priv.19
       partial_mTLS
             = partial_mTLS.22
       z     = get_mTLS_key_half(partial_mTLS.22, Ctrl_priv.19,
                                 retrieve_certificate(CTRL_bin.17))
       z.1   = retrieve_certificate(CTRL_bin.17)
    
    2. CTRL_bin
             = embed_certificate(x.34, z.25)
       Ctrl_priv
             = Ctrl_priv.20
       partial_mTLS
             = partial_mTLS.23
       z     = get_mTLS_key_half(partial_mTLS.23, Ctrl_priv.20, z.25)
       z.1   = z.25
    
    3. CTRL_bin
             = embed_certificate(x.35, pk(x.36))
       Ctrl_priv
             = Ctrl_priv.21
       partial_mTLS
             = mTLS_handshake(z.25, x.36, pk(Ctrl_priv.21))
       z     = z.25
       z.1   = pk(x.36)
  */

rule (modulo E) attestation_6c_7_8:
   [
   !IP_Vendor_Bitstream( TNIC_bit ), !IP_Vendor_Secrets( secrets ),
   IP_Vendor_Session_2( $TNIC_ID, IPVendor_priv, n, n_IPVendor_mTLS, $CTRL,
                        Ctrl_pub
   ),
   In( partial_mTLS )
   ]
  --[
  ShareBitstream( $TNIC_ID, TNIC_bit ), ShareSecrets( $TNIC_ID, secrets ),
  UseNonce( n ),
  NewSensitiveInformation( 'MasterSecret',
                           get_master_key(n_IPVendor_mTLS,
                                          get_mTLS_key_half(partial_mTLS, IPVendor_priv, Ctrl_pub))
  ),
  EnsureFreshInformation( 'IPVendorPartialmTLS',
                          <n_IPVendor_mTLS, partial_mTLS>
  ),
  EnsureFreshInformation( 'IPVendorMasterSecret',
                          get_master_key(n_IPVendor_mTLS,
                                         get_mTLS_key_half(partial_mTLS, IPVendor_priv, Ctrl_pub))
  )
  ]->
   [
   !SensitiveInformation( 'MasterSecret',
                          get_master_key(n_IPVendor_mTLS,
                                         get_mTLS_key_half(partial_mTLS, IPVendor_priv, Ctrl_pub))
   ),
   IP_Vendor_Session_3( $TNIC_ID, IPVendor_priv, n, n_IPVendor_mTLS, $CTRL,
                        Ctrl_pub,
                        get_master_key(n_IPVendor_mTLS,
                                       get_mTLS_key_half(partial_mTLS, IPVendor_priv, Ctrl_pub)),
                        TNIC_bit, secrets
   ),
   Out( senc(<'Bitstream', TNIC_bit>,
             get_encryption_key(get_master_key(n_IPVendor_mTLS,
                                               get_mTLS_key_half(partial_mTLS, IPVendor_priv, Ctrl_pub))))
   ),
   Out( senc(<'Secrets', secrets>,
             get_encryption_key(get_master_key(n_IPVendor_mTLS,
                                               get_mTLS_key_half(partial_mTLS, IPVendor_priv, Ctrl_pub))))
   )
   ]

  /*
  rule (modulo AC) attestation_6c_7_8:
     [
     !IP_Vendor_Bitstream( TNIC_bit ), !IP_Vendor_Secrets( secrets ),
     IP_Vendor_Session_2( $TNIC_ID, IPVendor_priv, n, n_IPVendor_mTLS, $CTRL,
                          Ctrl_pub
     ),
     In( partial_mTLS )
     ]
    --[
    ShareBitstream( $TNIC_ID, TNIC_bit ), ShareSecrets( $TNIC_ID, secrets ),
    UseNonce( n ),
    NewSensitiveInformation( 'MasterSecret',
                             get_master_key(n_IPVendor_mTLS, z)
    ),
    EnsureFreshInformation( 'IPVendorPartialmTLS',
                            <n_IPVendor_mTLS, partial_mTLS>
    ),
    EnsureFreshInformation( 'IPVendorMasterSecret',
                            get_master_key(n_IPVendor_mTLS, z)
    )
    ]->
     [
     !SensitiveInformation( 'MasterSecret', get_master_key(n_IPVendor_mTLS, z)
     ),
     IP_Vendor_Session_3( $TNIC_ID, IPVendor_priv, n, n_IPVendor_mTLS, $CTRL,
                          Ctrl_pub, get_master_key(n_IPVendor_mTLS, z), TNIC_bit, secrets
     ),
     Out( senc(<'Bitstream', TNIC_bit>,
               get_encryption_key(get_master_key(n_IPVendor_mTLS, z)))
     ),
     Out( senc(<'Secrets', secrets>,
               get_encryption_key(get_master_key(n_IPVendor_mTLS, z)))
     )
     ]
    variants (modulo AC)
    1. Ctrl_pub
             = Ctrl_pub.18
       IPVendor_priv
             = IPVendor_priv.19
       partial_mTLS
             = partial_mTLS.23
       z     = get_mTLS_key_half(partial_mTLS.23, IPVendor_priv.19, Ctrl_pub.18)
    
    2. Ctrl_pub
             = pk(x.117)
       IPVendor_priv
             = IPVendor_priv.61
       partial_mTLS
             = mTLS_handshake(z.68, x.117, pk(IPVendor_priv.61))
       z     = z.68
  */

rule (modulo E) attestation_9:
   [
   TNIC_Session_2( $TNIC_ID, $frm, CTRL_bin, Ctrl_priv, Ctrl_bin_cert, n,
                   master_secret
   ),
   In( senc(<'Bitstream', TNIC_bit>, get_encryption_key(master_secret)) ),
   In( senc(<'Secrets', secrets>, get_encryption_key(master_secret)) )
   ]
  --[ CtrlDone( $TNIC_ID, TNIC_bit, n, secrets, CTRL_bin ), UseNonce( n )
  ]->
   [
   Out( senc('done', get_encryption_key(master_secret)) ),
   !TNIC_Session_fin( $TNIC_ID, TNIC_bit, secrets )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) attestation_10:
   [
   IP_Vendor_Session_3( $TNIC_ID, IPVendor_priv, n, n_IPVendor_mTLS, $CTRL,
                        Ctrl_pub, master_secret, TNIC_bit, secrets
   ),
   In( senc('done', get_encryption_key(master_secret)) )
   ]
  --[
  IPVendorDone( $TNIC_ID, TNIC_bit, n, secrets,
                embed_certificate($CTRL, pk(IPVendor_priv))
  ),
  UseNonce( n )
  ]->
   [ ]

  /* has exactly the trivial AC variant */

restriction Restr_init_ctrs_1:
  "∀ x #NOW x.1. (Restr_init_ctrs_1( x, x.1 ) @ #NOW) ⇒ (¬(x = x.1))"
  // safety formula

rule (modulo E) init_ctrs:
   [ !TNIC_Session_fin( $TNIC_A, TNIC_bit, secrets ) ]
  --[
  ConnectionConfigured( secrets, $TNIC_A, $TNIC_B ),
  Restr_init_ctrs_1( $TNIC_A, $TNIC_B )
  ]->
   [
   !TNIC_Connection( $TNIC_A, $TNIC_B, secrets ),
   TNIC_RecvCounter( secrets, $TNIC_A, $TNIC_B, %1 ),
   TNIC_SendCounter( secrets, $TNIC_A, $TNIC_B, %1 )
   ]

  /* has exactly the trivial AC variant */

restriction one_initialization:
  "∀ secrets tnic_a tnic_b #i #j.
    ((ConnectionConfigured( secrets, tnic_a, tnic_b ) @ #i) ∧
     (ConnectionConfigured( secrets, tnic_a, tnic_b ) @ #j)) ⇒
    (#i = #j)"
  // safety formula

restriction only_valid_configurations:
  "∀ secrets tnic_a tnic_b #i.
    (ConnectionConfigured( secrets, tnic_a, tnic_b ) @ #i) ⇒
    (∃ #j. Secrets( secrets ) @ #j)"

rule (modulo E) send_msg:
   [
   Fr( ~msg ), !TNIC_Connection( $TNIC_SEND, $TNIC_RECV, secrets ),
   TNIC_SendCounter( secrets, $TNIC_SEND, $TNIC_RECV, %send_cnt )
   ]
  --[
  TNICSendMsg( secrets, $TNIC_SEND, $TNIC_RECV, ~msg ),
  TNICSendMsgCtr( secrets, $TNIC_SEND, $TNIC_RECV, ~msg, %send_cnt ),
  TNICSendCtr( secrets, $TNIC_SEND, $TNIC_RECV, %send_cnt )
  ]->
   [
   TNIC_SendCounter( secrets, $TNIC_SEND, $TNIC_RECV, (%send_cnt%+%1) ),
   Out( senc(<
              hmac(get_session_key(secrets, $TNIC_SEND, $TNIC_RECV),
                   <~msg, %send_cnt>), 
              ~msg, %send_cnt>,
             get_session_key(secrets, $TNIC_SEND, $TNIC_RECV))
   )
   ]

  // loop breaker: [2]
  /* has exactly the trivial AC variant */

restriction ctr_increasing:
  "∀ secrets tnic1 tnic2 ctr1 ctr2 #i #j.
    (((TNICSendCtr( secrets, tnic1, tnic2, ctr1 ) @ #i) ∧
      (TNICSendCtr( secrets, tnic1, tnic2, ctr2 ) @ #j)) ∧
     (#i < #j)) ⇒
    (∃ z. ctr2 = (ctr1++z))"

restriction Restr_recv_msg_1:
  "∀ x #NOW x.1. (Restr_recv_msg_1( x, x.1 ) @ #NOW) ⇒ (x = x.1)"
  // safety formula

restriction Restr_recv_msg_2:
  "∀ x #NOW x.1. (Restr_recv_msg_2( x, x.1 ) @ #NOW) ⇒ (x = x.1)"
  // safety formula

rule (modulo E) recv_msg:
   [
   In( senc(<a, msg, %cnt>,
            get_session_key(secrets, $TNIC_SEND, $TNIC_RECV))
   ),
   !TNIC_Connection( $TNIC_SEND, $TNIC_RECV, secrets ),
   TNIC_RecvCounter( secrets, $TNIC_RECV, $TNIC_SEND, %recv_cnt )
   ]
  --[
  TNICAcceptMsg( secrets, $TNIC_SEND, $TNIC_RECV, msg ),
  Restr_recv_msg_1( hmac(get_session_key(secrets, $TNIC_SEND, $TNIC_RECV),
                         <msg, %cnt>),
                    a
  ),
  Restr_recv_msg_2( %cnt, %recv_cnt )
  ]->
   [ TNIC_RecvCounter( secrets, $TNIC_RECV, $TNIC_SEND, (%recv_cnt%+%1) ) ]

  // loop breaker: [2]
  /* has exactly the trivial AC variant */

rule (modulo E) compromise_tnic_private_key:
   [ !SensitiveInformation( type, information ) ]
  --[ Compromised( type, information ) ]->
   [ Out( information ) ]

  /* has exactly the trivial AC variant */

lemma sanity:
  exists-trace
  "((∀ n1 n2 #i #j.
      ((UseNonce( n1 ) @ #i) ∧ (UseNonce( n2 ) @ #j)) ⇒ (n1 = n2)) ∧
    (¬(∃ type info #i. Compromised( type, info ) @ #i))) ∧
   (∃ tnic bits n secrets ctrl #i #j.
     (CtrlDone( tnic, bits, n, secrets, ctrl ) @ #i) ∧
     (IPVendorDone( tnic, bits, n, secrets, ctrl ) @ #j))"
/*
guarded formula characterizing all satisfying traces:
"(∀ n1 n2 #i #j.
   (UseNonce( n1 ) @ #i) ∧ (UseNonce( n2 ) @ #j) ⇒ n1 = n2) ∧
 (∀ type info #i. (Compromised( type, info ) @ #i) ⇒ ⊥) ∧
 (∃ tnic bits n secrets ctrl #i #j.
   (CtrlDone( tnic, bits, n, secrets, ctrl ) @ #i) ∧
   (IPVendorDone( tnic, bits, n, secrets, ctrl ) @ #j))"
*/
simplify
solve( TNIC_Session_2( $TNIC_ID, $frm,
                       embed_certificate($CTRL, pk(IPVendor_priv)), Ctrl_priv, Ctrl_bin_cert, n,
                       master_secret
       ) ▶₀ #i )
  case attestation_6b
  solve( IP_Vendor_Session_3( $TNIC_ID, IPVendor_priv, n, n_IPVendor_mTLS,
                              $CTRL, Ctrl_pub, master_secret, bits, secrets
         ) ▶₀ #j )
    case attestation_6c_7_8
    solve( splitEqs(2) )
      case split_case_2
      solve( splitEqs(3) )
        case split_case_2
        solve( !KU( sign(<h(embed_certificate($CTRL, pk(~IPVendor_priv))), pk(x)
                         >,
                         ~HW_key_priv.1)
               ) @ #vk.14 )
          case attestation_2_3
          solve( !KU( senc(<'Bitstream', ~TNIC_bit>,
                           get_encryption_key(get_master_key(z, hmac(~n, ~n.1))))
                 ) @ #vk.1 )
            case attestation_6c_7_8
            solve( !KU( embed_certificate($CTRL, pk(~IPVendor_priv)) ) @ #vk.9 )
              case c_embed_certificate
              solve( !KU( senc(<'frm', $frm>, ~HW_key_priv) ) @ #vk.10 )
                case publish_firmware
                solve( !KU( mTLS_handshake(hmac(~n, ~n.1), ~IPVendor_priv,
                                           pk(~Ctrl_priv))
                       ) @ #vk.9 )
                  case attestation_4_5_6a
                  solve( !KU( ~n ) @ #vk.10 )
                    case attestation_1
                    solve( !KU( sign(<~n, 
                                      <h(embed_certificate($CTRL, pk(~IPVendor_priv))), pk(~Ctrl_priv)>, 
                                      sign(<h(embed_certificate($CTRL, pk(~IPVendor_priv))), pk(~Ctrl_priv)>,
                                           ~HW_key_priv)
                                     >,
                                     ~Ctrl_priv)
                           ) @ #vk.15 )
                      case attestation_2_3
                      solve( !KU( senc(<'Secrets', ~secrets>,
                                       get_encryption_key(get_master_key(hmac(~n, ~n.1), hmac(~n, ~n.2))))
                             ) @ #vk.10 )
                        case attestation_6c_7_8
                        solve( !KU( senc('done',
                                         get_encryption_key(get_master_key(hmac(~n, ~n.1), hmac(~n, ~n.2))))
                               ) @ #vk.11 )
                          case attestation_9
                          solve( !KU( h(embed_certificate($CTRL, pk(~IPVendor_priv))) ) @ #vk.14 )
                            case attestation_2_3
                            solve( !KU( senc(<'frm', $frm.1>, ~HW_key_priv.1) ) @ #vk.18 )
                              case publish_firmware
                              solve( !KU( pk(~Ctrl_priv) ) @ #vk.16 )
                                case attestation_2_3
                                solve( !KU( mTLS_handshake(hmac(~n, ~n.2), ~Ctrl_priv,
                                                           pk(~IPVendor_priv))
                                       ) @ #vk.16 )
                                  case attestation_6b
                                  solve( !KU( pk(~IPVendor_priv) ) @ #vk.18 )
                                    case create_IPVendor_certificate
                                    SOLVED // trace found
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma sensitive_info_stays_secret [reuse]:
  all-traces
  "∀ type info #i #k.
    ((NewSensitiveInformation( type, info ) @ #i) ∧ (K( info ) @ #k)) ⇒
    ((∃ #c. (#c < #k) ∧ (Compromised( type, info ) @ #c)) ∨
     ((((type = 'Bitstream') ∨ (type = 'Secrets')) ∨
       (type = 'MasterSecret')) ∧
      ((((∃ x #c. (#c < #k) ∧ (Compromised( 'IPVendorPriv', x ) @ #c)) ∨
         (∃ x #c. (#c < #k) ∧ (Compromised( 'CtrlPriv', x ) @ #c))) ∨
        (∃ x #c. (#c < #k) ∧ (Compromised( 'HwKeyPriv', x ) @ #c))) ∨
       (∃ x #c. (#c < #k) ∧ (Compromised( 'MasterSecret', x ) @ #c)))))"
/*
guarded formula characterizing all counter-examples:
"∃ type info #i #k.
  (NewSensitiveInformation( type, info ) @ #i) ∧ (K( info ) @ #k)
 ∧
  (∀ #c. (Compromised( type, info ) @ #c) ⇒ ¬(#c < #k)) ∧
  ((((¬(type = 'Bitstream')) ∧
     (¬(type = 'Secrets')) ∧
     (¬(type = 'MasterSecret'))) ∨
    ((∀ x #c. (Compromised( 'IPVendorPriv', x ) @ #c) ⇒ ¬(#c < #k)) ∧
     (∀ x #c. (Compromised( 'CtrlPriv', x ) @ #c) ⇒ ¬(#c < #k)) ∧
     (∀ x #c. (Compromised( 'HwKeyPriv', x ) @ #c) ⇒ ¬(#c < #k)) ∧
     (∀ x #c. (Compromised( 'MasterSecret', x ) @ #c) ⇒ ¬(#c < #k)))))"
*/
simplify
solve( ((¬(type = 'Bitstream')) ∧
        (¬(type = 'Secrets')) ∧
        (¬(type = 'MasterSecret')))  ∥
       ((∀ x #c. (Compromised( 'IPVendorPriv', x ) @ #c) ⇒ ¬(#c < #k)) ∧
        (∀ x #c. (Compromised( 'CtrlPriv', x ) @ #c) ⇒ ¬(#c < #k)) ∧
        (∀ x #c. (Compromised( 'HwKeyPriv', x ) @ #c) ⇒ ¬(#c < #k)) ∧
        (∀ x #c. (Compromised( 'MasterSecret', x ) @ #c) ⇒ ¬(#c < #k))) )
  case case_1
  solve( NewSensitiveInformation( type, info ) @ #i )
    case attestation_6c_7_8
    by contradiction /* from formulas */
  next
    case bootstrapping_1
    solve( !KU( ~HW_key_priv ) @ #vk )
      case compromise_tnic_private_key
      by contradiction /* from formulas */
    qed
  next
    case bootstrapping_3_4_5
    solve( !TNIC_HW_B1( $TNIC_ID, HW_key_priv, $frm ) ▶₀ #i )
      case bootstrapping_2
      solve( !KU( ~Ctrl_priv ) @ #vk )
        case compromise_tnic_private_key
        by contradiction /* from formulas */
      qed
    qed
  next
    case create_IPVendor_certificate
    solve( !KU( ~IPVendor_priv ) @ #vk )
      case compromise_tnic_private_key
      by contradiction /* from formulas */
    qed
  next
    case create_bitstream
    by contradiction /* from formulas */
  next
    case create_secrets
    by contradiction /* from formulas */
  qed
next
  case case_2
  solve( NewSensitiveInformation( type, info ) @ #i )
    case attestation_6c_7_8
    solve( !IP_Vendor_Bitstream( TNIC_bit ) ▶₀ #i )
      case create_bitstream
      solve( !IP_Vendor_Secrets( secrets ) ▶₁ #i )
        case create_secrets
        solve( IP_Vendor_Session_2( $TNIC_ID, IPVendor_priv, n, n_IPVendor_mTLS,
                                    $CTRL, Ctrl_pub
               ) ▶₂ #i )
          case attestation_4_5_6a
          solve( splitEqs(0) )
            case split_case_1
            solve( !KU( sign(<h(embed_certificate($CTRL, pk(~IPVendor_priv))), pk(x)
                             >,
                             ~HW_key_priv)
                   ) @ #vk.9 )
              case attestation_2_3
              solve( !KU( sign(<~n, 
                                <h(embed_certificate($CTRL, pk(~IPVendor_priv))), pk(~Ctrl_priv)>, 
                                sign(<h(embed_certificate($CTRL, pk(~IPVendor_priv))), pk(~Ctrl_priv)>,
                                     ~HW_key_priv)
                               >,
                               ~Ctrl_priv)
                     ) @ #vk.10 )
                case attestation_2_3
                solve( !KU( get_master_key(hmac(~n, ~n.1),
                                           get_mTLS_key_half(partial_mTLS, ~IPVendor_priv, pk(~Ctrl_priv)))
                       ) @ #vk.4 )
                  case c_get_master_key
                  solve( !KU( get_mTLS_key_half(partial_mTLS, ~IPVendor_priv,
                                                pk(~Ctrl_priv))
                         ) @ #vk.14 )
                    case c_get_mTLS_key_half
                    solve( !KU( ~IPVendor_priv ) @ #vk.15 )
                      case compromise_tnic_private_key
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case compromise_tnic_private_key
                  by contradiction /* from formulas */
                qed
              next
                case c_sign
                solve( !KU( ~Ctrl_priv ) @ #vk.14 )
                  case compromise_tnic_private_key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case c_sign
              solve( !KU( ~HW_key_priv ) @ #vk.11 )
                case compromise_tnic_private_key
                by contradiction /* from formulas */
              qed
            qed
          next
            case split_case_2
            solve( !KU( sign(<h(embed_certificate($CTRL, pk(~IPVendor_priv))), pk(x)
                             >,
                             ~HW_key_priv)
                   ) @ #vk.9 )
              case attestation_2_3
              solve( !KU( sign(<~n, 
                                <h(embed_certificate($CTRL, pk(~IPVendor_priv))), pk(~Ctrl_priv)>, 
                                sign(<h(embed_certificate($CTRL, pk(~IPVendor_priv))), pk(~Ctrl_priv)>,
                                     ~HW_key_priv)
                               >,
                               ~Ctrl_priv)
                     ) @ #vk.10 )
                case attestation_2_3
                solve( !KU( get_master_key(hmac(~n, ~n.1), z) ) @ #vk.4 )
                  case c_get_master_key
                  solve( !KU( mTLS_handshake(z, ~Ctrl_priv, pk(~IPVendor_priv)) ) @ #vk.6 )
                    case attestation_6b
                    solve( splitEqs(2) )
                      case split_case_1
                      solve( !KU( embed_certificate($CTRL, pk(~IPVendor_priv)) ) @ #vk.11 )
                        case c_embed_certificate
                        solve( !KU( senc(<'frm', $frm>, ~HW_key_priv) ) @ #vk.12 )
                          case c_senc
                          solve( !KU( ~HW_key_priv ) @ #vk.19 )
                            case compromise_tnic_private_key
                            by contradiction /* from formulas */
                          qed
                        next
                          case publish_firmware
                          solve( !KU( hmac(~n, ~n.1) ) @ #vk.13 )
                            case attestation_4_5_6a
                            solve( !KU( ~Ctrl_priv ) @ #vk.18 )
                              case compromise_tnic_private_key
                              by contradiction /* from formulas */
                            qed
                          next
                            case c_hmac
                            by solve( !KU( ~n.1 ) @ #vk.18 )
                          qed
                        qed
                      next
                        case create_controller
                        solve( !KU( senc(<'frm', $frm>, ~HW_key_priv) ) @ #vk.12 )
                          case c_senc
                          solve( !KU( ~HW_key_priv ) @ #vk.18 )
                            case compromise_tnic_private_key
                            by contradiction /* from formulas */
                          qed
                        next
                          case publish_firmware
                          solve( !KU( hmac(~n, ~n.1) ) @ #vk.13 )
                            case attestation_4_5_6a
                            solve( !KU( ~Ctrl_priv ) @ #vk.17 )
                              case compromise_tnic_private_key
                              by contradiction /* from formulas */
                            qed
                          next
                            case c_hmac
                            by solve( !KU( ~n.1 ) @ #vk.17 )
                          qed
                        qed
                      qed
                    next
                      case split_case_2
                      solve( !KU( embed_certificate($CTRL, pk(~IPVendor_priv)) ) @ #vk.11 )
                        case c_embed_certificate
                        solve( !KU( senc(<'frm', $frm>, ~HW_key_priv) ) @ #vk.12 )
                          case c_senc
                          solve( !KU( ~HW_key_priv ) @ #vk.19 )
                            case compromise_tnic_private_key
                            by contradiction /* from formulas */
                          qed
                        next
                          case publish_firmware
                          solve( !KU( hmac(~n, ~n.1) ) @ #vk.13 )
                            case attestation_4_5_6a
                            solve( !KU( ~Ctrl_priv ) @ #vk.18 )
                              case compromise_tnic_private_key
                              by contradiction /* from formulas */
                            qed
                          next
                            case c_hmac
                            by solve( !KU( ~n.1 ) @ #vk.18 )
                          qed
                        qed
                      next
                        case create_controller
                        solve( !KU( senc(<'frm', $frm>, ~HW_key_priv) ) @ #vk.12 )
                          case c_senc
                          solve( !KU( ~HW_key_priv ) @ #vk.18 )
                            case compromise_tnic_private_key
                            by contradiction /* from formulas */
                          qed
                        next
                          case publish_firmware
                          solve( !KU( hmac(~n, ~n.1) ) @ #vk.13 )
                            case attestation_4_5_6a
                            solve( !KU( ~Ctrl_priv ) @ #vk.17 )
                              case compromise_tnic_private_key
                              by contradiction /* from formulas */
                            qed
                          next
                            case c_hmac
                            by solve( !KU( ~n.1 ) @ #vk.17 )
                          qed
                        qed
                      qed
                    qed
                  next
                    case c_mTLS_handshake
                    solve( !KU( ~Ctrl_priv ) @ #vk.15 )
                      case compromise_tnic_private_key
                      solve( !KU( embed_certificate($CTRL, pk(~IPVendor_priv)) ) @ #vk.12 )
                        case c_embed_certificate
                        solve( !KU( senc(<'frm', $frm>, ~HW_key_priv) ) @ #vk.13 )
                          case c_senc
                          solve( !KU( ~HW_key_priv ) @ #vk.19 )
                            case compromise_tnic_private_key
                            by contradiction /* from formulas */
                          qed
                        next
                          case publish_firmware
                          solve( !KU( hmac(~n, ~n.1) ) @ #vk.14 )
                            case attestation_4_5_6a
                            by contradiction /* cyclic */
                          next
                            case c_hmac
                            by solve( !KU( ~n.1 ) @ #vk.18 )
                          qed
                        qed
                      next
                        case create_controller
                        solve( !KU( senc(<'frm', $frm>, ~HW_key_priv) ) @ #vk.13 )
                          case c_senc
                          solve( !KU( ~HW_key_priv ) @ #vk.18 )
                            case compromise_tnic_private_key
                            by contradiction /* from formulas */
                          qed
                        next
                          case publish_firmware
                          solve( !KU( hmac(~n, ~n.1) ) @ #vk.14 )
                            case attestation_4_5_6a
                            by contradiction /* cyclic */
                          next
                            case c_hmac
                            by solve( !KU( ~n.1 ) @ #vk.17 )
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case compromise_tnic_private_key
                  by contradiction /* from formulas */
                qed
              next
                case c_sign
                solve( !KU( ~Ctrl_priv ) @ #vk.14 )
                  case compromise_tnic_private_key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case c_sign
              solve( !KU( ~HW_key_priv ) @ #vk.11 )
                case compromise_tnic_private_key
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case bootstrapping_1
    solve( !KU( ~HW_key_priv ) @ #vk )
      case compromise_tnic_private_key
      by contradiction /* from formulas */
    qed
  next
    case bootstrapping_3_4_5
    solve( !TNIC_HW_B1( $TNIC_ID, HW_key_priv, $frm ) ▶₀ #i )
      case bootstrapping_2
      solve( !KU( ~Ctrl_priv ) @ #vk )
        case compromise_tnic_private_key
        by contradiction /* from formulas */
      qed
    qed
  next
    case create_IPVendor_certificate
    solve( !KU( ~IPVendor_priv ) @ #vk )
      case compromise_tnic_private_key
      by contradiction /* from formulas */
    qed
  next
    case create_bitstream
    solve( !KU( ~TNIC_bit ) @ #vk )
      case attestation_6c_7_8
      solve( splitEqs(1) )
        case split_case_1
        solve( !KU( sign(<h(embed_certificate($CTRL, pk(~IPVendor_priv))), pk(x)
                         >,
                         ~HW_key_priv)
               ) @ #vk.10 )
          case attestation_2_3
          solve( !KU( sign(<~n, 
                            <h(embed_certificate($CTRL, pk(~IPVendor_priv))), pk(~Ctrl_priv)>, 
                            sign(<h(embed_certificate($CTRL, pk(~IPVendor_priv))), pk(~Ctrl_priv)>,
                                 ~HW_key_priv)
                           >,
                           ~Ctrl_priv)
                 ) @ #vk.11 )
            case attestation_2_3
            solve( !KU( get_master_key(hmac(~n, ~n.1),
                                       get_mTLS_key_half(partial_mTLS, ~IPVendor_priv, pk(~Ctrl_priv)))
                   ) @ #vk.12 )
              case c_get_master_key
              solve( !KU( get_mTLS_key_half(partial_mTLS, ~IPVendor_priv,
                                            pk(~Ctrl_priv))
                     ) @ #vk.16 )
                case c_get_mTLS_key_half
                solve( !KU( ~IPVendor_priv ) @ #vk.17 )
                  case compromise_tnic_private_key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case compromise_tnic_private_key
              by contradiction /* from formulas */
            qed
          next
            case c_sign
            solve( !KU( ~Ctrl_priv ) @ #vk.16 )
              case compromise_tnic_private_key
              by contradiction /* from formulas */
            qed
          qed
        next
          case c_sign
          solve( !KU( ~HW_key_priv ) @ #vk.13 )
            case compromise_tnic_private_key
            by contradiction /* from formulas */
          qed
        qed
      next
        case split_case_2
        solve( !KU( sign(<h(embed_certificate($CTRL, pk(~IPVendor_priv))), pk(x)
                         >,
                         ~HW_key_priv)
               ) @ #vk.10 )
          case attestation_2_3
          solve( !KU( sign(<~n, 
                            <h(embed_certificate($CTRL, pk(~IPVendor_priv))), pk(~Ctrl_priv)>, 
                            sign(<h(embed_certificate($CTRL, pk(~IPVendor_priv))), pk(~Ctrl_priv)>,
                                 ~HW_key_priv)
                           >,
                           ~Ctrl_priv)
                 ) @ #vk.11 )
            case attestation_2_3
            solve( !KU( get_master_key(hmac(~n, ~n.1), z) ) @ #vk.12 )
              case c_get_master_key
              solve( !KU( mTLS_handshake(z, ~Ctrl_priv, pk(~IPVendor_priv)) ) @ #vk.8 )
                case attestation_6b
                solve( splitEqs(3) )
                  case split_case_1
                  solve( !KU( embed_certificate($CTRL, pk(~IPVendor_priv)) ) @ #vk.13 )
                    case c_embed_certificate
                    solve( !KU( senc(<'frm', $frm>, ~HW_key_priv) ) @ #vk.14 )
                      case c_senc
                      solve( !KU( ~HW_key_priv ) @ #vk.21 )
                        case compromise_tnic_private_key
                        by contradiction /* from formulas */
                      qed
                    next
                      case publish_firmware
                      solve( !KU( hmac(~n, ~n.1) ) @ #vk.15 )
                        case attestation_4_5_6a
                        solve( !KU( ~Ctrl_priv ) @ #vk.20 )
                          case compromise_tnic_private_key
                          by contradiction /* from formulas */
                        qed
                      next
                        case c_hmac
                        by solve( !KU( ~n.1 ) @ #vk.20 )
                      qed
                    qed
                  next
                    case create_controller
                    solve( !KU( senc(<'frm', $frm>, ~HW_key_priv) ) @ #vk.14 )
                      case c_senc
                      solve( !KU( ~HW_key_priv ) @ #vk.20 )
                        case compromise_tnic_private_key
                        by contradiction /* from formulas */
                      qed
                    next
                      case publish_firmware
                      solve( !KU( hmac(~n, ~n.1) ) @ #vk.15 )
                        case attestation_4_5_6a
                        solve( !KU( ~Ctrl_priv ) @ #vk.19 )
                          case compromise_tnic_private_key
                          by contradiction /* from formulas */
                        qed
                      next
                        case c_hmac
                        by solve( !KU( ~n.1 ) @ #vk.19 )
                      qed
                    qed
                  qed
                next
                  case split_case_2
                  solve( !KU( embed_certificate($CTRL, pk(~IPVendor_priv)) ) @ #vk.13 )
                    case c_embed_certificate
                    solve( !KU( senc(<'frm', $frm>, ~HW_key_priv) ) @ #vk.14 )
                      case c_senc
                      solve( !KU( ~HW_key_priv ) @ #vk.21 )
                        case compromise_tnic_private_key
                        by contradiction /* from formulas */
                      qed
                    next
                      case publish_firmware
                      solve( !KU( hmac(~n, ~n.1) ) @ #vk.15 )
                        case attestation_4_5_6a
                        solve( !KU( ~Ctrl_priv ) @ #vk.20 )
                          case compromise_tnic_private_key
                          by contradiction /* from formulas */
                        qed
                      next
                        case c_hmac
                        by solve( !KU( ~n.1 ) @ #vk.20 )
                      qed
                    qed
                  next
                    case create_controller
                    solve( !KU( senc(<'frm', $frm>, ~HW_key_priv) ) @ #vk.14 )
                      case c_senc
                      solve( !KU( ~HW_key_priv ) @ #vk.20 )
                        case compromise_tnic_private_key
                        by contradiction /* from formulas */
                      qed
                    next
                      case publish_firmware
                      solve( !KU( hmac(~n, ~n.1) ) @ #vk.15 )
                        case attestation_4_5_6a
                        solve( !KU( ~Ctrl_priv ) @ #vk.19 )
                          case compromise_tnic_private_key
                          by contradiction /* from formulas */
                        qed
                      next
                        case c_hmac
                        by solve( !KU( ~n.1 ) @ #vk.19 )
                      qed
                    qed
                  qed
                qed
              next
                case c_mTLS_handshake
                solve( !KU( ~Ctrl_priv ) @ #vk.17 )
                  case compromise_tnic_private_key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case compromise_tnic_private_key
              by contradiction /* from formulas */
            qed
          next
            case c_sign
            solve( !KU( ~Ctrl_priv ) @ #vk.16 )
              case compromise_tnic_private_key
              by contradiction /* from formulas */
            qed
          qed
        next
          case c_sign
          solve( !KU( ~HW_key_priv ) @ #vk.13 )
            case compromise_tnic_private_key
            by contradiction /* from formulas */
          qed
        qed
      qed
    next
      case compromise_tnic_private_key
      by contradiction /* from formulas */
    qed
  next
    case create_secrets
    solve( !KU( ~secrets ) @ #vk )
      case attestation_6c_7_8
      solve( splitEqs(1) )
        case split_case_1
        solve( !KU( sign(<h(embed_certificate($CTRL, pk(~IPVendor_priv))), pk(x)
                         >,
                         ~HW_key_priv)
               ) @ #vk.10 )
          case attestation_2_3
          solve( !KU( sign(<~n, 
                            <h(embed_certificate($CTRL, pk(~IPVendor_priv))), pk(~Ctrl_priv)>, 
                            sign(<h(embed_certificate($CTRL, pk(~IPVendor_priv))), pk(~Ctrl_priv)>,
                                 ~HW_key_priv)
                           >,
                           ~Ctrl_priv)
                 ) @ #vk.11 )
            case attestation_2_3
            solve( !KU( get_master_key(hmac(~n, ~n.1),
                                       get_mTLS_key_half(partial_mTLS, ~IPVendor_priv, pk(~Ctrl_priv)))
                   ) @ #vk.12 )
              case c_get_master_key
              solve( !KU( get_mTLS_key_half(partial_mTLS, ~IPVendor_priv,
                                            pk(~Ctrl_priv))
                     ) @ #vk.16 )
                case c_get_mTLS_key_half
                solve( !KU( ~IPVendor_priv ) @ #vk.17 )
                  case compromise_tnic_private_key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case compromise_tnic_private_key
              by contradiction /* from formulas */
            qed
          next
            case c_sign
            solve( !KU( ~Ctrl_priv ) @ #vk.16 )
              case compromise_tnic_private_key
              by contradiction /* from formulas */
            qed
          qed
        next
          case c_sign
          solve( !KU( ~HW_key_priv ) @ #vk.13 )
            case compromise_tnic_private_key
            by contradiction /* from formulas */
          qed
        qed
      next
        case split_case_2
        solve( !KU( sign(<h(embed_certificate($CTRL, pk(~IPVendor_priv))), pk(x)
                         >,
                         ~HW_key_priv)
               ) @ #vk.10 )
          case attestation_2_3
          solve( !KU( sign(<~n, 
                            <h(embed_certificate($CTRL, pk(~IPVendor_priv))), pk(~Ctrl_priv)>, 
                            sign(<h(embed_certificate($CTRL, pk(~IPVendor_priv))), pk(~Ctrl_priv)>,
                                 ~HW_key_priv)
                           >,
                           ~Ctrl_priv)
                 ) @ #vk.11 )
            case attestation_2_3
            solve( !KU( get_master_key(hmac(~n, ~n.1), z) ) @ #vk.12 )
              case c_get_master_key
              solve( !KU( mTLS_handshake(z, ~Ctrl_priv, pk(~IPVendor_priv)) ) @ #vk.8 )
                case attestation_6b
                solve( splitEqs(3) )
                  case split_case_1
                  solve( !KU( embed_certificate($CTRL, pk(~IPVendor_priv)) ) @ #vk.13 )
                    case c_embed_certificate
                    solve( !KU( senc(<'frm', $frm>, ~HW_key_priv) ) @ #vk.14 )
                      case c_senc
                      solve( !KU( ~HW_key_priv ) @ #vk.21 )
                        case compromise_tnic_private_key
                        by contradiction /* from formulas */
                      qed
                    next
                      case publish_firmware
                      solve( !KU( hmac(~n, ~n.1) ) @ #vk.15 )
                        case attestation_4_5_6a
                        solve( !KU( ~Ctrl_priv ) @ #vk.20 )
                          case compromise_tnic_private_key
                          by contradiction /* from formulas */
                        qed
                      next
                        case c_hmac
                        by solve( !KU( ~n.1 ) @ #vk.20 )
                      qed
                    qed
                  next
                    case create_controller
                    solve( !KU( senc(<'frm', $frm>, ~HW_key_priv) ) @ #vk.14 )
                      case c_senc
                      solve( !KU( ~HW_key_priv ) @ #vk.20 )
                        case compromise_tnic_private_key
                        by contradiction /* from formulas */
                      qed
                    next
                      case publish_firmware
                      solve( !KU( hmac(~n, ~n.1) ) @ #vk.15 )
                        case attestation_4_5_6a
                        solve( !KU( ~Ctrl_priv ) @ #vk.19 )
                          case compromise_tnic_private_key
                          by contradiction /* from formulas */
                        qed
                      next
                        case c_hmac
                        by solve( !KU( ~n.1 ) @ #vk.19 )
                      qed
                    qed
                  qed
                next
                  case split_case_2
                  solve( !KU( embed_certificate($CTRL, pk(~IPVendor_priv)) ) @ #vk.13 )
                    case c_embed_certificate
                    solve( !KU( senc(<'frm', $frm>, ~HW_key_priv) ) @ #vk.14 )
                      case c_senc
                      solve( !KU( ~HW_key_priv ) @ #vk.21 )
                        case compromise_tnic_private_key
                        by contradiction /* from formulas */
                      qed
                    next
                      case publish_firmware
                      solve( !KU( hmac(~n, ~n.1) ) @ #vk.15 )
                        case attestation_4_5_6a
                        solve( !KU( ~Ctrl_priv ) @ #vk.20 )
                          case compromise_tnic_private_key
                          by contradiction /* from formulas */
                        qed
                      next
                        case c_hmac
                        by solve( !KU( ~n.1 ) @ #vk.20 )
                      qed
                    qed
                  next
                    case create_controller
                    solve( !KU( senc(<'frm', $frm>, ~HW_key_priv) ) @ #vk.14 )
                      case c_senc
                      solve( !KU( ~HW_key_priv ) @ #vk.20 )
                        case compromise_tnic_private_key
                        by contradiction /* from formulas */
                      qed
                    next
                      case publish_firmware
                      solve( !KU( hmac(~n, ~n.1) ) @ #vk.15 )
                        case attestation_4_5_6a
                        solve( !KU( ~Ctrl_priv ) @ #vk.19 )
                          case compromise_tnic_private_key
                          by contradiction /* from formulas */
                        qed
                      next
                        case c_hmac
                        by solve( !KU( ~n.1 ) @ #vk.19 )
                      qed
                    qed
                  qed
                qed
              next
                case c_mTLS_handshake
                solve( !KU( ~Ctrl_priv ) @ #vk.17 )
                  case compromise_tnic_private_key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case compromise_tnic_private_key
              by contradiction /* from formulas */
            qed
          next
            case c_sign
            solve( !KU( ~Ctrl_priv ) @ #vk.16 )
              case compromise_tnic_private_key
              by contradiction /* from formulas */
            qed
          qed
        next
          case c_sign
          solve( !KU( ~HW_key_priv ) @ #vk.13 )
            case compromise_tnic_private_key
            by contradiction /* from formulas */
          qed
        qed
      qed
    next
      case compromise_tnic_private_key
      by contradiction /* from formulas */
    qed
  qed
qed

lemma fresh_info_is_not_reused:
  all-traces
  "∀ type info #i.
    (EnsureFreshInformation( type, info ) @ #i) ⇒
    ((∀ #c. (EnsureFreshInformation( type, info ) @ #c) ⇒ (#c = #i)) ∨
     ((((∃ x #c. Compromised( 'IPVendorPriv', x ) @ #c) ∨
        (∃ x #c. Compromised( 'CtrlPriv', x ) @ #c)) ∨
       (∃ x #c. Compromised( 'HwKeyPriv', x ) @ #c)) ∨
      (∃ x #c. Compromised( 'MasterSecret', x ) @ #c)))"
/*
guarded formula characterizing all counter-examples:
"∃ type info #i.
  (EnsureFreshInformation( type, info ) @ #i)
 ∧
  (∃ #c. (EnsureFreshInformation( type, info ) @ #c) ∧ ¬(#c = #i)) ∧
  (∀ x #c. (Compromised( 'IPVendorPriv', x ) @ #c) ⇒ ⊥) ∧
  (∀ x #c. (Compromised( 'CtrlPriv', x ) @ #c) ⇒ ⊥) ∧
  (∀ x #c. (Compromised( 'HwKeyPriv', x ) @ #c) ⇒ ⊥) ∧
  (∀ x #c. (Compromised( 'MasterSecret', x ) @ #c) ⇒ ⊥)"
*/
simplify
solve( (#c < #i)  ∥ (#i < #c) )
  case case_1
  solve( EnsureFreshInformation( type, info ) @ #i )
    case attestation_6b_case_1
    solve( TNIC_Session_1( $TNIC_ID, $frm, CTRL_bin, Ctrl_priv,
                           Ctrl_bin_cert, n.1
           ) ▶₁ #i )
      case attestation_2_3
      solve( EnsureFreshInformation( 'CtrlPartialmTLS',
                                     <hmac(n.1, ~n), partial_mTLS>
             ) @ #c )
        case attestation_6b
        by contradiction /* cyclic */
      qed
    qed
  next
    case attestation_6b_case_2
    solve( TNIC_Session_1( $TNIC_ID, $frm, CTRL_bin, Ctrl_priv,
                           Ctrl_bin_cert, n.1
           ) ▶₁ #i )
      case attestation_2_3
      solve( EnsureFreshInformation( 'CtrlMasterSecret',
                                     get_master_key(z, hmac(n.1, ~n))
             ) @ #c )
        case attestation_6b
        by contradiction /* cyclic */
      qed
    qed
  next
    case attestation_6c_7_8_case_1
    solve( !IP_Vendor_Bitstream( TNIC_bit ) ▶₀ #i )
      case create_bitstream
      solve( !IP_Vendor_Secrets( secrets ) ▶₁ #i )
        case create_secrets
        solve( IP_Vendor_Session_2( $TNIC_ID, IPVendor_priv, n, n_IPVendor_mTLS,
                                    $CTRL, Ctrl_pub
               ) ▶₂ #i )
          case attestation_4_5_6a
          solve( EnsureFreshInformation( 'IPVendorPartialmTLS',
                                         <hmac(~n, ~n.1), partial_mTLS>
                 ) @ #c )
            case attestation_6c_7_8
            solve( !IP_Vendor_Bitstream( TNIC_bit ) ▶₀ #c )
              case create_bitstream
              solve( !IP_Vendor_Secrets( secrets ) ▶₁ #c )
                case create_secrets
                solve( IP_Vendor_Session_2( $TNIC_ID, IPVendor_priv, n, hmac(~n.1, ~n.2),
                                            $CTRL, Ctrl_pub
                       ) ▶₂ #c )
                  case attestation_4_5_6a
                  by contradiction /* cyclic */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case attestation_6c_7_8_case_2
    solve( !IP_Vendor_Bitstream( TNIC_bit ) ▶₀ #i )
      case create_bitstream
      solve( !IP_Vendor_Secrets( secrets ) ▶₁ #i )
        case create_secrets
        solve( IP_Vendor_Session_2( $TNIC_ID, IPVendor_priv, n, n_IPVendor_mTLS,
                                    $CTRL, Ctrl_pub
               ) ▶₂ #i )
          case attestation_4_5_6a
          solve( EnsureFreshInformation( 'IPVendorMasterSecret',
                                         get_master_key(hmac(~n, ~n.1), z)
                 ) @ #c )
            case attestation_6c_7_8
            solve( !IP_Vendor_Bitstream( TNIC_bit ) ▶₀ #c )
              case create_bitstream
              solve( !IP_Vendor_Secrets( secrets ) ▶₁ #c )
                case create_secrets
                solve( IP_Vendor_Session_2( $TNIC_ID, IPVendor_priv, n, hmac(~n.1, ~n.2),
                                            $CTRL, Ctrl_pub
                       ) ▶₂ #c )
                  case attestation_4_5_6a
                  by contradiction /* cyclic */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
next
  case case_2
  solve( EnsureFreshInformation( type, info ) @ #i )
    case attestation_6b_case_1
    solve( TNIC_Session_1( $TNIC_ID, $frm, CTRL_bin, Ctrl_priv,
                           Ctrl_bin_cert, n.1
           ) ▶₁ #i )
      case attestation_2_3
      solve( EnsureFreshInformation( 'CtrlPartialmTLS',
                                     <hmac(n.1, ~n), partial_mTLS>
             ) @ #c )
        case attestation_6b
        by contradiction /* cyclic */
      qed
    qed
  next
    case attestation_6b_case_2
    solve( TNIC_Session_1( $TNIC_ID, $frm, CTRL_bin, Ctrl_priv,
                           Ctrl_bin_cert, n.1
           ) ▶₁ #i )
      case attestation_2_3
      solve( EnsureFreshInformation( 'CtrlMasterSecret',
                                     get_master_key(z, hmac(n.1, ~n))
             ) @ #c )
        case attestation_6b
        by contradiction /* cyclic */
      qed
    qed
  next
    case attestation_6c_7_8_case_1
    solve( !IP_Vendor_Bitstream( TNIC_bit ) ▶₀ #i )
      case create_bitstream
      solve( !IP_Vendor_Secrets( secrets ) ▶₁ #i )
        case create_secrets
        solve( IP_Vendor_Session_2( $TNIC_ID, IPVendor_priv, n, n_IPVendor_mTLS,
                                    $CTRL, Ctrl_pub
               ) ▶₂ #i )
          case attestation_4_5_6a
          solve( EnsureFreshInformation( 'IPVendorPartialmTLS',
                                         <hmac(~n, ~n.1), partial_mTLS>
                 ) @ #c )
            case attestation_6c_7_8
            solve( !IP_Vendor_Bitstream( TNIC_bit ) ▶₀ #c )
              case create_bitstream
              solve( !IP_Vendor_Secrets( secrets ) ▶₁ #c )
                case create_secrets
                solve( IP_Vendor_Session_2( $TNIC_ID, IPVendor_priv, n, hmac(~n.1, ~n.2),
                                            $CTRL, Ctrl_pub
                       ) ▶₂ #c )
                  case attestation_4_5_6a
                  by contradiction /* cyclic */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case attestation_6c_7_8_case_2
    solve( !IP_Vendor_Bitstream( TNIC_bit ) ▶₀ #i )
      case create_bitstream
      solve( !IP_Vendor_Secrets( secrets ) ▶₁ #i )
        case create_secrets
        solve( IP_Vendor_Session_2( $TNIC_ID, IPVendor_priv, n, n_IPVendor_mTLS,
                                    $CTRL, Ctrl_pub
               ) ▶₂ #i )
          case attestation_4_5_6a
          solve( EnsureFreshInformation( 'IPVendorMasterSecret',
                                         get_master_key(hmac(~n, ~n.1), z)
                 ) @ #c )
            case attestation_6c_7_8
            solve( !IP_Vendor_Bitstream( TNIC_bit ) ▶₀ #c )
              case create_bitstream
              solve( !IP_Vendor_Secrets( secrets ) ▶₁ #c )
                case create_secrets
                solve( IP_Vendor_Session_2( $TNIC_ID, IPVendor_priv, n, hmac(~n.1, ~n.2),
                                            $CTRL, Ctrl_pub
                       ) ▶₂ #c )
                  case attestation_4_5_6a
                  by contradiction /* cyclic */
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma initialization_attested:
  all-traces
  "∀ tnic bits n secrets ctrl #i.
    (IPVendorDone( tnic, bits, n, secrets, ctrl ) @ #i) ⇒
    ((∃ #j. (#j < #i) ∧ (CtrlDone( tnic, bits, n, secrets, ctrl ) @ #j)) ∨
     ((((∃ x #c. (#c < #i) ∧ (Compromised( 'IPVendorPriv', x ) @ #c)) ∨
        (∃ x #c. (#c < #i) ∧ (Compromised( 'CtrlPriv', x ) @ #c))) ∨
       (∃ x #c. (#c < #i) ∧ (Compromised( 'HwKeyPriv', x ) @ #c))) ∨
      (∃ x #c. (#c < #i) ∧ (Compromised( 'MasterSecret', x ) @ #c))))"
/*
guarded formula characterizing all counter-examples:
"∃ tnic bits n secrets ctrl #i.
  (IPVendorDone( tnic, bits, n, secrets, ctrl ) @ #i)
 ∧
  (∀ #j. (CtrlDone( tnic, bits, n, secrets, ctrl ) @ #j) ⇒ ¬(#j < #i)) ∧
  (∀ x #c. (Compromised( 'IPVendorPriv', x ) @ #c) ⇒ ¬(#c < #i)) ∧
  (∀ x #c. (Compromised( 'CtrlPriv', x ) @ #c) ⇒ ¬(#c < #i)) ∧
  (∀ x #c. (Compromised( 'HwKeyPriv', x ) @ #c) ⇒ ¬(#c < #i)) ∧
  (∀ x #c. (Compromised( 'MasterSecret', x ) @ #c) ⇒ ¬(#c < #i))"
*/
simplify
solve( IP_Vendor_Session_3( $TNIC_ID, IPVendor_priv, n, n_IPVendor_mTLS,
                            $CTRL, Ctrl_pub, master_secret, bits, secrets
       ) ▶₀ #i )
  case attestation_6c_7_8
  solve( splitEqs(1) )
    case split_case_1
    solve( !KU( sign(<h(embed_certificate($CTRL, pk(~IPVendor_priv))), pk(x)
                     >,
                     ~HW_key_priv)
           ) @ #vk.9 )
      case attestation_2_3
      solve( !KU( sign(<~n, 
                        <h(embed_certificate($CTRL, pk(~IPVendor_priv))), pk(~Ctrl_priv)>, 
                        sign(<h(embed_certificate($CTRL, pk(~IPVendor_priv))), pk(~Ctrl_priv)>,
                             ~HW_key_priv)
                       >,
                       ~Ctrl_priv)
             ) @ #vk.10 )
        case attestation_2_3
        solve( !KU( senc('done',
                         get_encryption_key(get_master_key(hmac(~n, ~n.1),
                                                           get_mTLS_key_half(partial_mTLS, ~IPVendor_priv,
                                                                             pk(~Ctrl_priv)))))
               ) @ #vk.4 )
          case c_senc
          solve( !KU( get_encryption_key(get_master_key(hmac(~n, ~n.1),
                                                        get_mTLS_key_half(partial_mTLS, ~IPVendor_priv,
                                                                          pk(~Ctrl_priv))))
                 ) @ #vk.14 )
            case c_get_encryption_key
            solve( !KU( embed_certificate($CTRL, pk(~IPVendor_priv)) ) @ #vk.12 )
              case c_embed_certificate
              solve( !KU( senc(<'frm', $frm>, ~HW_key_priv) ) @ #vk.13 )
                case c_senc
                solve( !KU( ~HW_key_priv ) @ #vk.19 )
                  case compromise_tnic_private_key
                  by contradiction /* from formulas */
                qed
              next
                case publish_firmware
                solve( !KU( get_master_key(hmac(~n, ~n.1),
                                           get_mTLS_key_half(partial_mTLS, ~IPVendor_priv, pk(~Ctrl_priv)))
                       ) @ #vk.15 )
                  case c_get_master_key
                  solve( !KU( get_mTLS_key_half(partial_mTLS, ~IPVendor_priv,
                                                pk(~Ctrl_priv))
                         ) @ #vk.19 )
                    case c_get_mTLS_key_half
                    solve( !KU( ~IPVendor_priv ) @ #vk.20 )
                      case compromise_tnic_private_key
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case compromise_tnic_private_key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case create_controller
              solve( !KU( senc(<'frm', $frm>, ~HW_key_priv) ) @ #vk.13 )
                case c_senc
                solve( !KU( ~HW_key_priv ) @ #vk.18 )
                  case compromise_tnic_private_key
                  by contradiction /* from formulas */
                qed
              next
                case publish_firmware
                solve( !KU( get_master_key(hmac(~n, ~n.1),
                                           get_mTLS_key_half(partial_mTLS, ~IPVendor_priv, pk(~Ctrl_priv)))
                       ) @ #vk.15 )
                  case c_get_master_key
                  solve( !KU( get_mTLS_key_half(partial_mTLS, ~IPVendor_priv,
                                                pk(~Ctrl_priv))
                         ) @ #vk.18 )
                    case c_get_mTLS_key_half
                    solve( !KU( ~IPVendor_priv ) @ #vk.19 )
                      case compromise_tnic_private_key
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case compromise_tnic_private_key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        qed
      next
        case c_sign
        solve( !KU( ~Ctrl_priv ) @ #vk.14 )
          case compromise_tnic_private_key
          by contradiction /* from formulas */
        qed
      qed
    next
      case c_sign
      solve( !KU( ~HW_key_priv ) @ #vk.11 )
        case compromise_tnic_private_key
        by contradiction /* from formulas */
      qed
    qed
  next
    case split_case_2
    solve( !KU( sign(<h(embed_certificate($CTRL, pk(~IPVendor_priv))), pk(x)
                     >,
                     ~HW_key_priv)
           ) @ #vk.9 )
      case attestation_2_3
      solve( !KU( sign(<~n, 
                        <h(embed_certificate($CTRL, pk(~IPVendor_priv))), pk(~Ctrl_priv)>, 
                        sign(<h(embed_certificate($CTRL, pk(~IPVendor_priv))), pk(~Ctrl_priv)>,
                             ~HW_key_priv)
                       >,
                       ~Ctrl_priv)
             ) @ #vk.10 )
        case attestation_2_3
        solve( !KU( senc('done',
                         get_encryption_key(get_master_key(hmac(~n, ~n.1), z)))
               ) @ #vk.4 )
          case attestation_9
          solve( !KU( mTLS_handshake(hmac(n.2, ~n.3), ~Ctrl_priv,
                                     pk(~IPVendor_priv))
                 ) @ #vk.6 )
            case attestation_6b
            solve( !KU( embed_certificate($CTRL, pk(~IPVendor_priv)) ) @ #vk.11 )
              case c_embed_certificate
              solve( !KU( senc(<'frm', $frm>, ~HW_key_priv) ) @ #vk.12 )
                case c_senc
                solve( !KU( ~HW_key_priv ) @ #vk.19 )
                  case compromise_tnic_private_key
                  by contradiction /* from formulas */
                qed
              next
                case publish_firmware
                solve( !KU( senc(<'Bitstream', TNIC_bit.1>,
                                 get_encryption_key(get_master_key(hmac(~n, ~n.1), hmac(~n, ~n.2))))
                       ) @ #vk.13 )
                  case attestation_6c_7_8
                  solve( !KU( senc(<'Secrets', secrets.1>,
                                   get_encryption_key(get_master_key(hmac(~n, ~n.1), hmac(~n, ~n.2))))
                         ) @ #vk.14 )
                    case attestation_6c_7_8
                    by contradiction /* from formulas */
                  next
                    case c_senc
                    solve( !KU( get_encryption_key(get_master_key(hmac(~n, ~n.1),
                                                                  hmac(~n, ~n.2)))
                           ) @ #vk.19 )
                      case c_get_encryption_key
                      solve( !KU( get_master_key(hmac(~n, ~n.1), hmac(~n, ~n.2)) ) @ #vk.22 )
                        case c_get_master_key
                        solve( !KU( hmac(~n, ~n.1) ) @ #vk.23 )
                          case attestation_4_5_6a
                          solve( !KU( ~Ctrl_priv ) @ #vk.25 )
                            case compromise_tnic_private_key
                            by contradiction /* from formulas */
                          qed
                        next
                          case c_hmac
                          by solve( !KU( ~n.1 ) @ #vk.25 )
                        qed
                      next
                        case compromise_tnic_private_key
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case c_senc
                  solve( !KU( get_encryption_key(get_master_key(hmac(~n, ~n.1),
                                                                hmac(~n, ~n.2)))
                         ) @ #vk.19 )
                    case c_get_encryption_key
                    solve( !KU( senc(<'Secrets', secrets.1>,
                                     get_encryption_key(get_master_key(hmac(~n, ~n.1), hmac(~n, ~n.2))))
                           ) @ #vk.15 )
                      case attestation_6c_7_8
                      solve( !KU( get_master_key(hmac(~n, ~n.1), hmac(~n, ~n.2)) ) @ #vk.22 )
                        case c_get_master_key
                        solve( !KU( hmac(~n, ~n.1) ) @ #vk.23 )
                          case attestation_4_5_6a
                          solve( !KU( ~Ctrl_priv ) @ #vk.25 )
                            case compromise_tnic_private_key
                            by contradiction /* from formulas */
                          qed
                        next
                          case c_hmac
                          by solve( !KU( ~n.1 ) @ #vk.25 )
                        qed
                      next
                        case compromise_tnic_private_key
                        by contradiction /* from formulas */
                      qed
                    next
                      case c_senc
                      solve( !KU( get_master_key(hmac(~n, ~n.1), hmac(~n, ~n.2)) ) @ #vk.22 )
                        case c_get_master_key
                        solve( !KU( hmac(~n, ~n.1) ) @ #vk.26 )
                          case attestation_4_5_6a
                          solve( !KU( ~Ctrl_priv ) @ #vk.28 )
                            case compromise_tnic_private_key
                            by contradiction /* from formulas */
                          qed
                        next
                          case c_hmac
                          by solve( !KU( ~n.1 ) @ #vk.28 )
                        qed
                      next
                        case compromise_tnic_private_key
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case create_controller
              solve( !KU( senc(<'frm', $frm>, ~HW_key_priv) ) @ #vk.12 )
                case c_senc
                solve( !KU( ~HW_key_priv ) @ #vk.18 )
                  case compromise_tnic_private_key
                  by contradiction /* from formulas */
                qed
              next
                case publish_firmware
                solve( !KU( senc(<'Bitstream', TNIC_bit.1>,
                                 get_encryption_key(get_master_key(hmac(~n, ~n.1), hmac(~n, ~n.2))))
                       ) @ #vk.13 )
                  case attestation_6c_7_8
                  solve( !KU( senc(<'Secrets', secrets.1>,
                                   get_encryption_key(get_master_key(hmac(~n, ~n.1), hmac(~n, ~n.2))))
                         ) @ #vk.14 )
                    case attestation_6c_7_8
                    by contradiction /* from formulas */
                  next
                    case c_senc
                    solve( !KU( get_encryption_key(get_master_key(hmac(~n, ~n.1),
                                                                  hmac(~n, ~n.2)))
                           ) @ #vk.18 )
                      case c_get_encryption_key
                      solve( !KU( get_master_key(hmac(~n, ~n.1), hmac(~n, ~n.2)) ) @ #vk.21 )
                        case c_get_master_key
                        solve( !KU( hmac(~n, ~n.1) ) @ #vk.22 )
                          case attestation_4_5_6a
                          solve( !KU( ~Ctrl_priv ) @ #vk.24 )
                            case compromise_tnic_private_key
                            by contradiction /* from formulas */
                          qed
                        next
                          case c_hmac
                          by solve( !KU( ~n.1 ) @ #vk.24 )
                        qed
                      next
                        case compromise_tnic_private_key
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case c_senc
                  solve( !KU( get_encryption_key(get_master_key(hmac(~n, ~n.1),
                                                                hmac(~n, ~n.2)))
                         ) @ #vk.18 )
                    case c_get_encryption_key
                    solve( !KU( senc(<'Secrets', secrets.1>,
                                     get_encryption_key(get_master_key(hmac(~n, ~n.1), hmac(~n, ~n.2))))
                           ) @ #vk.15 )
                      case attestation_6c_7_8
                      solve( !KU( get_master_key(hmac(~n, ~n.1), hmac(~n, ~n.2)) ) @ #vk.21 )
                        case c_get_master_key
                        solve( !KU( hmac(~n, ~n.1) ) @ #vk.22 )
                          case attestation_4_5_6a
                          solve( !KU( ~Ctrl_priv ) @ #vk.24 )
                            case compromise_tnic_private_key
                            by contradiction /* from formulas */
                          qed
                        next
                          case c_hmac
                          by solve( !KU( ~n.1 ) @ #vk.24 )
                        qed
                      next
                        case compromise_tnic_private_key
                        by contradiction /* from formulas */
                      qed
                    next
                      case c_senc
                      solve( !KU( get_master_key(hmac(~n, ~n.1), hmac(~n, ~n.2)) ) @ #vk.21 )
                        case c_get_master_key
                        solve( !KU( hmac(~n, ~n.1) ) @ #vk.25 )
                          case attestation_4_5_6a
                          solve( !KU( ~Ctrl_priv ) @ #vk.27 )
                            case compromise_tnic_private_key
                            by contradiction /* from formulas */
                          qed
                        next
                          case c_hmac
                          by solve( !KU( ~n.1 ) @ #vk.27 )
                        qed
                      next
                        case compromise_tnic_private_key
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case c_mTLS_handshake
            solve( !KU( ~Ctrl_priv ) @ #vk.20 )
              case compromise_tnic_private_key
              by contradiction /* from formulas */
            qed
          qed
        next
          case c_senc
          solve( !KU( get_encryption_key(get_master_key(hmac(~n, ~n.1), z))
                 ) @ #vk.14 )
            case c_get_encryption_key
            solve( !KU( mTLS_handshake(z, ~Ctrl_priv, pk(~IPVendor_priv)) ) @ #vk.7 )
              case attestation_6b
              solve( splitEqs(3) )
                case split_case_1
                solve( !KU( embed_certificate($CTRL, pk(~IPVendor_priv)) ) @ #vk.12 )
                  case c_embed_certificate
                  solve( !KU( senc(<'frm', $frm>, ~HW_key_priv) ) @ #vk.13 )
                    case c_senc
                    solve( !KU( ~HW_key_priv ) @ #vk.20 )
                      case compromise_tnic_private_key
                      by contradiction /* from formulas */
                    qed
                  next
                    case publish_firmware
                    solve( !KU( get_master_key(hmac(~n, ~n.1), hmac(~n, ~n.2)) ) @ #vk.15 )
                      case c_get_master_key
                      solve( !KU( hmac(~n, ~n.1) ) @ #vk.19 )
                        case attestation_4_5_6a
                        solve( !KU( ~Ctrl_priv ) @ #vk.21 )
                          case compromise_tnic_private_key
                          by contradiction /* from formulas */
                        qed
                      next
                        case c_hmac
                        by solve( !KU( ~n.1 ) @ #vk.21 )
                      qed
                    next
                      case compromise_tnic_private_key
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case create_controller
                  solve( !KU( senc(<'frm', $frm>, ~HW_key_priv) ) @ #vk.13 )
                    case c_senc
                    solve( !KU( ~HW_key_priv ) @ #vk.19 )
                      case compromise_tnic_private_key
                      by contradiction /* from formulas */
                    qed
                  next
                    case publish_firmware
                    solve( !KU( get_master_key(hmac(~n, ~n.1), hmac(~n, ~n.2)) ) @ #vk.15 )
                      case c_get_master_key
                      solve( !KU( hmac(~n, ~n.1) ) @ #vk.18 )
                        case attestation_4_5_6a
                        solve( !KU( ~Ctrl_priv ) @ #vk.20 )
                          case compromise_tnic_private_key
                          by contradiction /* from formulas */
                        qed
                      next
                        case c_hmac
                        by solve( !KU( ~n.1 ) @ #vk.20 )
                      qed
                    next
                      case compromise_tnic_private_key
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case split_case_2
                solve( !KU( embed_certificate($CTRL, pk(~IPVendor_priv)) ) @ #vk.12 )
                  case c_embed_certificate
                  solve( !KU( senc(<'frm', $frm>, ~HW_key_priv) ) @ #vk.13 )
                    case c_senc
                    solve( !KU( ~HW_key_priv ) @ #vk.20 )
                      case compromise_tnic_private_key
                      by contradiction /* from formulas */
                    qed
                  next
                    case publish_firmware
                    solve( !KU( get_master_key(hmac(~n, ~n.1), hmac(~n, ~n.2)) ) @ #vk.15 )
                      case c_get_master_key
                      solve( !KU( mTLS_handshake(z, ~IPVendor_priv, pk(~Ctrl_priv))
                             ) @ #vk.16 )
                        case attestation_4_5_6a
                        solve( !KU( sign(<h(embed_certificate($CTRL.1, pk(~IPVendor_priv))), 
                                          pk(~Ctrl_priv)>,
                                         ~HW_key_priv.1)
                               ) @ #vk.27 )
                          case attestation_2_3
                          solve( !KU( sign(<~n.3, 
                                            <h(embed_certificate($CTRL, pk(~IPVendor_priv))), pk(~Ctrl_priv)
                                            >, 
                                            sign(<h(embed_certificate($CTRL, pk(~IPVendor_priv))), 
                                                  pk(~Ctrl_priv)>,
                                                 ~HW_key_priv)
                                           >,
                                           ~Ctrl_priv)
                                 ) @ #vk.24 )
                            case attestation_2_3
                            solve( !KU( hmac(~n, ~n.1) ) @ #vk.19 )
                              case attestation_4_5_6a
                              solve( !KU( ~Ctrl_priv ) @ #vk.21 )
                                case compromise_tnic_private_key
                                by contradiction /* from formulas */
                              qed
                            next
                              case c_hmac
                              by solve( !KU( ~n.1 ) @ #vk.21 )
                            qed
                          next
                            case c_sign
                            solve( !KU( ~Ctrl_priv ) @ #vk.25 )
                              case compromise_tnic_private_key
                              by contradiction /* from formulas */
                            qed
                          qed
                        next
                          case c_sign
                          solve( !KU( ~HW_key_priv.1 ) @ #vk.29 )
                            case compromise_tnic_private_key
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case c_mTLS_handshake
                        solve( !KU( ~IPVendor_priv ) @ #vk.22 )
                          case compromise_tnic_private_key
                          by contradiction /* from formulas */
                        qed
                      qed
                    next
                      case compromise_tnic_private_key
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case create_controller
                  solve( !KU( senc(<'frm', $frm>, ~HW_key_priv) ) @ #vk.13 )
                    case c_senc
                    solve( !KU( ~HW_key_priv ) @ #vk.19 )
                      case compromise_tnic_private_key
                      by contradiction /* from formulas */
                    qed
                  next
                    case publish_firmware
                    solve( !KU( get_master_key(hmac(~n, ~n.1), hmac(~n, ~n.2)) ) @ #vk.15 )
                      case c_get_master_key
                      solve( !KU( mTLS_handshake(z, ~IPVendor_priv, pk(~Ctrl_priv))
                             ) @ #vk.16 )
                        case attestation_4_5_6a
                        solve( !KU( sign(<h(embed_certificate($CTRL.1, pk(~IPVendor_priv))), 
                                          pk(~Ctrl_priv)>,
                                         ~HW_key_priv.1)
                               ) @ #vk.26 )
                          case attestation_2_3
                          solve( !KU( sign(<~n.3, 
                                            <h(embed_certificate($CTRL, pk(~IPVendor_priv))), pk(~Ctrl_priv)
                                            >, 
                                            sign(<h(embed_certificate($CTRL, pk(~IPVendor_priv))), 
                                                  pk(~Ctrl_priv)>,
                                                 ~HW_key_priv)
                                           >,
                                           ~Ctrl_priv)
                                 ) @ #vk.23 )
                            case attestation_2_3
                            solve( !KU( hmac(~n, ~n.1) ) @ #vk.18 )
                              case attestation_4_5_6a
                              solve( !KU( ~Ctrl_priv ) @ #vk.20 )
                                case compromise_tnic_private_key
                                by contradiction /* from formulas */
                              qed
                            next
                              case c_hmac
                              by solve( !KU( ~n.1 ) @ #vk.20 )
                            qed
                          next
                            case c_sign
                            solve( !KU( ~Ctrl_priv ) @ #vk.24 )
                              case compromise_tnic_private_key
                              by contradiction /* from formulas */
                            qed
                          qed
                        next
                          case c_sign
                          solve( !KU( ~HW_key_priv.1 ) @ #vk.28 )
                            case compromise_tnic_private_key
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case c_mTLS_handshake
                        solve( !KU( ~IPVendor_priv ) @ #vk.21 )
                          case compromise_tnic_private_key
                          by contradiction /* from formulas */
                        qed
                      qed
                    next
                      case compromise_tnic_private_key
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            next
              case c_mTLS_handshake
              solve( !KU( ~Ctrl_priv ) @ #vk.17 )
                case compromise_tnic_private_key
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      next
        case c_sign
        solve( !KU( ~Ctrl_priv ) @ #vk.14 )
          case compromise_tnic_private_key
          by contradiction /* from formulas */
        qed
      qed
    next
      case c_sign
      solve( !KU( ~HW_key_priv ) @ #vk.11 )
        case compromise_tnic_private_key
        by contradiction /* from formulas */
      qed
    qed
  qed
qed

lemma send_sanity [heuristic=O "./tnic_oracle.py"]:
  exists-trace
  "((∃ tnic1 ctrl1 tnic2 ctrl2 bits secrets n1 n2 #a #b #j #l #m #n #o #p
       #q #r.
      ((((((((((((((TNICLoadController( tnic1, ctrl1 ) @ #a) ∧
                   (TNICLoadController( tnic2, ctrl2 ) @ #b)) ∧
                  (CtrlDone( tnic1, bits, n1, secrets, ctrl1 ) @ #j)) ∧
                 (CtrlDone( tnic2, bits, n2, secrets, ctrl2 ) @ #l)) ∧
                (StartUseNonce( n1 ) @ #m)) ∧
               (StartUseNonce( n2 ) @ #n)) ∧
              (ConnectionConfigured( secrets, tnic1, tnic2 ) @ #o)) ∧
             (ConnectionConfigured( secrets, tnic2, tnic1 ) @ #p)) ∧
            (IPVendorDone( tnic1, bits, n1, secrets, ctrl1 ) @ #q)) ∧
           (IPVendorDone( tnic2, bits, n2, secrets, ctrl2 ) @ #r)) ∧
          (∀ type x y #x.1 #y.1.
            (((((type = 'IPVendorPriv') ∨ (type = 'Bitstream')) ∨
               (type = 'Secrets')) ∧
              (NewSensitiveInformation( type, x ) @ #x.1)) ∧
             (NewSensitiveInformation( type, y ) @ #y.1)) ⇒
            (#x.1 = #y.1))) ∧
         (∀ secretsX tnic1X tnic2X #i.
           (ConnectionConfigured( secretsX, tnic1X, tnic2X ) @ #i) ⇒
           ((#i = #o) ∨ (#i = #p)))) ∧
        (∀ tnicX ctrlX #i.
          (TNICLoadController( tnicX, ctrlX ) @ #i) ⇒ ((#i = #a) ∨ (#i = #b)))) ∧
       (∀ tnicX ctrlX bitsX nX secretsX #i.
         (CtrlDone( tnicX, bitsX, nX, secretsX, ctrlX ) @ #i) ⇒
         ((#i = #j) ∨ (#i = #l)))) ∧
      (∀ n.1 #i. (UseNonce( n.1 ) @ #i) ⇒ ((n.1 = n1) ∨ (n.1 = n2)))) ∧
    (¬(∃ type info #i. Compromised( type, info ) @ #i))) ∧
   (∃ secrets tnic_a tnic_b msg #i.
     TNICAcceptMsg( secrets, tnic_a, tnic_b, msg ) @ #i)"
/*
guarded formula characterizing all satisfying traces:
"(∃ tnic1 ctrl1 tnic2 ctrl2 bits secrets n1 n2 #a #b #j #l #m #n #o #p #q
    #r.
   (TNICLoadController( tnic1, ctrl1 ) @ #a) ∧
   (TNICLoadController( tnic2, ctrl2 ) @ #b) ∧
   (CtrlDone( tnic1, bits, n1, secrets, ctrl1 ) @ #j) ∧
   (CtrlDone( tnic2, bits, n2, secrets, ctrl2 ) @ #l) ∧
   (StartUseNonce( n1 ) @ #m) ∧
   (StartUseNonce( n2 ) @ #n) ∧
   (ConnectionConfigured( secrets, tnic1, tnic2 ) @ #o) ∧
   (ConnectionConfigured( secrets, tnic2, tnic1 ) @ #p) ∧
   (IPVendorDone( tnic1, bits, n1, secrets, ctrl1 ) @ #q) ∧
   (IPVendorDone( tnic2, bits, n2, secrets, ctrl2 ) @ #r)
  ∧
   (∀ type x y #x.1 #y.1.
     (NewSensitiveInformation( type, x ) @ #x.1) ∧
     (NewSensitiveInformation( type, y ) @ #y.1)
    ⇒
     (((¬(type = 'IPVendorPriv')) ∧
       (¬(type = 'Bitstream')) ∧
       (¬(type = 'Secrets'))) ∨
      (#x.1 = #y.1))) ∧
   (∀ secretsX tnic1X tnic2X #i.
     (ConnectionConfigured( secretsX, tnic1X, tnic2X ) @ #i)
    ⇒
     ((#i = #o) ∨ (#i = #p))) ∧
   (∀ tnicX ctrlX #i.
     (TNICLoadController( tnicX, ctrlX ) @ #i) ⇒ ((#i = #a) ∨ (#i = #b))) ∧
   (∀ tnicX ctrlX bitsX nX secretsX #i.
     (CtrlDone( tnicX, bitsX, nX, secretsX, ctrlX ) @ #i)
    ⇒
     ((#i = #j) ∨ (#i = #l))) ∧
   (∀ n.1 #i. (UseNonce( n.1 ) @ #i) ⇒ ((n.1 = n1) ∨ (n.1 = n2)))) ∧
 (∀ type info #i. (Compromised( type, info ) @ #i) ⇒ ⊥) ∧
 (∃ secrets tnic_a tnic_b msg #i.
   (TNICAcceptMsg( secrets, tnic_a, tnic_b, msg ) @ #i))"
*/
simplify
solve( !TNIC_HW_B1( $TNIC_ID, HW_key_priv, $frm ) ▶₀ #a )
  case bootstrapping_2
  solve( !TNIC_HW_B1( $TNIC_ID.1, HW_key_priv.1, $frm.1 ) ▶₀ #b )
    case bootstrapping_2
    solve( TNIC_Session_2( $TNIC_ID, $frm.2,
                           embed_certificate($CTRL, pk(IPVendor_priv)), Ctrl_priv.2, Ctrl_bin_cert,
                           ~n, master_secret
           ) ▶₀ #j )
      case attestation_6b
      solve( (#vr.6 = #a)  ∥ (#vr.6 = #b) )
        case case_1
        solve( TNIC_Session_2( $TNIC_ID.1, $frm.2,
                               embed_certificate($CTRL.1, pk(IPVendor_priv.1)), Ctrl_priv.2,
                               Ctrl_bin_cert, ~n.2, master_secret
               ) ▶₀ #l )
          case attestation_6b
          solve( (#vr.8 = #a)  ∥ (#vr.8 = #b) )
            case case_2
            solve( !IP_Vendor_Certificate( IPVendor_priv.2 ) ▶₀ #m )
              case create_IPVendor_certificate
              solve( !IP_Vendor_Certificate( IPVendor_priv.3 ) ▶₀ #n.4 )
                case create_IPVendor_certificate
                solve( !TNIC_Session_fin( $TNIC_ID, TNIC_bit, ~secrets.1 ) ▶₀ #o )
                  case attestation_9
                  solve( (n.5 = ~n)  ∥ (n.5 = ~n.2) )
                    case case_1
                    solve( (#vr.9 = #j)  ∥ (#vr.9 = #l) )
                      case case_1
                      solve( !TNIC_Session_fin( $TNIC_ID.1, TNIC_bit.1, ~secrets.1 ) ▶₀ #p )
                        case attestation_9
                        solve( (n.5 = ~n)  ∥ (n.5 = ~n.2) )
                          case case_2
                          solve( (#vr.9 = #j)  ∥ (#vr.9 = #l) )
                            case case_2
                            solve( IP_Vendor_Session_3( $TNIC_ID, IPVendor_priv, ~n, n_IPVendor_mTLS,
                                                        $CTRL, Ctrl_pub, master_secret, TNIC_bit, ~secrets.1
                                   ) ▶₀ #q )
                              case attestation_6c_7_8
                              solve( IP_Vendor_Session_3( $TNIC_ID.1, IPVendor_priv.1, ~n.2,
                                                          n_IPVendor_mTLS, $CTRL.1, Ctrl_pub, master_secret,
                                                          ~TNIC_bit, ~secrets.1
                                     ) ▶₀ #r )
                                case attestation_6c_7_8
                                solve( !TNIC_Connection( $TNIC_SEND, $TNIC_RECV, secrets ) ▶₁ #i )
                                  case init_ctrs
                                  solve( (n.7 = ~n)  ∥ (n.7 = ~n.2) )
                                    case case_1
                                    solve( (#vr.16 = #o)  ∥ (#vr.16 = #p) )
                                      case case_1
                                      solve( splitEqs(14) )
                                        case split_case_2
                                        solve( splitEqs(15) )
                                          case split_case_2
                                          solve( splitEqs(18) )
                                            case split_case_2
                                            solve( splitEqs(19) )
                                              case split_case_2
                                              solve( !KU( sign(<
                                                                h(embed_certificate($CTRL,
                                                                                    pk(~IPVendor_priv))), 
                                                                pk(x)>,
                                                               ~HW_key_priv.2)
                                                     ) @ #vk.24 )
                                                case attestation_2_3
                                                solve( (n.7 = ~n)  ∥ (n.7 = ~n.2) )
                                                  case case_1
                                                  solve( (#vr.19 = #a)  ∥ (#vr.19 = #b) )
                                                    case case_1
                                                    solve( !KU( sign(<
                                                                      h(embed_certificate($CTRL.1,
                                                                                          pk(~IPVendor_priv))), 
                                                                      pk(x)>,
                                                                     ~HW_key_priv.2)
                                                           ) @ #vk.31 )
                                                      case attestation_2_3
                                                      solve( (n.7 = ~n)  ∥ (n.7 = ~n.2) )
                                                        case case_2
                                                        solve( (#vr.21 = #a)  ∥ (#vr.21 = #b) )
                                                          case case_2
                                                          solve( !KU( senc(<'Bitstream', ~TNIC_bit>,
                                                                           get_encryption_key(get_master_key(z,
                                                                                                             hmac(~n,
                                                                                                                  ~n.1))))
                                                                 ) @ #vk.10 )
                                                            case attestation_6c_7_8
                                                            solve( (~n.1 = ~n)  ∥ (~n.1 = ~n.4) )
                                                              case case_1
                                                              solve( !KU( senc(<'Bitstream', ~TNIC_bit>,
                                                                               get_encryption_key(get_master_key(z,
                                                                                                                 hmac(~n.3,
                                                                                                                      ~n.4))))
                                                                     ) @ #vk.12 )
                                                                case attestation_6c_7_8
                                                                solve( (~n.4 = ~n)  ∥ (~n.4 = ~n.3) )
                                                                  case case_2
                                                                  solve( !KU( senc(<
                                                                                    hmac(get_session_key(~secrets,
                                                                                                         $TNIC_ID,
                                                                                                         $TNIC_RECV),
                                                                                         <msg, %cnt>), 
                                                                                    msg, %cnt>,
                                                                                   get_session_key(~secrets,
                                                                                                   $TNIC_ID,
                                                                                                   $TNIC_RECV))
                                                                         ) @ #vk.16 )
                                                                    case send_msg
                                                                    solve( !KU( embed_certificate($CTRL,
                                                                                                  pk(~IPVendor_priv))
                                                                           ) @ #vk.11 )
                                                                      case c_embed_certificate
                                                                      solve( !KU( embed_certificate($CTRL.1,
                                                                                                    pk(~IPVendor_priv))
                                                                             ) @ #vk.12 )
                                                                        case c_embed_certificate
                                                                        solve( !KU( senc(<'frm', $frm>,
                                                                                         ~HW_key_priv)
                                                                               ) @ #vk.17 )
                                                                          case publish_firmware
                                                                          solve( !KU( senc(<'frm', $frm.1>,
                                                                                           ~HW_key_priv.1)
                                                                                 ) @ #vk.18 )
                                                                            case publish_firmware
                                                                            solve( TNIC_RecvCounter( ~secrets,
                                                                                                     $TNIC_RECV,
                                                                                                     $TNIC_ID,
                                                                                                     %cnt
                                                                                   ) ▶₂ #i )
                                                                              case init_ctrs
                                                                              solve( TNIC_SendCounter( ~secrets,
                                                                                                       $TNIC_ID,
                                                                                                       $TNIC_RECV,
                                                                                                       %1
                                                                                     ) ▶₂ #vr.20 )
                                                                                case init_ctrs
                                                                                solve( !KU( ~n ) @ #vk.20 )
                                                                                  case attestation_1
                                                                                  solve( !KU( ~n.3
                                                                                         ) @ #vk.22 )
                                                                                    case attestation_1
                                                                                    solve( !KU( sign(<~n, 
                                                                                                      <
                                                                                                       h(embed_certificate($CTRL,
                                                                                                                           pk(~IPVendor_priv))), 
                                                                                                       pk(~Ctrl_priv)
                                                                                                      >, 
                                                                                                      sign(<
                                                                                                            h(embed_certificate($CTRL,
                                                                                                                                pk(~IPVendor_priv))), 
                                                                                                            pk(~Ctrl_priv)
                                                                                                           >,
                                                                                                           ~HW_key_priv)
                                                                                                     >,
                                                                                                     ~Ctrl_priv)
                                                                                           ) @ #vk.27 )
                                                                                      case attestation_2_3
                                                                                      solve( !KU( sign(<~n.3, 
                                                                                                        <
                                                                                                         h(embed_certificate($CTRL.1,
                                                                                                                             pk(~IPVendor_priv))), 
                                                                                                         pk(~Ctrl_priv.1)
                                                                                                        >, 
                                                                                                        sign(<
                                                                                                              h(embed_certificate($CTRL.1,
                                                                                                                                  pk(~IPVendor_priv))), 
                                                                                                              pk(~Ctrl_priv.1)
                                                                                                             >,
                                                                                                             ~HW_key_priv.1)
                                                                                                       >,
                                                                                                       ~Ctrl_priv.1)
                                                                                             ) @ #vk.32 )
                                                                                        case attestation_2_3
                                                                                        solve( !KU( senc(<
                                                                                                          'Secrets', 
                                                                                                          ~secrets
                                                                                                         >,
                                                                                                         get_encryption_key(get_master_key(hmac(~n,
                                                                                                                                                ~n.1),
                                                                                                                                           hmac(~n,
                                                                                                                                                ~n.2))))
                                                                                               ) @ #vk.19 )
                                                                                          case attestation_6c_7_8
                                                                                          solve( !KU( senc(<
                                                                                                            'Secrets', 
                                                                                                            ~secrets
                                                                                                           >,
                                                                                                           get_encryption_key(get_master_key(hmac(~n.3,
                                                                                                                                                  ~n.4),
                                                                                                                                             hmac(~n.3,
                                                                                                                                                  ~n.5))))
                                                                                                 ) @ #vk.20 )
                                                                                            case attestation_6c_7_8
                                                                                            solve( !KU( senc('done',
                                                                                                             get_encryption_key(get_master_key(hmac(~n,
                                                                                                                                                    ~n.1),
                                                                                                                                               hmac(~n,
                                                                                                                                                    ~n.2))))
                                                                                                   ) @ #vk.21 )
                                                                                              case attestation_9
                                                                                              solve( !KU( senc('done',
                                                                                                               get_encryption_key(get_master_key(hmac(~n.3,
                                                                                                                                                      ~n.4),
                                                                                                                                                 hmac(~n.3,
                                                                                                                                                      ~n.5))))
                                                                                                     ) @ #vk.22 )
                                                                                                case attestation_9
                                                                                                solve( !KU( h(embed_certificate($CTRL,
                                                                                                                                pk(~IPVendor_priv)))
                                                                                                       ) @ #vk.27 )
                                                                                                  case attestation_2_3
                                                                                                  solve( (n.7 =
                                                                                                          ~n)  ∥
                                                                                                         (n.7 =
                                                                                                          ~n.3) )
                                                                                                    case case_1
                                                                                                    solve( (#vr.28 =
                                                                                                            #a)  ∥
                                                                                                           (#vr.28 =
                                                                                                            #b) )
                                                                                                      case case_1
                                                                                                      solve( !KU( pk(~Ctrl_priv)
                                                                                                             ) @ #vk.28 )
                                                                                                        case attestation_2_3
                                                                                                        solve( !KU( h(embed_certificate($CTRL.1,
                                                                                                                                        pk(~IPVendor_priv)))
                                                                                                               ) @ #vk.31 )
                                                                                                          case attestation_2_3
                                                                                                          solve( (n.7 =
                                                                                                                  ~n)  ∥
                                                                                                                 (n.7 =
                                                                                                                  ~n.3) )
                                                                                                            case case_1
                                                                                                            solve( (#vr.31 =
                                                                                                                    #a)  ∥
                                                                                                                   (#vr.31 =
                                                                                                                    #b) )
                                                                                                              case case_1
                                                                                                              solve( !KU( pk(~Ctrl_priv.1)
                                                                                                                     ) @ #vk.30 )
                                                                                                                case attestation_2_3
                                                                                                                solve( !KU( mTLS_handshake(hmac(~n,
                                                                                                                                                ~n.1),
                                                                                                                                           ~IPVendor_priv,
                                                                                                                                           pk(~Ctrl_priv))
                                                                                                                       ) @ #vk.27 )
                                                                                                                  case attestation_4_5_6a
                                                                                                                  solve( !KU( mTLS_handshake(hmac(~n.3,
                                                                                                                                                  ~n.4),
                                                                                                                                             ~IPVendor_priv,
                                                                                                                                             pk(~Ctrl_priv.1))
                                                                                                                         ) @ #vk.28 )
                                                                                                                    case attestation_4_5_6a
                                                                                                                    solve( !KU( mTLS_handshake(hmac(~n,
                                                                                                                                                    ~n.2),
                                                                                                                                               ~Ctrl_priv,
                                                                                                                                               pk(~IPVendor_priv))
                                                                                                                           ) @ #vk.29 )
                                                                                                                      case attestation_6b
                                                                                                                      solve( !KU( mTLS_handshake(hmac(~n.3,
                                                                                                                                                      ~n.5),
                                                                                                                                                 ~Ctrl_priv.1,
                                                                                                                                                 pk(~IPVendor_priv))
                                                                                                                             ) @ #vk.30 )
                                                                                                                        case attestation_6b
                                                                                                                        solve( !KU( pk(~IPVendor_priv)
                                                                                                                               ) @ #vk.32 )
                                                                                                                          case create_IPVendor_certificate
                                                                                                                          SOLVED // trace found
                                                                                                                        qed
                                                                                                                      qed
                                                                                                                    qed
                                                                                                                  qed
                                                                                                                qed
                                                                                                              qed
                                                                                                            qed
                                                                                                          qed
                                                                                                        qed
                                                                                                      qed
                                                                                                    qed
                                                                                                  qed
                                                                                                qed
                                                                                              qed
                                                                                            qed
                                                                                          qed
                                                                                        qed
                                                                                      qed
                                                                                    qed
                                                                                  qed
                                                                                qed
                                                                              qed
                                                                            qed
                                                                          qed
                                                                        qed
                                                                      qed
                                                                    qed
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma verified_msg_is_auth [heuristic=O "./tnic_oracle.py"]:
  all-traces
  "(¬(∃ type info #i. Compromised( type, info ) @ #i)) ⇒
   (∀ secrets tnic_a tnic_b msg #j.
     (TNICAcceptMsg( secrets, tnic_a, tnic_b, msg ) @ #j) ⇒
     (∃ #k #l.
       (((ShareSecrets( tnic_a, secrets ) @ #k) ∧
         (TNICSendMsg( secrets, tnic_a, tnic_b, msg ) @ #l)) ∧
        (#k < #l)) ∧
       (#l < #j)))"
/*
guarded formula characterizing all counter-examples:
"(∀ type info #i. (Compromised( type, info ) @ #i) ⇒ ⊥) ∧
 (∃ secrets tnic_a tnic_b msg #j.
   (TNICAcceptMsg( secrets, tnic_a, tnic_b, msg ) @ #j)
  ∧
   ∀ #k #l.
    (ShareSecrets( tnic_a, secrets ) @ #k) ∧
    (TNICSendMsg( secrets, tnic_a, tnic_b, msg ) @ #l)
   ⇒
    ((¬(#k < #l)) ∨ (¬(#l < #j))))"
*/
simplify
solve( !TNIC_Connection( $TNIC_SEND, $TNIC_RECV, secrets ) ▶₁ #j )
  case init_ctrs
  solve( !KU( senc(<'Bitstream', TNIC_bit>,
                   get_encryption_key(get_master_key(z, hmac(n, ~n.1))))
         ) @ #vk.1 )
    case attestation_6c_7_8
    solve( !KU( ~n ) @ #vk.10 )
      case attestation_1
      solve( !KU( senc(<'Secrets', ~secrets>,
                       get_encryption_key(get_master_key(hmac(~n, ~n.1), hmac(n.2, ~n.3))))
             ) @ #vk.3 )
        case attestation_6c_7_8
        solve( !KU( sign(<h(embed_certificate($CTRL, pk(~IPVendor_priv))), 
                          pk(x.2)>,
                         ~HW_key_priv.1)
               ) @ #vk.15 )
          case attestation_2_3
          solve( !KU( sign(<~n, 
                            <h(embed_certificate($CTRL, pk(~IPVendor_priv))), pk(~Ctrl_priv.1)>, 
                            sign(<h(embed_certificate($CTRL, pk(~IPVendor_priv))), pk(~Ctrl_priv.1)>,
                                 ~HW_key_priv.1)
                           >,
                           ~Ctrl_priv.1)
                 ) @ #vk.16 )
            case attestation_2_3
            solve( !KU( senc(<
                              hmac(get_session_key(~secrets, $TNIC_SEND, $TNIC_RECV), <msg, %cnt>), 
                              msg, %cnt>,
                             get_session_key(~secrets, $TNIC_SEND, $TNIC_RECV))
                   ) @ #vk.8 )
              case c_senc
              solve( !KU( get_session_key(~secrets, $TNIC_SEND, $TNIC_RECV)
                     ) @ #vk.20 )
                case c_get_session_key
                solve( !KU( ~secrets ) @ #vk.25 )
                  case attestation_6c_7_8
                  solve( !KU( get_master_key(hmac(~n.4, ~n.5), z) ) @ #vk.39 )
                    case c_get_master_key
                    solve( !KU( hmac(~n.4, ~n.5) ) @ #vk.40 )
                      case attestation_4_5_6a
                      solve( !KU( ~n.4 ) @ #vk.34 )
                        case attestation_1
                        solve( splitEqs(3) )
                          case split_case_1
                          solve( !KU( get_mTLS_key_half(partial_mTLS, ~IPVendor_priv.1, pk(x.2))
                                 ) @ #vk.41 )
                            case c_get_mTLS_key_half
                            solve( !KU( ~IPVendor_priv.1 ) @ #vk.44 )
                              case compromise_tnic_private_key
                              by contradiction /* from formulas */
                            qed
                          qed
                        next
                          case split_case_2
                          solve( !KU( sign(<h(embed_certificate($CTRL.1, pk(~IPVendor_priv.1))), 
                                            pk(x.2)>,
                                           ~HW_key_priv.2)
                                 ) @ #vk.39 )
                            case attestation_2_3
                            solve( !KU( ~Ctrl_priv.2 ) @ #vk.42 )
                              case compromise_tnic_private_key
                              by contradiction /* from formulas */
                            qed
                          next
                            case c_sign
                            solve( !KU( ~HW_key_priv.2 ) @ #vk.44 )
                              case compromise_tnic_private_key
                              by contradiction /* from formulas */
                            qed
                          qed
                        qed
                      qed
                    next
                      case c_hmac
                      by solve( !KU( ~n.5 ) @ #vk.42 )
                    qed
                  next
                    case compromise_tnic_private_key
                    by contradiction /* from formulas */
                  qed
                next
                  case compromise_tnic_private_key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case send_msg
              solve( !KU( senc(<'frm', $frm>, ~HW_key_priv) ) @ #vk.12 )
                case c_senc
                solve( !KU( ~HW_key_priv ) @ #vk.20 )
                  case compromise_tnic_private_key
                  by contradiction /* from formulas */
                qed
              next
                case publish_firmware
                solve( !KU( mTLS_handshake(hmac(n.2, ~n.3), ~Ctrl_priv.1,
                                           pk(~IPVendor_priv))
                       ) @ #vk.13 )
                  case attestation_6b
                  by contradiction /* from formulas */
                next
                  case c_mTLS_handshake
                  solve( !KU( ~Ctrl_priv.1 ) @ #vk.20 )
                    case compromise_tnic_private_key
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          next
            case c_sign
            solve( !KU( ~Ctrl_priv.1 ) @ #vk.20 )
              case compromise_tnic_private_key
              by contradiction /* from formulas */
            qed
          qed
        next
          case c_sign
          solve( !KU( ~HW_key_priv.1 ) @ #vk.17 )
            case compromise_tnic_private_key
            by contradiction /* from formulas */
          qed
        qed
      next
        case c_senc
        solve( !KU( get_encryption_key(get_master_key(hmac(~n, ~n.1),
                                                      hmac(n.2, ~n.3)))
               ) @ #vk.18 )
          case c_get_encryption_key
          solve( !KU( get_master_key(hmac(~n, ~n.1), hmac(n.2, ~n.3)) ) @ #vk.21 )
            case c_get_master_key
            solve( !KU( ~secrets ) @ #vk.21 )
              case attestation_6c_7_8
              solve( !KU( get_master_key(hmac(~n.4, ~n.5), z) ) @ #vk.35 )
                case c_get_master_key
                solve( !KU( hmac(~n, ~n.1) ) @ #vk.24 )
                  case attestation_4_5_6a
                  solve( !KU( hmac(~n.4, ~n.5) ) @ #vk.36 )
                    case attestation_4_5_6a
                    solve( !KU( ~n.4 ) @ #vk.30 )
                      case attestation_1
                      solve( splitEqs(3) )
                        case split_case_1
                        solve( !KU( get_mTLS_key_half(partial_mTLS, ~IPVendor_priv, pk(x.2))
                               ) @ #vk.37 )
                          case c_get_mTLS_key_half
                          solve( !KU( ~IPVendor_priv ) @ #vk.42 )
                            case compromise_tnic_private_key
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case split_case_2
                        solve( !KU( sign(<h(embed_certificate($CTRL, pk(~IPVendor_priv))), 
                                          pk(x.2)>,
                                         ~HW_key_priv.1)
                               ) @ #vk.25 )
                          case attestation_2_3
                          solve( !KU( ~Ctrl_priv.1 ) @ #vk.38 )
                            case compromise_tnic_private_key
                            by contradiction /* from formulas */
                          qed
                        next
                          case c_sign
                          solve( !KU( ~HW_key_priv.1 ) @ #vk.42 )
                            case compromise_tnic_private_key
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  next
                    case c_hmac
                    by solve( !KU( ~n.5 ) @ #vk.40 )
                  qed
                next
                  case c_hmac
                  by solve( !KU( ~n.1 ) @ #vk.38 )
                qed
              next
                case compromise_tnic_private_key
                by contradiction /* from formulas */
              qed
            next
              case compromise_tnic_private_key
              by contradiction /* from formulas */
            qed
          next
            case compromise_tnic_private_key
            by contradiction /* from formulas */
          qed
        qed
      qed
    qed
  next
    case c_senc
    solve( !KU( get_encryption_key(get_master_key(z, hmac(n, ~n.1)))
           ) @ #vk.8 )
      case c_get_encryption_key
      solve( !KU( get_master_key(z, hmac(n, ~n.1)) ) @ #vk.11 )
        case c_get_master_key
        solve( !KU( senc(<'Secrets', ~secrets>,
                         get_encryption_key(get_master_key(z, hmac(n, ~n.1))))
               ) @ #vk.4 )
          case attestation_6c_7_8
          solve( !KU( hmac(~n, ~n.1) ) @ #vk.12 )
            case attestation_4_5_6a
            solve( !KU( ~n ) @ #vk.17 )
              case attestation_1
              solve( !KU( sign(<h(embed_certificate($CTRL, pk(~IPVendor_priv))), pk(x)
                               >,
                               ~HW_key_priv.1)
                     ) @ #vk.22 )
                case attestation_2_3
                solve( !KU( ~Ctrl_priv ) @ #vk.24 )
                  case compromise_tnic_private_key
                  by contradiction /* from formulas */
                qed
              next
                case c_sign
                solve( !KU( ~HW_key_priv.1 ) @ #vk.26 )
                  case compromise_tnic_private_key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case c_hmac
            by solve( !KU( ~n.1 ) @ #vk.24 )
          qed
        next
          case c_senc
          solve( !KU( ~secrets ) @ #vk.16 )
            case attestation_6c_7_8
            solve( !KU( get_master_key(hmac(~n.2, ~n.3), z.2) ) @ #vk.28 )
              case c_get_master_key
              solve( !KU( hmac(~n.2, ~n.3) ) @ #vk.29 )
                case attestation_4_5_6a
                solve( !KU( ~n.2 ) @ #vk.23 )
                  case attestation_1
                  solve( splitEqs(1) )
                    case split_case_1
                    solve( !KU( get_mTLS_key_half(partial_mTLS, ~Ctrl_priv,
                                                  retrieve_certificate(CTRL_bin))
                           ) @ #vk.19 )
                      case c_get_mTLS_key_half
                      solve( !KU( ~Ctrl_priv ) @ #vk.33 )
                        case compromise_tnic_private_key
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case split_case_2
                    solve( !KU( get_mTLS_key_half(partial_mTLS, ~Ctrl_priv, z) ) @ #vk.19 )
                      case c_get_mTLS_key_half
                      solve( !KU( ~Ctrl_priv ) @ #vk.33 )
                        case compromise_tnic_private_key
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case split_case_3
                    solve( splitEqs(3) )
                      case split_case_1
                      solve( !KU( get_mTLS_key_half(partial_mTLS, ~IPVendor_priv, pk(x))
                             ) @ #vk.30 )
                        case c_get_mTLS_key_half
                        solve( !KU( ~IPVendor_priv ) @ #vk.33 )
                          case compromise_tnic_private_key
                          by contradiction /* from formulas */
                        qed
                      qed
                    next
                      case split_case_2
                      solve( !KU( sign(<h(embed_certificate($CTRL, pk(~IPVendor_priv))), pk(x)
                                       >,
                                       ~HW_key_priv.1)
                             ) @ #vk.28 )
                        case attestation_2_3
                        solve( !KU( ~Ctrl_priv ) @ #vk.31 )
                          case compromise_tnic_private_key
                          by contradiction /* from formulas */
                        qed
                      next
                        case c_sign
                        solve( !KU( ~HW_key_priv.1 ) @ #vk.33 )
                          case compromise_tnic_private_key
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case c_hmac
                by solve( !KU( ~n.3 ) @ #vk.31 )
              qed
            next
              case compromise_tnic_private_key
              by contradiction /* from formulas */
            qed
          next
            case compromise_tnic_private_key
            by contradiction /* from formulas */
          qed
        qed
      next
        case compromise_tnic_private_key
        by contradiction /* from formulas */
      qed
    qed
  qed
qed

lemma no_lost_messages:
  all-traces
  "(¬(∃ type info #i. Compromised( type, info ) @ #i)) ⇒
   (∀ secrets tnic_a tnic_b msg ctr #i #j.
     ((TNICAcceptMsg( secrets, tnic_a, tnic_b, msg ) @ #i) ∧
      (TNICSendMsgCtr( secrets, tnic_a, tnic_b, msg, ctr ) @ #j)) ⇒
     (∀ msg2 ctr2 #k.
       ((∃ z. ctr = (ctr2++z)) ∧
        (TNICSendMsgCtr( secrets, tnic_a, tnic_b, msg2, ctr2 ) @ #k)) ⇒
       (∃ #l.
         (TNICAcceptMsg( secrets, tnic_a, tnic_b, msg ) @ #l) ∧ (#l < #i))))"
/*
guarded formula characterizing all counter-examples:
"(∀ type info #i. (Compromised( type, info ) @ #i) ⇒ ⊥) ∧
 (∃ secrets tnic_a tnic_b msg ctr #i #j.
   (TNICAcceptMsg( secrets, tnic_a, tnic_b, msg ) @ #i) ∧
   (TNICSendMsgCtr( secrets, tnic_a, tnic_b, msg, ctr ) @ #j)
  ∧
   ∃ msg2 ctr2 #k.
    (TNICSendMsgCtr( secrets, tnic_a, tnic_b, msg2, ctr2 ) @ #k)
   ∧
    (∃ z. (ctr = (ctr2++z))) ∧
    (∀ #l.
      (TNICAcceptMsg( secrets, tnic_a, tnic_b, msg ) @ #l) ⇒ ¬(#l < #i)))"
*/
simplify
solve( !TNIC_Connection( $TNIC_SEND, $TNIC_RECV, secrets ) ▶₁ #i )
  case init_ctrs
  solve( !TNIC_Connection( $TNIC_SEND, $TNIC_RECV, ~secrets ) ▶₁ #k )
    case init_ctrs
    by solve( TNICSendMsgCtr( ~secrets, $TNIC_SEND, $TNIC_RECV, msg,
                              (%send_cnt++z.2)
              ) @ #j.1 )
  qed
qed

lemma no_message_reordering [heuristic=O "./tnic_oracle.py"]:
  all-traces
  "(¬(∃ type info #i. Compromised( type, info ) @ #i)) ⇒
   (∀ secrets tnic_a tnic_b msg1 msg2 #i #j.
     (((TNICAcceptMsg( secrets, tnic_a, tnic_b, msg1 ) @ #i) ∧
       (TNICAcceptMsg( secrets, tnic_a, tnic_b, msg2 ) @ #j)) ∧
      (#i < #j)) ⇒
     (∃ #k #l.
       ((TNICSendMsg( secrets, tnic_a, tnic_b, msg1 ) @ #k) ∧
        (TNICSendMsg( secrets, tnic_a, tnic_b, msg2 ) @ #l)) ∧
       (#k < #l)))"
/*
guarded formula characterizing all counter-examples:
"(∀ type info #i. (Compromised( type, info ) @ #i) ⇒ ⊥) ∧
 (∃ secrets tnic_a tnic_b msg1 msg2 #i #j.
   (TNICAcceptMsg( secrets, tnic_a, tnic_b, msg1 ) @ #i) ∧
   (TNICAcceptMsg( secrets, tnic_a, tnic_b, msg2 ) @ #j)
  ∧
   (#i < #j) ∧
   (∀ #k #l.
     (TNICSendMsg( secrets, tnic_a, tnic_b, msg1 ) @ #k) ∧
     (TNICSendMsg( secrets, tnic_a, tnic_b, msg2 ) @ #l)
    ⇒
     ¬(#k < #l)))"
*/
simplify
solve( !TNIC_Connection( $TNIC_SEND, $TNIC_RECV, secrets ) ▶₁ #i )
  case init_ctrs
  solve( !KU( senc(<'Bitstream', TNIC_bit>,
                   get_encryption_key(get_master_key(z, hmac(n, ~n.1))))
         ) @ #vk.2 )
    case attestation_6c_7_8
    solve( !KU( ~n.1 ) @ #vk.11 )
      case attestation_1
      solve( !KU( senc(<'Secrets', ~secrets>,
                       get_encryption_key(get_master_key(hmac(~n, ~n.1), hmac(n.2, ~n.3))))
             ) @ #vk.4 )
        case attestation_6c_7_8
        solve( !TNIC_Connection( $TNIC_SEND, $TNIC_RECV, ~secrets ) ▶₁ #j )
          case init_ctrs
          solve( !KU( sign(<h(embed_certificate($CTRL, pk(~IPVendor_priv))), 
                            pk(x.2)>,
                           ~HW_key_priv.1)
                 ) @ #vk.16 )
            case attestation_2_3
            solve( !KU( sign(<~n, 
                              <h(embed_certificate($CTRL, pk(~IPVendor_priv))), pk(~Ctrl_priv.1)>, 
                              sign(<h(embed_certificate($CTRL, pk(~IPVendor_priv))), pk(~Ctrl_priv.1)>,
                                   ~HW_key_priv.1)
                             >,
                             ~Ctrl_priv.1)
                   ) @ #vk.17 )
              case attestation_2_3
              solve( !KU( senc(<
                                hmac(get_session_key(~secrets, $TNIC_SEND, $TNIC_RECV), <msg1, %cnt>), 
                                msg1, %cnt>,
                               get_session_key(~secrets, $TNIC_SEND, $TNIC_RECV))
                     ) @ #vk.8 )
                case c_senc
                solve( !KU( get_session_key(~secrets, $TNIC_SEND, $TNIC_RECV)
                       ) @ #vk.21 )
                  case c_get_session_key
                  solve( !KU( ~secrets ) @ #vk.26 )
                    case attestation_6c_7_8
                    solve( !KU( get_master_key(hmac(~n.4, ~n.5), z) ) @ #vk.40 )
                      case c_get_master_key
                      solve( !KU( hmac(~n.4, ~n.5) ) @ #vk.41 )
                        case attestation_4_5_6a
                        solve( !KU( ~n.4 ) @ #vk.35 )
                          case attestation_1
                          solve( splitEqs(5) )
                            case split_case_1
                            solve( !KU( get_mTLS_key_half(partial_mTLS, ~IPVendor_priv.1, pk(x.2))
                                   ) @ #vk.42 )
                              case c_get_mTLS_key_half
                              solve( !KU( ~IPVendor_priv.1 ) @ #vk.45 )
                                case compromise_tnic_private_key
                                by contradiction /* from formulas */
                              qed
                            qed
                          next
                            case split_case_2
                            solve( !KU( sign(<h(embed_certificate($CTRL.1, pk(~IPVendor_priv.1))), 
                                              pk(x.2)>,
                                             ~HW_key_priv.2)
                                   ) @ #vk.40 )
                              case attestation_2_3
                              solve( !KU( ~Ctrl_priv.2 ) @ #vk.43 )
                                case compromise_tnic_private_key
                                by contradiction /* from formulas */
                              qed
                            next
                              case c_sign
                              solve( !KU( ~HW_key_priv.2 ) @ #vk.45 )
                                case compromise_tnic_private_key
                                by contradiction /* from formulas */
                              qed
                            qed
                          qed
                        qed
                      next
                        case c_hmac
                        by solve( !KU( ~n.5 ) @ #vk.43 )
                      qed
                    next
                      case compromise_tnic_private_key
                      by contradiction /* from formulas */
                    qed
                  next
                    case compromise_tnic_private_key
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case send_msg
                solve( !KU( senc(<
                                  hmac(get_session_key(~secrets, $TNIC_SEND, $TNIC_RECV), <msg2, %cnt.1>), 
                                  msg2, %cnt.1>,
                                 get_session_key(~secrets, $TNIC_SEND, $TNIC_RECV))
                       ) @ #vk.9 )
                  case c_senc
                  solve( !KU( get_session_key(~secrets, $TNIC_SEND, $TNIC_RECV)
                         ) @ #vk.21 )
                    case c_get_session_key
                    solve( !KU( ~secrets ) @ #vk.26 )
                      case attestation_6c_7_8
                      solve( !KU( get_master_key(hmac(~n.4, ~n.5), z) ) @ #vk.40 )
                        case c_get_master_key
                        solve( !KU( hmac(~n.4, ~n.5) ) @ #vk.41 )
                          case attestation_4_5_6a
                          solve( !KU( ~n.4 ) @ #vk.35 )
                            case attestation_1
                            solve( splitEqs(6) )
                              case split_case_1
                              solve( !KU( get_mTLS_key_half(partial_mTLS, ~IPVendor_priv.1, pk(x.2))
                                     ) @ #vk.42 )
                                case c_get_mTLS_key_half
                                solve( !KU( ~IPVendor_priv.1 ) @ #vk.45 )
                                  case compromise_tnic_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            next
                              case split_case_2
                              solve( !KU( sign(<h(embed_certificate($CTRL.1, pk(~IPVendor_priv.1))), 
                                                pk(x.2)>,
                                               ~HW_key_priv.2)
                                     ) @ #vk.40 )
                                case attestation_2_3
                                solve( !KU( ~Ctrl_priv.2 ) @ #vk.43 )
                                  case compromise_tnic_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case c_sign
                                solve( !KU( ~HW_key_priv.2 ) @ #vk.45 )
                                  case compromise_tnic_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        next
                          case c_hmac
                          by solve( !KU( ~n.5 ) @ #vk.43 )
                        qed
                      next
                        case compromise_tnic_private_key
                        by contradiction /* from formulas */
                      qed
                    next
                      case compromise_tnic_private_key
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case send_msg
                  solve( (#vr.20 = #vr.21)  ∥ (#vr.21 < #vr.20) )
                    case case_1
                    solve( !KU( senc(<'frm', $frm>, ~HW_key_priv) ) @ #vk.12 )
                      case c_senc
                      solve( !KU( ~HW_key_priv ) @ #vk.20 )
                        case compromise_tnic_private_key
                        by contradiction /* from formulas */
                      qed
                    next
                      case publish_firmware
                      solve( !KU( mTLS_handshake(hmac(n.2, ~n.3), ~Ctrl_priv.1,
                                                 pk(~IPVendor_priv))
                             ) @ #vk.13 )
                        case attestation_6b
                        solve( !KU( embed_certificate($CTRL, pk(~IPVendor_priv)) ) @ #vk.12 )
                          case c_embed_certificate
                          solve( TNIC_RecvCounter( ~secrets, $TNIC_RECV, $TNIC_ID, %cnt ) ▶₂ #i )
                            case init_ctrs
                            solve( !KU( senc(<'Bitstream', TNIC_bit.1>,
                                             get_encryption_key(get_master_key(z, hmac(n.3, ~n.4))))
                                   ) @ #vk.18 )
                              case attestation_6c_7_8
                              solve( !KU( ~n.3 ) @ #vk.27 )
                                case attestation_1
                                solve( !KU( senc(<'Secrets', ~secrets>,
                                                 get_encryption_key(get_master_key(hmac(~n.3, ~n.4),
                                                                                   hmac(n.5, ~n.6))))
                                       ) @ #vk.20 )
                                  case attestation_6c_7_8
                                  solve( !KU( sign(<h(embed_certificate($CTRL.1, pk(~IPVendor_priv.1))), 
                                                    pk(x.2)>,
                                                   ~HW_key_priv.2)
                                         ) @ #vk.32 )
                                    case attestation_2_3
                                    solve( !KU( sign(<~n.3, 
                                                      <h(embed_certificate($CTRL.1, pk(~IPVendor_priv.1))), 
                                                       pk(~Ctrl_priv.2)>, 
                                                      sign(<
                                                            h(embed_certificate($CTRL.1,
                                                                                pk(~IPVendor_priv.1))), 
                                                            pk(~Ctrl_priv.2)>,
                                                           ~HW_key_priv.2)
                                                     >,
                                                     ~Ctrl_priv.2)
                                           ) @ #vk.33 )
                                      case attestation_2_3
                                      solve( !KU( senc(<'frm', $frm.1>, ~HW_key_priv.2) ) @ #vk.29 )
                                        case c_senc
                                        solve( !KU( ~HW_key_priv.2 ) @ #vk.37 )
                                          case compromise_tnic_private_key
                                          by contradiction /* from formulas */
                                        qed
                                      next
                                        case publish_firmware
                                        solve( !KU( mTLS_handshake(hmac(n.5, ~n.6), ~Ctrl_priv.1,
                                                                   pk(~IPVendor_priv.1))
                                               ) @ #vk.30 )
                                          case attestation_6b
                                          solve( !KU( embed_certificate($CTRL.1, pk(~IPVendor_priv.1))
                                                 ) @ #vk.29 )
                                            case c_embed_certificate
                                            solve( TNIC_RecvCounter( ~secrets, $TNIC_RECV, $TNIC_ID, %1
                                                   ) ▶₂ #j )
                                              case init_ctrs
                                              by contradiction /* cyclic */
                                            qed
                                          next
                                            case create_controller
                                            solve( TNIC_RecvCounter( ~secrets, $TNIC_RECV, $TNIC_ID, %1
                                                   ) ▶₂ #j )
                                              case init_ctrs
                                              by contradiction /* cyclic */
                                            qed
                                          qed
                                        next
                                          case c_mTLS_handshake
                                          solve( !KU( ~Ctrl_priv.1 ) @ #vk.37 )
                                            case compromise_tnic_private_key
                                            by contradiction /* from formulas */
                                          qed
                                        qed
                                      qed
                                    next
                                      case c_sign
                                      solve( !KU( ~Ctrl_priv.1 ) @ #vk.37 )
                                        case compromise_tnic_private_key
                                        by contradiction /* from formulas */
                                      qed
                                    qed
                                  next
                                    case c_sign
                                    solve( !KU( ~HW_key_priv.2 ) @ #vk.34 )
                                      case compromise_tnic_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                next
                                  case c_senc
                                  solve( !KU( get_encryption_key(get_master_key(hmac(~n.3, ~n.4),
                                                                                hmac(n.5, ~n.6)))
                                         ) @ #vk.35 )
                                    case c_get_encryption_key
                                    solve( !KU( get_master_key(hmac(~n.3, ~n.4), hmac(n.5, ~n.6))
                                           ) @ #vk.38 )
                                      case c_get_master_key
                                      solve( !KU( ~secrets ) @ #vk.38 )
                                        case attestation_6c_7_8
                                        solve( !KU( get_master_key(hmac(~n.7, ~n.8), z) ) @ #vk.52 )
                                          case c_get_master_key
                                          solve( !KU( hmac(~n.3, ~n.4) ) @ #vk.41 )
                                            case attestation_4_5_6a
                                            solve( !KU( hmac(~n.7, ~n.8) ) @ #vk.53 )
                                              case attestation_4_5_6a
                                              solve( !KU( ~n.7 ) @ #vk.47 )
                                                case attestation_1
                                                solve( splitEqs(9) )
                                                  case split_case_1
                                                  solve( !KU( get_mTLS_key_half(partial_mTLS,
                                                                                ~IPVendor_priv.1, pk(x))
                                                         ) @ #vk.54 )
                                                    case c_get_mTLS_key_half
                                                    solve( !KU( ~IPVendor_priv.1 ) @ #vk.59 )
                                                      case compromise_tnic_private_key
                                                      by contradiction /* from formulas */
                                                    qed
                                                  qed
                                                next
                                                  case split_case_2
                                                  solve( !KU( sign(<
                                                                    h(embed_certificate($CTRL.1,
                                                                                        pk(~IPVendor_priv.1))), 
                                                                    pk(x)>,
                                                                   ~HW_key_priv.2)
                                                         ) @ #vk.42 )
                                                    case attestation_2_3
                                                    solve( !KU( ~Ctrl_priv.1 ) @ #vk.55 )
                                                      case compromise_tnic_private_key
                                                      by contradiction /* from formulas */
                                                    qed
                                                  next
                                                    case c_sign
                                                    solve( !KU( ~HW_key_priv.2 ) @ #vk.59 )
                                                      case compromise_tnic_private_key
                                                      by contradiction /* from formulas */
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            next
                                              case c_hmac
                                              by solve( !KU( ~n.8 ) @ #vk.57 )
                                            qed
                                          next
                                            case c_hmac
                                            by solve( !KU( ~n.4 ) @ #vk.55 )
                                          qed
                                        next
                                          case compromise_tnic_private_key
                                          by contradiction /* from formulas */
                                        qed
                                      next
                                        case compromise_tnic_private_key
                                        by contradiction /* from formulas */
                                      qed
                                    next
                                      case compromise_tnic_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            next
                              case c_senc
                              solve( !KU( get_encryption_key(get_master_key(z, hmac(n.3, ~n.4)))
                                     ) @ #vk.25 )
                                case c_get_encryption_key
                                solve( !KU( get_master_key(z, hmac(n.3, ~n.4)) ) @ #vk.28 )
                                  case c_get_master_key
                                  solve( !KU( senc(<'Secrets', ~secrets>,
                                                   get_encryption_key(get_master_key(z, hmac(n.3, ~n.4))))
                                         ) @ #vk.21 )
                                    case attestation_6c_7_8
                                    solve( !KU( hmac(~n.3, ~n.4) ) @ #vk.29 )
                                      case attestation_4_5_6a
                                      solve( !KU( ~n.3 ) @ #vk.34 )
                                        case attestation_1
                                        solve( !KU( sign(<
                                                          h(embed_certificate($CTRL.1,
                                                                              pk(~IPVendor_priv.1))), 
                                                          pk(x)>,
                                                         ~HW_key_priv.2)
                                               ) @ #vk.39 )
                                          case attestation_2_3
                                          solve( !KU( ~Ctrl_priv.1 ) @ #vk.41 )
                                            case compromise_tnic_private_key
                                            by contradiction /* from formulas */
                                          qed
                                        next
                                          case c_sign
                                          solve( !KU( ~HW_key_priv.2 ) @ #vk.43 )
                                            case compromise_tnic_private_key
                                            by contradiction /* from formulas */
                                          qed
                                        qed
                                      qed
                                    next
                                      case c_hmac
                                      by solve( !KU( ~n.4 ) @ #vk.41 )
                                    qed
                                  next
                                    case c_senc
                                    solve( !KU( ~secrets ) @ #vk.33 )
                                      case attestation_6c_7_8
                                      solve( !KU( get_master_key(hmac(~n.5, ~n.6), z.2) ) @ #vk.45 )
                                        case c_get_master_key
                                        solve( !KU( hmac(~n.3, ~n.4) ) @ #vk.46 )
                                          case attestation_4_5_6a
                                          solve( !KU( ~n.3 ) @ #vk.40 )
                                            case attestation_1
                                            solve( splitEqs(8) )
                                              case split_case_1
                                              solve( !KU( get_mTLS_key_half(partial_mTLS, ~Ctrl_priv.1,
                                                                            retrieve_certificate(CTRL_bin))
                                                     ) @ #vk.36 )
                                                case c_get_mTLS_key_half
                                                solve( !KU( ~Ctrl_priv.1 ) @ #vk.50 )
                                                  case compromise_tnic_private_key
                                                  by contradiction /* from formulas */
                                                qed
                                              qed
                                            next
                                              case split_case_2
                                              solve( splitEqs(9) )
                                                case split_case_1
                                                solve( !KU( get_mTLS_key_half(partial_mTLS, ~IPVendor_priv.1,
                                                                              pk(x))
                                                       ) @ #vk.47 )
                                                  case c_get_mTLS_key_half
                                                  solve( !KU( ~IPVendor_priv.1 ) @ #vk.50 )
                                                    case compromise_tnic_private_key
                                                    by contradiction /* from formulas */
                                                  qed
                                                qed
                                              next
                                                case split_case_2
                                                solve( !KU( sign(<
                                                                  h(embed_certificate($CTRL.1,
                                                                                      pk(~IPVendor_priv.1))), 
                                                                  pk(x)>,
                                                                 ~HW_key_priv.2)
                                                       ) @ #vk.45 )
                                                  case attestation_2_3
                                                  solve( !KU( ~Ctrl_priv.1 ) @ #vk.48 )
                                                    case compromise_tnic_private_key
                                                    by contradiction /* from formulas */
                                                  qed
                                                next
                                                  case c_sign
                                                  solve( !KU( ~HW_key_priv.2 ) @ #vk.50 )
                                                    case compromise_tnic_private_key
                                                    by contradiction /* from formulas */
                                                  qed
                                                qed
                                              qed
                                            next
                                              case split_case_3
                                              solve( !KU( get_mTLS_key_half(partial_mTLS, ~Ctrl_priv.1, z.1)
                                                     ) @ #vk.36 )
                                                case c_get_mTLS_key_half
                                                solve( !KU( ~Ctrl_priv.1 ) @ #vk.50 )
                                                  case compromise_tnic_private_key
                                                  by contradiction /* from formulas */
                                                qed
                                              qed
                                            qed
                                          qed
                                        next
                                          case c_hmac
                                          by solve( !KU( ~n.4 ) @ #vk.48 )
                                        qed
                                      next
                                        case compromise_tnic_private_key
                                        by contradiction /* from formulas */
                                      qed
                                    next
                                      case compromise_tnic_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                next
                                  case compromise_tnic_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          next
                            case recv_msg
                            solve( !KU( senc(<
                                              hmac(get_session_key(~secrets, $TNIC_ID, $TNIC_RECV),
                                                   <msg.1, %cnt>), 
                                              msg.1, %cnt>,
                                             get_session_key(~secrets, $TNIC_ID, $TNIC_RECV))
                                   ) @ #vk.18 )
                              case c_senc
                              solve( !KU( get_session_key(~secrets, $TNIC_ID, $TNIC_RECV) ) @ #vk.20 )
                                case c_get_session_key
                                solve( !KU( ~secrets ) @ #vk.25 )
                                  case attestation_6c_7_8
                                  solve( !KU( get_master_key(hmac(~n.3, ~n.4), z) ) @ #vk.39 )
                                    case c_get_master_key
                                    solve( !KU( hmac(~n.3, ~n.4) ) @ #vk.40 )
                                      case attestation_4_5_6a
                                      solve( !KU( ~n.3 ) @ #vk.34 )
                                        case attestation_1
                                        solve( splitEqs(9) )
                                          case split_case_1
                                          solve( !KU( get_mTLS_key_half(partial_mTLS, ~IPVendor_priv.1, pk(x))
                                                 ) @ #vk.41 )
                                            case c_get_mTLS_key_half
                                            solve( !KU( ~IPVendor_priv.1 ) @ #vk.44 )
                                              case compromise_tnic_private_key
                                              by contradiction /* from formulas */
                                            qed
                                          qed
                                        next
                                          case split_case_2
                                          solve( !KU( sign(<
                                                            h(embed_certificate($CTRL.1,
                                                                                pk(~IPVendor_priv.1))), 
                                                            pk(x)>,
                                                           ~HW_key_priv.1)
                                                 ) @ #vk.39 )
                                            case attestation_2_3
                                            solve( !KU( ~Ctrl_priv.1 ) @ #vk.42 )
                                              case compromise_tnic_private_key
                                              by contradiction /* from formulas */
                                            qed
                                          next
                                            case c_sign
                                            solve( !KU( ~HW_key_priv.1 ) @ #vk.44 )
                                              case compromise_tnic_private_key
                                              by contradiction /* from formulas */
                                            qed
                                          qed
                                        qed
                                      qed
                                    next
                                      case c_hmac
                                      by solve( !KU( ~n.4 ) @ #vk.42 )
                                    qed
                                  next
                                    case compromise_tnic_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case compromise_tnic_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            next
                              case send_msg
                              by solve( (¬(#vr.16 < #vr.19))  ∥ (∃ z. (%cnt = (z++(%cnt%+%1)))) )
                            qed
                          qed
                        next
                          case create_controller
                          solve( TNIC_RecvCounter( ~secrets, $TNIC_RECV, $TNIC_ID, %cnt ) ▶₂ #i )
                            case init_ctrs
                            solve( !KU( senc(<'Bitstream', TNIC_bit.1>,
                                             get_encryption_key(get_master_key(z, hmac(n.3, ~n.4))))
                                   ) @ #vk.17 )
                              case attestation_6c_7_8
                              solve( !KU( ~n.3 ) @ #vk.26 )
                                case attestation_1
                                solve( !KU( senc(<'Secrets', ~secrets>,
                                                 get_encryption_key(get_master_key(hmac(~n.3, ~n.4),
                                                                                   hmac(n.5, ~n.6))))
                                       ) @ #vk.19 )
                                  case attestation_6c_7_8
                                  solve( !KU( sign(<h(embed_certificate($CTRL.1, pk(~IPVendor_priv.1))), 
                                                    pk(x.2)>,
                                                   ~HW_key_priv.2)
                                         ) @ #vk.31 )
                                    case attestation_2_3
                                    solve( !KU( sign(<~n.3, 
                                                      <h(embed_certificate($CTRL.1, pk(~IPVendor_priv.1))), 
                                                       pk(~Ctrl_priv.2)>, 
                                                      sign(<
                                                            h(embed_certificate($CTRL.1,
                                                                                pk(~IPVendor_priv.1))), 
                                                            pk(~Ctrl_priv.2)>,
                                                           ~HW_key_priv.2)
                                                     >,
                                                     ~Ctrl_priv.2)
                                           ) @ #vk.32 )
                                      case attestation_2_3
                                      solve( !KU( senc(<'frm', $frm.1>, ~HW_key_priv.2) ) @ #vk.28 )
                                        case c_senc
                                        solve( !KU( ~HW_key_priv.2 ) @ #vk.36 )
                                          case compromise_tnic_private_key
                                          by contradiction /* from formulas */
                                        qed
                                      next
                                        case publish_firmware
                                        solve( !KU( mTLS_handshake(hmac(n.5, ~n.6), ~Ctrl_priv.1,
                                                                   pk(~IPVendor_priv.1))
                                               ) @ #vk.29 )
                                          case attestation_6b
                                          solve( !KU( embed_certificate($CTRL.1, pk(~IPVendor_priv.1))
                                                 ) @ #vk.28 )
                                            case c_embed_certificate
                                            solve( TNIC_RecvCounter( ~secrets, $TNIC_RECV, $TNIC_ID, %1
                                                   ) ▶₂ #j )
                                              case init_ctrs
                                              by contradiction /* cyclic */
                                            qed
                                          next
                                            case create_controller
                                            solve( TNIC_RecvCounter( ~secrets, $TNIC_RECV, $TNIC_ID, %1
                                                   ) ▶₂ #j )
                                              case init_ctrs
                                              by contradiction /* cyclic */
                                            qed
                                          qed
                                        next
                                          case c_mTLS_handshake
                                          solve( !KU( ~Ctrl_priv.1 ) @ #vk.36 )
                                            case compromise_tnic_private_key
                                            by contradiction /* from formulas */
                                          qed
                                        qed
                                      qed
                                    next
                                      case c_sign
                                      solve( !KU( ~Ctrl_priv.1 ) @ #vk.36 )
                                        case compromise_tnic_private_key
                                        by contradiction /* from formulas */
                                      qed
                                    qed
                                  next
                                    case c_sign
                                    solve( !KU( ~HW_key_priv.2 ) @ #vk.33 )
                                      case compromise_tnic_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                next
                                  case c_senc
                                  solve( !KU( get_encryption_key(get_master_key(hmac(~n.3, ~n.4),
                                                                                hmac(n.5, ~n.6)))
                                         ) @ #vk.34 )
                                    case c_get_encryption_key
                                    solve( !KU( get_master_key(hmac(~n.3, ~n.4), hmac(n.5, ~n.6))
                                           ) @ #vk.37 )
                                      case c_get_master_key
                                      solve( !KU( ~secrets ) @ #vk.37 )
                                        case attestation_6c_7_8
                                        solve( !KU( get_master_key(hmac(~n.7, ~n.8), z) ) @ #vk.51 )
                                          case c_get_master_key
                                          solve( !KU( hmac(~n.3, ~n.4) ) @ #vk.40 )
                                            case attestation_4_5_6a
                                            solve( !KU( hmac(~n.7, ~n.8) ) @ #vk.52 )
                                              case attestation_4_5_6a
                                              solve( !KU( ~n.7 ) @ #vk.46 )
                                                case attestation_1
                                                solve( splitEqs(9) )
                                                  case split_case_1
                                                  solve( !KU( get_mTLS_key_half(partial_mTLS,
                                                                                ~IPVendor_priv.1, pk(x))
                                                         ) @ #vk.53 )
                                                    case c_get_mTLS_key_half
                                                    solve( !KU( ~IPVendor_priv.1 ) @ #vk.58 )
                                                      case compromise_tnic_private_key
                                                      by contradiction /* from formulas */
                                                    qed
                                                  qed
                                                next
                                                  case split_case_2
                                                  solve( !KU( sign(<
                                                                    h(embed_certificate($CTRL.1,
                                                                                        pk(~IPVendor_priv.1))), 
                                                                    pk(x)>,
                                                                   ~HW_key_priv.2)
                                                         ) @ #vk.41 )
                                                    case attestation_2_3
                                                    solve( !KU( ~Ctrl_priv.1 ) @ #vk.54 )
                                                      case compromise_tnic_private_key
                                                      by contradiction /* from formulas */
                                                    qed
                                                  next
                                                    case c_sign
                                                    solve( !KU( ~HW_key_priv.2 ) @ #vk.58 )
                                                      case compromise_tnic_private_key
                                                      by contradiction /* from formulas */
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            next
                                              case c_hmac
                                              by solve( !KU( ~n.8 ) @ #vk.56 )
                                            qed
                                          next
                                            case c_hmac
                                            by solve( !KU( ~n.4 ) @ #vk.54 )
                                          qed
                                        next
                                          case compromise_tnic_private_key
                                          by contradiction /* from formulas */
                                        qed
                                      next
                                        case compromise_tnic_private_key
                                        by contradiction /* from formulas */
                                      qed
                                    next
                                      case compromise_tnic_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            next
                              case c_senc
                              solve( !KU( get_encryption_key(get_master_key(z, hmac(n.3, ~n.4)))
                                     ) @ #vk.24 )
                                case c_get_encryption_key
                                solve( !KU( get_master_key(z, hmac(n.3, ~n.4)) ) @ #vk.27 )
                                  case c_get_master_key
                                  solve( !KU( senc(<'Secrets', ~secrets>,
                                                   get_encryption_key(get_master_key(z, hmac(n.3, ~n.4))))
                                         ) @ #vk.20 )
                                    case attestation_6c_7_8
                                    solve( !KU( hmac(~n.3, ~n.4) ) @ #vk.28 )
                                      case attestation_4_5_6a
                                      solve( !KU( ~n.3 ) @ #vk.33 )
                                        case attestation_1
                                        solve( !KU( sign(<
                                                          h(embed_certificate($CTRL.1,
                                                                              pk(~IPVendor_priv.1))), 
                                                          pk(x)>,
                                                         ~HW_key_priv.2)
                                               ) @ #vk.38 )
                                          case attestation_2_3
                                          solve( !KU( ~Ctrl_priv.1 ) @ #vk.40 )
                                            case compromise_tnic_private_key
                                            by contradiction /* from formulas */
                                          qed
                                        next
                                          case c_sign
                                          solve( !KU( ~HW_key_priv.2 ) @ #vk.42 )
                                            case compromise_tnic_private_key
                                            by contradiction /* from formulas */
                                          qed
                                        qed
                                      qed
                                    next
                                      case c_hmac
                                      by solve( !KU( ~n.4 ) @ #vk.40 )
                                    qed
                                  next
                                    case c_senc
                                    solve( !KU( ~secrets ) @ #vk.32 )
                                      case attestation_6c_7_8
                                      solve( !KU( get_master_key(hmac(~n.5, ~n.6), z.2) ) @ #vk.44 )
                                        case c_get_master_key
                                        solve( !KU( hmac(~n.3, ~n.4) ) @ #vk.45 )
                                          case attestation_4_5_6a
                                          solve( !KU( ~n.3 ) @ #vk.39 )
                                            case attestation_1
                                            solve( splitEqs(8) )
                                              case split_case_1
                                              solve( !KU( get_mTLS_key_half(partial_mTLS, ~Ctrl_priv.1,
                                                                            retrieve_certificate(CTRL_bin))
                                                     ) @ #vk.35 )
                                                case c_get_mTLS_key_half
                                                solve( !KU( ~Ctrl_priv.1 ) @ #vk.49 )
                                                  case compromise_tnic_private_key
                                                  by contradiction /* from formulas */
                                                qed
                                              qed
                                            next
                                              case split_case_2
                                              solve( splitEqs(9) )
                                                case split_case_1
                                                solve( !KU( get_mTLS_key_half(partial_mTLS, ~IPVendor_priv.1,
                                                                              pk(x))
                                                       ) @ #vk.46 )
                                                  case c_get_mTLS_key_half
                                                  solve( !KU( ~IPVendor_priv.1 ) @ #vk.49 )
                                                    case compromise_tnic_private_key
                                                    by contradiction /* from formulas */
                                                  qed
                                                qed
                                              next
                                                case split_case_2
                                                solve( !KU( sign(<
                                                                  h(embed_certificate($CTRL.1,
                                                                                      pk(~IPVendor_priv.1))), 
                                                                  pk(x)>,
                                                                 ~HW_key_priv.2)
                                                       ) @ #vk.44 )
                                                  case attestation_2_3
                                                  solve( !KU( ~Ctrl_priv.1 ) @ #vk.47 )
                                                    case compromise_tnic_private_key
                                                    by contradiction /* from formulas */
                                                  qed
                                                next
                                                  case c_sign
                                                  solve( !KU( ~HW_key_priv.2 ) @ #vk.49 )
                                                    case compromise_tnic_private_key
                                                    by contradiction /* from formulas */
                                                  qed
                                                qed
                                              qed
                                            next
                                              case split_case_3
                                              solve( !KU( get_mTLS_key_half(partial_mTLS, ~Ctrl_priv.1, z.1)
                                                     ) @ #vk.35 )
                                                case c_get_mTLS_key_half
                                                solve( !KU( ~Ctrl_priv.1 ) @ #vk.49 )
                                                  case compromise_tnic_private_key
                                                  by contradiction /* from formulas */
                                                qed
                                              qed
                                            qed
                                          qed
                                        next
                                          case c_hmac
                                          by solve( !KU( ~n.4 ) @ #vk.47 )
                                        qed
                                      next
                                        case compromise_tnic_private_key
                                        by contradiction /* from formulas */
                                      qed
                                    next
                                      case compromise_tnic_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                next
                                  case compromise_tnic_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          next
                            case recv_msg
                            solve( !KU( senc(<
                                              hmac(get_session_key(~secrets, $TNIC_ID, $TNIC_RECV),
                                                   <msg.1, %cnt>), 
                                              msg.1, %cnt>,
                                             get_session_key(~secrets, $TNIC_ID, $TNIC_RECV))
                                   ) @ #vk.17 )
                              case c_senc
                              solve( !KU( get_session_key(~secrets, $TNIC_ID, $TNIC_RECV) ) @ #vk.19 )
                                case c_get_session_key
                                solve( !KU( ~secrets ) @ #vk.24 )
                                  case attestation_6c_7_8
                                  solve( !KU( get_master_key(hmac(~n.3, ~n.4), z) ) @ #vk.38 )
                                    case c_get_master_key
                                    solve( !KU( hmac(~n.3, ~n.4) ) @ #vk.39 )
                                      case attestation_4_5_6a
                                      solve( !KU( ~n.3 ) @ #vk.33 )
                                        case attestation_1
                                        solve( splitEqs(9) )
                                          case split_case_1
                                          solve( !KU( get_mTLS_key_half(partial_mTLS, ~IPVendor_priv.1, pk(x))
                                                 ) @ #vk.40 )
                                            case c_get_mTLS_key_half
                                            solve( !KU( ~IPVendor_priv.1 ) @ #vk.43 )
                                              case compromise_tnic_private_key
                                              by contradiction /* from formulas */
                                            qed
                                          qed
                                        next
                                          case split_case_2
                                          solve( !KU( sign(<
                                                            h(embed_certificate($CTRL.1,
                                                                                pk(~IPVendor_priv.1))), 
                                                            pk(x)>,
                                                           ~HW_key_priv.1)
                                                 ) @ #vk.38 )
                                            case attestation_2_3
                                            solve( !KU( ~Ctrl_priv.1 ) @ #vk.41 )
                                              case compromise_tnic_private_key
                                              by contradiction /* from formulas */
                                            qed
                                          next
                                            case c_sign
                                            solve( !KU( ~HW_key_priv.1 ) @ #vk.43 )
                                              case compromise_tnic_private_key
                                              by contradiction /* from formulas */
                                            qed
                                          qed
                                        qed
                                      qed
                                    next
                                      case c_hmac
                                      by solve( !KU( ~n.4 ) @ #vk.41 )
                                    qed
                                  next
                                    case compromise_tnic_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case compromise_tnic_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            next
                              case send_msg
                              by solve( (¬(#vr.16 < #vr.20))  ∥ (∃ z. (%cnt = (z++(%cnt%+%1)))) )
                            qed
                          qed
                        qed
                      next
                        case c_mTLS_handshake
                        solve( !KU( ~Ctrl_priv.1 ) @ #vk.20 )
                          case compromise_tnic_private_key
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case c_sign
              solve( !KU( ~Ctrl_priv.1 ) @ #vk.21 )
                case compromise_tnic_private_key
                by contradiction /* from formulas */
              qed
            qed
          next
            case c_sign
            solve( !KU( ~HW_key_priv.1 ) @ #vk.18 )
              case compromise_tnic_private_key
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case c_senc
        solve( !KU( get_encryption_key(get_master_key(hmac(~n, ~n.1),
                                                      hmac(n.2, ~n.3)))
               ) @ #vk.19 )
          case c_get_encryption_key
          solve( !KU( get_master_key(hmac(~n, ~n.1), hmac(n.2, ~n.3)) ) @ #vk.22 )
            case c_get_master_key
            solve( !KU( ~secrets ) @ #vk.22 )
              case attestation_6c_7_8
              solve( !KU( get_master_key(hmac(~n.4, ~n.5), z) ) @ #vk.36 )
                case c_get_master_key
                solve( !KU( hmac(~n, ~n.1) ) @ #vk.25 )
                  case attestation_4_5_6a
                  solve( !KU( hmac(~n.4, ~n.5) ) @ #vk.37 )
                    case attestation_4_5_6a
                    solve( !KU( ~n.4 ) @ #vk.31 )
                      case attestation_1
                      solve( !TNIC_Connection( $TNIC_SEND, $TNIC_RECV, ~secrets ) ▶₁ #j )
                        case init_ctrs
                        solve( splitEqs(4) )
                          case split_case_1
                          solve( !KU( get_mTLS_key_half(partial_mTLS, ~IPVendor_priv, pk(x.2))
                                 ) @ #vk.38 )
                            case c_get_mTLS_key_half
                            solve( !KU( ~IPVendor_priv ) @ #vk.43 )
                              case compromise_tnic_private_key
                              by contradiction /* from formulas */
                            qed
                          qed
                        next
                          case split_case_2
                          solve( !KU( sign(<h(embed_certificate($CTRL, pk(~IPVendor_priv))), 
                                            pk(x.2)>,
                                           ~HW_key_priv.1)
                                 ) @ #vk.27 )
                            case attestation_2_3
                            solve( !KU( ~Ctrl_priv.1 ) @ #vk.39 )
                              case compromise_tnic_private_key
                              by contradiction /* from formulas */
                            qed
                          next
                            case c_sign
                            solve( !KU( ~HW_key_priv.1 ) @ #vk.43 )
                              case compromise_tnic_private_key
                              by contradiction /* from formulas */
                            qed
                          qed
                        qed
                      qed
                    qed
                  next
                    case c_hmac
                    by solve( !KU( ~n.5 ) @ #vk.41 )
                  qed
                next
                  case c_hmac
                  by solve( !KU( ~n.1 ) @ #vk.39 )
                qed
              next
                case compromise_tnic_private_key
                by contradiction /* from formulas */
              qed
            next
              case compromise_tnic_private_key
              by contradiction /* from formulas */
            qed
          next
            case compromise_tnic_private_key
            by contradiction /* from formulas */
          qed
        qed
      qed
    qed
  next
    case c_senc
    solve( !KU( get_encryption_key(get_master_key(z, hmac(n, ~n.1)))
           ) @ #vk.9 )
      case c_get_encryption_key
      solve( !KU( get_master_key(z, hmac(n, ~n.1)) ) @ #vk.12 )
        case c_get_master_key
        solve( !KU( senc(<'Secrets', ~secrets>,
                         get_encryption_key(get_master_key(z, hmac(n, ~n.1))))
               ) @ #vk.5 )
          case attestation_6c_7_8
          solve( !KU( hmac(~n, ~n.1) ) @ #vk.13 )
            case attestation_4_5_6a
            solve( !KU( ~n ) @ #vk.18 )
              case attestation_1
              solve( !TNIC_Connection( $TNIC_SEND, $TNIC_RECV, ~secrets ) ▶₁ #j )
                case init_ctrs
                solve( !KU( sign(<h(embed_certificate($CTRL, pk(~IPVendor_priv))), pk(x)
                                 >,
                                 ~HW_key_priv.1)
                       ) @ #vk.23 )
                  case attestation_2_3
                  solve( !KU( ~Ctrl_priv ) @ #vk.25 )
                    case compromise_tnic_private_key
                    by contradiction /* from formulas */
                  qed
                next
                  case c_sign
                  solve( !KU( ~HW_key_priv.1 ) @ #vk.27 )
                    case compromise_tnic_private_key
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          next
            case c_hmac
            by solve( !KU( ~n.1 ) @ #vk.25 )
          qed
        next
          case c_senc
          solve( !KU( ~secrets ) @ #vk.17 )
            case attestation_6c_7_8
            solve( !KU( get_master_key(hmac(~n.2, ~n.3), z.2) ) @ #vk.29 )
              case c_get_master_key
              solve( !KU( hmac(~n.2, ~n.3) ) @ #vk.30 )
                case attestation_4_5_6a
                solve( !KU( ~n.2 ) @ #vk.24 )
                  case attestation_1
                  solve( !TNIC_Connection( $TNIC_SEND, $TNIC_RECV, ~secrets ) ▶₁ #j )
                    case init_ctrs
                    solve( splitEqs(2) )
                      case split_case_1
                      solve( !KU( get_mTLS_key_half(partial_mTLS, ~Ctrl_priv,
                                                    retrieve_certificate(CTRL_bin))
                             ) @ #vk.21 )
                        case c_get_mTLS_key_half
                        solve( !KU( ~Ctrl_priv ) @ #vk.34 )
                          case compromise_tnic_private_key
                          by contradiction /* from formulas */
                        qed
                      qed
                    next
                      case split_case_2
                      solve( !KU( get_mTLS_key_half(partial_mTLS, ~Ctrl_priv, z) ) @ #vk.21 )
                        case c_get_mTLS_key_half
                        solve( !KU( ~Ctrl_priv ) @ #vk.34 )
                          case compromise_tnic_private_key
                          by contradiction /* from formulas */
                        qed
                      qed
                    next
                      case split_case_3
                      solve( splitEqs(4) )
                        case split_case_1
                        solve( !KU( get_mTLS_key_half(partial_mTLS, ~IPVendor_priv, pk(x))
                               ) @ #vk.31 )
                          case c_get_mTLS_key_half
                          solve( !KU( ~IPVendor_priv ) @ #vk.34 )
                            case compromise_tnic_private_key
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case split_case_2
                        solve( !KU( sign(<h(embed_certificate($CTRL, pk(~IPVendor_priv))), pk(x)
                                         >,
                                         ~HW_key_priv.1)
                               ) @ #vk.29 )
                          case attestation_2_3
                          solve( !KU( ~Ctrl_priv ) @ #vk.32 )
                            case compromise_tnic_private_key
                            by contradiction /* from formulas */
                          qed
                        next
                          case c_sign
                          solve( !KU( ~HW_key_priv.1 ) @ #vk.34 )
                            case compromise_tnic_private_key
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case c_hmac
                by solve( !KU( ~n.3 ) @ #vk.32 )
              qed
            next
              case compromise_tnic_private_key
              by contradiction /* from formulas */
            qed
          next
            case compromise_tnic_private_key
            by contradiction /* from formulas */
          qed
        qed
      next
        case compromise_tnic_private_key
        by contradiction /* from formulas */
      qed
    qed
  qed
qed

lemma no_double_messages [heuristic=O "./tnic_oracle.py"]:
  all-traces
  "(¬(∃ type info #i. Compromised( type, info ) @ #i)) ⇒
   (∀ secrets tnic_a tnic_b msg #i #j.
     ((TNICAcceptMsg( secrets, tnic_a, tnic_b, msg ) @ #i) ∧
      (TNICAcceptMsg( secrets, tnic_a, tnic_b, msg ) @ #j)) ⇒
     (#i = #j))"
/*
guarded formula characterizing all counter-examples:
"(∀ type info #i. (Compromised( type, info ) @ #i) ⇒ ⊥) ∧
 (∃ secrets tnic_a tnic_b msg #i #j.
   (TNICAcceptMsg( secrets, tnic_a, tnic_b, msg ) @ #i) ∧
   (TNICAcceptMsg( secrets, tnic_a, tnic_b, msg ) @ #j)
  ∧
   ¬(#i = #j))"
*/
simplify
solve( (#i < #j)  ∥ (#j < #i) )
  case case_1
  solve( !TNIC_Connection( $TNIC_SEND, $TNIC_RECV, secrets ) ▶₁ #i )
    case init_ctrs
    solve( !KU( senc(<'Bitstream', TNIC_bit>,
                     get_encryption_key(get_master_key(z, hmac(n, ~n.1))))
           ) @ #vk.2 )
      case attestation_6c_7_8
      solve( !KU( ~n.1 ) @ #vk.11 )
        case attestation_1
        solve( !KU( senc(<'Secrets', ~secrets>,
                         get_encryption_key(get_master_key(hmac(~n, ~n.1), hmac(n.2, ~n.3))))
               ) @ #vk.4 )
          case attestation_6c_7_8
          solve( !TNIC_Connection( $TNIC_SEND, $TNIC_RECV, ~secrets ) ▶₁ #j )
            case init_ctrs
            solve( !KU( sign(<h(embed_certificate($CTRL, pk(~IPVendor_priv))), 
                              pk(x.2)>,
                             ~HW_key_priv.1)
                   ) @ #vk.16 )
              case attestation_2_3
              solve( !KU( sign(<~n, 
                                <h(embed_certificate($CTRL, pk(~IPVendor_priv))), pk(~Ctrl_priv.1)>, 
                                sign(<h(embed_certificate($CTRL, pk(~IPVendor_priv))), pk(~Ctrl_priv.1)>,
                                     ~HW_key_priv.1)
                               >,
                               ~Ctrl_priv.1)
                     ) @ #vk.17 )
                case attestation_2_3
                solve( !KU( senc(<
                                  hmac(get_session_key(~secrets, $TNIC_SEND, $TNIC_RECV), <msg, %cnt>), 
                                  msg, %cnt>,
                                 get_session_key(~secrets, $TNIC_SEND, $TNIC_RECV))
                       ) @ #vk.8 )
                  case c_senc
                  solve( !KU( get_session_key(~secrets, $TNIC_SEND, $TNIC_RECV)
                         ) @ #vk.21 )
                    case c_get_session_key
                    solve( !KU( ~secrets ) @ #vk.26 )
                      case attestation_6c_7_8
                      solve( !KU( get_master_key(hmac(~n.4, ~n.5), z) ) @ #vk.40 )
                        case c_get_master_key
                        solve( !KU( hmac(~n.4, ~n.5) ) @ #vk.41 )
                          case attestation_4_5_6a
                          solve( !KU( ~n.4 ) @ #vk.35 )
                            case attestation_1
                            solve( splitEqs(5) )
                              case split_case_1
                              solve( !KU( get_mTLS_key_half(partial_mTLS, ~IPVendor_priv.1, pk(x.2))
                                     ) @ #vk.42 )
                                case c_get_mTLS_key_half
                                solve( !KU( ~IPVendor_priv.1 ) @ #vk.45 )
                                  case compromise_tnic_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            next
                              case split_case_2
                              solve( !KU( sign(<h(embed_certificate($CTRL.1, pk(~IPVendor_priv.1))), 
                                                pk(x.2)>,
                                               ~HW_key_priv.2)
                                     ) @ #vk.40 )
                                case attestation_2_3
                                solve( !KU( ~Ctrl_priv.2 ) @ #vk.43 )
                                  case compromise_tnic_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case c_sign
                                solve( !KU( ~HW_key_priv.2 ) @ #vk.45 )
                                  case compromise_tnic_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        next
                          case c_hmac
                          by solve( !KU( ~n.5 ) @ #vk.43 )
                        qed
                      next
                        case compromise_tnic_private_key
                        by contradiction /* from formulas */
                      qed
                    next
                      case compromise_tnic_private_key
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case send_msg
                  solve( !KU( senc(<
                                    hmac(get_session_key(~secrets, $TNIC_SEND, $TNIC_RECV), <~msg, %cnt.1>), 
                                    ~msg, %cnt.1>,
                                   get_session_key(~secrets, $TNIC_SEND, $TNIC_RECV))
                         ) @ #vk.9 )
                    case c_senc
                    solve( !KU( get_session_key(~secrets, $TNIC_SEND, $TNIC_RECV)
                           ) @ #vk.21 )
                      case c_get_session_key
                      solve( !KU( ~msg ) @ #vk.24 )
                        case send_msg
                        solve( !KU( ~secrets ) @ #vk.26 )
                          case attestation_6c_7_8
                          solve( !KU( get_master_key(hmac(~n.4, ~n.5), z) ) @ #vk.40 )
                            case c_get_master_key
                            solve( !KU( hmac(~n.4, ~n.5) ) @ #vk.41 )
                              case attestation_4_5_6a
                              solve( !KU( ~n.4 ) @ #vk.35 )
                                case attestation_1
                                solve( splitEqs(8) )
                                  case split_case_1
                                  solve( !KU( get_mTLS_key_half(partial_mTLS, ~IPVendor_priv.1, pk(x.2))
                                         ) @ #vk.42 )
                                    case c_get_mTLS_key_half
                                    solve( !KU( ~IPVendor_priv.1 ) @ #vk.45 )
                                      case compromise_tnic_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                next
                                  case split_case_2
                                  solve( !KU( sign(<h(embed_certificate($CTRL.1, pk(~IPVendor_priv.1))), 
                                                    pk(x.2)>,
                                                   ~HW_key_priv.2)
                                         ) @ #vk.40 )
                                    case attestation_2_3
                                    solve( !KU( ~Ctrl_priv.2 ) @ #vk.43 )
                                      case compromise_tnic_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case c_sign
                                    solve( !KU( ~HW_key_priv.2 ) @ #vk.45 )
                                      case compromise_tnic_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            next
                              case c_hmac
                              by solve( !KU( ~n.5 ) @ #vk.43 )
                            qed
                          next
                            case compromise_tnic_private_key
                            by contradiction /* from formulas */
                          qed
                        next
                          case compromise_tnic_private_key
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case send_msg
                    solve( !KU( senc(<'frm', $frm>, ~HW_key_priv) ) @ #vk.12 )
                      case c_senc
                      solve( !KU( ~HW_key_priv ) @ #vk.20 )
                        case compromise_tnic_private_key
                        by contradiction /* from formulas */
                      qed
                    next
                      case publish_firmware
                      solve( !KU( mTLS_handshake(hmac(n.2, ~n.3), ~Ctrl_priv.1,
                                                 pk(~IPVendor_priv))
                             ) @ #vk.13 )
                        case attestation_6b
                        solve( !KU( embed_certificate($CTRL, pk(~IPVendor_priv)) ) @ #vk.12 )
                          case c_embed_certificate
                          solve( TNIC_RecvCounter( ~secrets, $TNIC_RECV, $TNIC_ID, %cnt ) ▶₂ #i )
                            case init_ctrs
                            solve( !KU( senc(<'Bitstream', TNIC_bit.1>,
                                             get_encryption_key(get_master_key(z, hmac(n.3, ~n.4))))
                                   ) @ #vk.18 )
                              case attestation_6c_7_8
                              solve( !KU( ~n.3 ) @ #vk.27 )
                                case attestation_1
                                solve( !KU( senc(<'Secrets', ~secrets>,
                                                 get_encryption_key(get_master_key(hmac(~n.3, ~n.4),
                                                                                   hmac(n.5, ~n.6))))
                                       ) @ #vk.20 )
                                  case attestation_6c_7_8
                                  solve( !KU( sign(<h(embed_certificate($CTRL.1, pk(~IPVendor_priv.1))), 
                                                    pk(x.2)>,
                                                   ~HW_key_priv.2)
                                         ) @ #vk.32 )
                                    case attestation_2_3
                                    solve( !KU( sign(<~n.3, 
                                                      <h(embed_certificate($CTRL.1, pk(~IPVendor_priv.1))), 
                                                       pk(~Ctrl_priv.2)>, 
                                                      sign(<
                                                            h(embed_certificate($CTRL.1,
                                                                                pk(~IPVendor_priv.1))), 
                                                            pk(~Ctrl_priv.2)>,
                                                           ~HW_key_priv.2)
                                                     >,
                                                     ~Ctrl_priv.2)
                                           ) @ #vk.33 )
                                      case attestation_2_3
                                      solve( !KU( senc(<'frm', $frm.1>, ~HW_key_priv.2) ) @ #vk.29 )
                                        case c_senc
                                        solve( !KU( ~HW_key_priv.2 ) @ #vk.37 )
                                          case compromise_tnic_private_key
                                          by contradiction /* from formulas */
                                        qed
                                      next
                                        case publish_firmware
                                        solve( !KU( mTLS_handshake(hmac(n.5, ~n.6), ~Ctrl_priv.1,
                                                                   pk(~IPVendor_priv.1))
                                               ) @ #vk.30 )
                                          case attestation_6b
                                          solve( !KU( embed_certificate($CTRL.1, pk(~IPVendor_priv.1))
                                                 ) @ #vk.29 )
                                            case c_embed_certificate
                                            solve( TNIC_RecvCounter( ~secrets, $TNIC_RECV, $TNIC_ID, %1
                                                   ) ▶₂ #j )
                                              case init_ctrs
                                              by contradiction /* cyclic */
                                            qed
                                          next
                                            case create_controller
                                            solve( TNIC_RecvCounter( ~secrets, $TNIC_RECV, $TNIC_ID, %1
                                                   ) ▶₂ #j )
                                              case init_ctrs
                                              by contradiction /* cyclic */
                                            qed
                                          qed
                                        next
                                          case c_mTLS_handshake
                                          solve( !KU( ~Ctrl_priv.1 ) @ #vk.37 )
                                            case compromise_tnic_private_key
                                            by contradiction /* from formulas */
                                          qed
                                        qed
                                      qed
                                    next
                                      case c_sign
                                      solve( !KU( ~Ctrl_priv.1 ) @ #vk.37 )
                                        case compromise_tnic_private_key
                                        by contradiction /* from formulas */
                                      qed
                                    qed
                                  next
                                    case c_sign
                                    solve( !KU( ~HW_key_priv.2 ) @ #vk.34 )
                                      case compromise_tnic_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                next
                                  case c_senc
                                  solve( !KU( get_encryption_key(get_master_key(hmac(~n.3, ~n.4),
                                                                                hmac(n.5, ~n.6)))
                                         ) @ #vk.35 )
                                    case c_get_encryption_key
                                    solve( !KU( get_master_key(hmac(~n.3, ~n.4), hmac(n.5, ~n.6))
                                           ) @ #vk.38 )
                                      case c_get_master_key
                                      solve( !KU( ~secrets ) @ #vk.38 )
                                        case attestation_6c_7_8
                                        solve( !KU( get_master_key(hmac(~n.7, ~n.8), z) ) @ #vk.52 )
                                          case c_get_master_key
                                          solve( !KU( hmac(~n.3, ~n.4) ) @ #vk.41 )
                                            case attestation_4_5_6a
                                            solve( !KU( hmac(~n.7, ~n.8) ) @ #vk.53 )
                                              case attestation_4_5_6a
                                              solve( !KU( ~n.7 ) @ #vk.47 )
                                                case attestation_1
                                                solve( splitEqs(9) )
                                                  case split_case_1
                                                  solve( !KU( get_mTLS_key_half(partial_mTLS,
                                                                                ~IPVendor_priv.1, pk(x))
                                                         ) @ #vk.54 )
                                                    case c_get_mTLS_key_half
                                                    solve( !KU( ~IPVendor_priv.1 ) @ #vk.59 )
                                                      case compromise_tnic_private_key
                                                      by contradiction /* from formulas */
                                                    qed
                                                  qed
                                                next
                                                  case split_case_2
                                                  solve( !KU( sign(<
                                                                    h(embed_certificate($CTRL.1,
                                                                                        pk(~IPVendor_priv.1))), 
                                                                    pk(x)>,
                                                                   ~HW_key_priv.2)
                                                         ) @ #vk.42 )
                                                    case attestation_2_3
                                                    solve( !KU( ~Ctrl_priv.1 ) @ #vk.55 )
                                                      case compromise_tnic_private_key
                                                      by contradiction /* from formulas */
                                                    qed
                                                  next
                                                    case c_sign
                                                    solve( !KU( ~HW_key_priv.2 ) @ #vk.59 )
                                                      case compromise_tnic_private_key
                                                      by contradiction /* from formulas */
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            next
                                              case c_hmac
                                              by solve( !KU( ~n.8 ) @ #vk.57 )
                                            qed
                                          next
                                            case c_hmac
                                            by solve( !KU( ~n.4 ) @ #vk.55 )
                                          qed
                                        next
                                          case compromise_tnic_private_key
                                          by contradiction /* from formulas */
                                        qed
                                      next
                                        case compromise_tnic_private_key
                                        by contradiction /* from formulas */
                                      qed
                                    next
                                      case compromise_tnic_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            next
                              case c_senc
                              solve( !KU( get_encryption_key(get_master_key(z, hmac(n.3, ~n.4)))
                                     ) @ #vk.25 )
                                case c_get_encryption_key
                                solve( !KU( get_master_key(z, hmac(n.3, ~n.4)) ) @ #vk.28 )
                                  case c_get_master_key
                                  solve( !KU( senc(<'Secrets', ~secrets>,
                                                   get_encryption_key(get_master_key(z, hmac(n.3, ~n.4))))
                                         ) @ #vk.21 )
                                    case attestation_6c_7_8
                                    solve( !KU( hmac(~n.3, ~n.4) ) @ #vk.29 )
                                      case attestation_4_5_6a
                                      solve( !KU( ~n.3 ) @ #vk.34 )
                                        case attestation_1
                                        solve( !KU( sign(<
                                                          h(embed_certificate($CTRL.1,
                                                                              pk(~IPVendor_priv.1))), 
                                                          pk(x)>,
                                                         ~HW_key_priv.2)
                                               ) @ #vk.39 )
                                          case attestation_2_3
                                          solve( !KU( ~Ctrl_priv.1 ) @ #vk.41 )
                                            case compromise_tnic_private_key
                                            by contradiction /* from formulas */
                                          qed
                                        next
                                          case c_sign
                                          solve( !KU( ~HW_key_priv.2 ) @ #vk.43 )
                                            case compromise_tnic_private_key
                                            by contradiction /* from formulas */
                                          qed
                                        qed
                                      qed
                                    next
                                      case c_hmac
                                      by solve( !KU( ~n.4 ) @ #vk.41 )
                                    qed
                                  next
                                    case c_senc
                                    solve( !KU( ~secrets ) @ #vk.33 )
                                      case attestation_6c_7_8
                                      solve( !KU( get_master_key(hmac(~n.5, ~n.6), z.2) ) @ #vk.45 )
                                        case c_get_master_key
                                        solve( !KU( hmac(~n.3, ~n.4) ) @ #vk.46 )
                                          case attestation_4_5_6a
                                          solve( !KU( ~n.3 ) @ #vk.40 )
                                            case attestation_1
                                            solve( splitEqs(8) )
                                              case split_case_1
                                              solve( !KU( get_mTLS_key_half(partial_mTLS, ~Ctrl_priv.1,
                                                                            retrieve_certificate(CTRL_bin))
                                                     ) @ #vk.36 )
                                                case c_get_mTLS_key_half
                                                solve( !KU( ~Ctrl_priv.1 ) @ #vk.50 )
                                                  case compromise_tnic_private_key
                                                  by contradiction /* from formulas */
                                                qed
                                              qed
                                            next
                                              case split_case_2
                                              solve( splitEqs(9) )
                                                case split_case_1
                                                solve( !KU( get_mTLS_key_half(partial_mTLS, ~IPVendor_priv.1,
                                                                              pk(x))
                                                       ) @ #vk.47 )
                                                  case c_get_mTLS_key_half
                                                  solve( !KU( ~IPVendor_priv.1 ) @ #vk.50 )
                                                    case compromise_tnic_private_key
                                                    by contradiction /* from formulas */
                                                  qed
                                                qed
                                              next
                                                case split_case_2
                                                solve( !KU( sign(<
                                                                  h(embed_certificate($CTRL.1,
                                                                                      pk(~IPVendor_priv.1))), 
                                                                  pk(x)>,
                                                                 ~HW_key_priv.2)
                                                       ) @ #vk.45 )
                                                  case attestation_2_3
                                                  solve( !KU( ~Ctrl_priv.1 ) @ #vk.48 )
                                                    case compromise_tnic_private_key
                                                    by contradiction /* from formulas */
                                                  qed
                                                next
                                                  case c_sign
                                                  solve( !KU( ~HW_key_priv.2 ) @ #vk.50 )
                                                    case compromise_tnic_private_key
                                                    by contradiction /* from formulas */
                                                  qed
                                                qed
                                              qed
                                            next
                                              case split_case_3
                                              solve( !KU( get_mTLS_key_half(partial_mTLS, ~Ctrl_priv.1, z.1)
                                                     ) @ #vk.36 )
                                                case c_get_mTLS_key_half
                                                solve( !KU( ~Ctrl_priv.1 ) @ #vk.50 )
                                                  case compromise_tnic_private_key
                                                  by contradiction /* from formulas */
                                                qed
                                              qed
                                            qed
                                          qed
                                        next
                                          case c_hmac
                                          by solve( !KU( ~n.4 ) @ #vk.48 )
                                        qed
                                      next
                                        case compromise_tnic_private_key
                                        by contradiction /* from formulas */
                                      qed
                                    next
                                      case compromise_tnic_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                next
                                  case compromise_tnic_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          next
                            case recv_msg
                            solve( !KU( senc(<
                                              hmac(get_session_key(~secrets, $TNIC_ID, $TNIC_RECV),
                                                   <msg.1, %cnt>), 
                                              msg.1, %cnt>,
                                             get_session_key(~secrets, $TNIC_ID, $TNIC_RECV))
                                   ) @ #vk.18 )
                              case c_senc
                              solve( !KU( get_session_key(~secrets, $TNIC_ID, $TNIC_RECV) ) @ #vk.20 )
                                case c_get_session_key
                                solve( !KU( ~secrets ) @ #vk.25 )
                                  case attestation_6c_7_8
                                  solve( !KU( get_master_key(hmac(~n.3, ~n.4), z) ) @ #vk.39 )
                                    case c_get_master_key
                                    solve( !KU( hmac(~n.3, ~n.4) ) @ #vk.40 )
                                      case attestation_4_5_6a
                                      solve( !KU( ~n.3 ) @ #vk.34 )
                                        case attestation_1
                                        solve( splitEqs(9) )
                                          case split_case_1
                                          solve( !KU( get_mTLS_key_half(partial_mTLS, ~IPVendor_priv.1, pk(x))
                                                 ) @ #vk.41 )
                                            case c_get_mTLS_key_half
                                            solve( !KU( ~IPVendor_priv.1 ) @ #vk.44 )
                                              case compromise_tnic_private_key
                                              by contradiction /* from formulas */
                                            qed
                                          qed
                                        next
                                          case split_case_2
                                          solve( !KU( sign(<
                                                            h(embed_certificate($CTRL.1,
                                                                                pk(~IPVendor_priv.1))), 
                                                            pk(x)>,
                                                           ~HW_key_priv.1)
                                                 ) @ #vk.39 )
                                            case attestation_2_3
                                            solve( !KU( ~Ctrl_priv.1 ) @ #vk.42 )
                                              case compromise_tnic_private_key
                                              by contradiction /* from formulas */
                                            qed
                                          next
                                            case c_sign
                                            solve( !KU( ~HW_key_priv.1 ) @ #vk.44 )
                                              case compromise_tnic_private_key
                                              by contradiction /* from formulas */
                                            qed
                                          qed
                                        qed
                                      qed
                                    next
                                      case c_hmac
                                      by solve( !KU( ~n.4 ) @ #vk.42 )
                                    qed
                                  next
                                    case compromise_tnic_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case compromise_tnic_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            next
                              case send_msg
                              by solve( (¬(#vr.16 < #vr.19))  ∥ (∃ z. (%cnt = (z++(%cnt%+%1)))) )
                            qed
                          qed
                        next
                          case create_controller
                          solve( TNIC_RecvCounter( ~secrets, $TNIC_RECV, $TNIC_ID, %cnt ) ▶₂ #i )
                            case init_ctrs
                            solve( !KU( senc(<'Bitstream', TNIC_bit.1>,
                                             get_encryption_key(get_master_key(z, hmac(n.3, ~n.4))))
                                   ) @ #vk.17 )
                              case attestation_6c_7_8
                              solve( !KU( ~n.3 ) @ #vk.26 )
                                case attestation_1
                                solve( !KU( senc(<'Secrets', ~secrets>,
                                                 get_encryption_key(get_master_key(hmac(~n.3, ~n.4),
                                                                                   hmac(n.5, ~n.6))))
                                       ) @ #vk.19 )
                                  case attestation_6c_7_8
                                  solve( !KU( sign(<h(embed_certificate($CTRL.1, pk(~IPVendor_priv.1))), 
                                                    pk(x.2)>,
                                                   ~HW_key_priv.2)
                                         ) @ #vk.31 )
                                    case attestation_2_3
                                    solve( !KU( sign(<~n.3, 
                                                      <h(embed_certificate($CTRL.1, pk(~IPVendor_priv.1))), 
                                                       pk(~Ctrl_priv.2)>, 
                                                      sign(<
                                                            h(embed_certificate($CTRL.1,
                                                                                pk(~IPVendor_priv.1))), 
                                                            pk(~Ctrl_priv.2)>,
                                                           ~HW_key_priv.2)
                                                     >,
                                                     ~Ctrl_priv.2)
                                           ) @ #vk.32 )
                                      case attestation_2_3
                                      solve( !KU( senc(<'frm', $frm.1>, ~HW_key_priv.2) ) @ #vk.28 )
                                        case c_senc
                                        solve( !KU( ~HW_key_priv.2 ) @ #vk.36 )
                                          case compromise_tnic_private_key
                                          by contradiction /* from formulas */
                                        qed
                                      next
                                        case publish_firmware
                                        solve( !KU( mTLS_handshake(hmac(n.5, ~n.6), ~Ctrl_priv.1,
                                                                   pk(~IPVendor_priv.1))
                                               ) @ #vk.29 )
                                          case attestation_6b
                                          solve( !KU( embed_certificate($CTRL.1, pk(~IPVendor_priv.1))
                                                 ) @ #vk.28 )
                                            case c_embed_certificate
                                            solve( TNIC_RecvCounter( ~secrets, $TNIC_RECV, $TNIC_ID, %1
                                                   ) ▶₂ #j )
                                              case init_ctrs
                                              by contradiction /* cyclic */
                                            qed
                                          next
                                            case create_controller
                                            solve( TNIC_RecvCounter( ~secrets, $TNIC_RECV, $TNIC_ID, %1
                                                   ) ▶₂ #j )
                                              case init_ctrs
                                              by contradiction /* cyclic */
                                            qed
                                          qed
                                        next
                                          case c_mTLS_handshake
                                          solve( !KU( ~Ctrl_priv.1 ) @ #vk.36 )
                                            case compromise_tnic_private_key
                                            by contradiction /* from formulas */
                                          qed
                                        qed
                                      qed
                                    next
                                      case c_sign
                                      solve( !KU( ~Ctrl_priv.1 ) @ #vk.36 )
                                        case compromise_tnic_private_key
                                        by contradiction /* from formulas */
                                      qed
                                    qed
                                  next
                                    case c_sign
                                    solve( !KU( ~HW_key_priv.2 ) @ #vk.33 )
                                      case compromise_tnic_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                next
                                  case c_senc
                                  solve( !KU( get_encryption_key(get_master_key(hmac(~n.3, ~n.4),
                                                                                hmac(n.5, ~n.6)))
                                         ) @ #vk.34 )
                                    case c_get_encryption_key
                                    solve( !KU( get_master_key(hmac(~n.3, ~n.4), hmac(n.5, ~n.6))
                                           ) @ #vk.37 )
                                      case c_get_master_key
                                      solve( !KU( ~secrets ) @ #vk.37 )
                                        case attestation_6c_7_8
                                        solve( !KU( get_master_key(hmac(~n.7, ~n.8), z) ) @ #vk.51 )
                                          case c_get_master_key
                                          solve( !KU( hmac(~n.3, ~n.4) ) @ #vk.40 )
                                            case attestation_4_5_6a
                                            solve( !KU( hmac(~n.7, ~n.8) ) @ #vk.52 )
                                              case attestation_4_5_6a
                                              solve( !KU( ~n.7 ) @ #vk.46 )
                                                case attestation_1
                                                solve( splitEqs(9) )
                                                  case split_case_1
                                                  solve( !KU( get_mTLS_key_half(partial_mTLS,
                                                                                ~IPVendor_priv.1, pk(x))
                                                         ) @ #vk.53 )
                                                    case c_get_mTLS_key_half
                                                    solve( !KU( ~IPVendor_priv.1 ) @ #vk.58 )
                                                      case compromise_tnic_private_key
                                                      by contradiction /* from formulas */
                                                    qed
                                                  qed
                                                next
                                                  case split_case_2
                                                  solve( !KU( sign(<
                                                                    h(embed_certificate($CTRL.1,
                                                                                        pk(~IPVendor_priv.1))), 
                                                                    pk(x)>,
                                                                   ~HW_key_priv.2)
                                                         ) @ #vk.41 )
                                                    case attestation_2_3
                                                    solve( !KU( ~Ctrl_priv.1 ) @ #vk.54 )
                                                      case compromise_tnic_private_key
                                                      by contradiction /* from formulas */
                                                    qed
                                                  next
                                                    case c_sign
                                                    solve( !KU( ~HW_key_priv.2 ) @ #vk.58 )
                                                      case compromise_tnic_private_key
                                                      by contradiction /* from formulas */
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            next
                                              case c_hmac
                                              by solve( !KU( ~n.8 ) @ #vk.56 )
                                            qed
                                          next
                                            case c_hmac
                                            by solve( !KU( ~n.4 ) @ #vk.54 )
                                          qed
                                        next
                                          case compromise_tnic_private_key
                                          by contradiction /* from formulas */
                                        qed
                                      next
                                        case compromise_tnic_private_key
                                        by contradiction /* from formulas */
                                      qed
                                    next
                                      case compromise_tnic_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            next
                              case c_senc
                              solve( !KU( get_encryption_key(get_master_key(z, hmac(n.3, ~n.4)))
                                     ) @ #vk.24 )
                                case c_get_encryption_key
                                solve( !KU( get_master_key(z, hmac(n.3, ~n.4)) ) @ #vk.27 )
                                  case c_get_master_key
                                  solve( !KU( senc(<'Secrets', ~secrets>,
                                                   get_encryption_key(get_master_key(z, hmac(n.3, ~n.4))))
                                         ) @ #vk.20 )
                                    case attestation_6c_7_8
                                    solve( !KU( hmac(~n.3, ~n.4) ) @ #vk.28 )
                                      case attestation_4_5_6a
                                      solve( !KU( ~n.3 ) @ #vk.33 )
                                        case attestation_1
                                        solve( !KU( sign(<
                                                          h(embed_certificate($CTRL.1,
                                                                              pk(~IPVendor_priv.1))), 
                                                          pk(x)>,
                                                         ~HW_key_priv.2)
                                               ) @ #vk.38 )
                                          case attestation_2_3
                                          solve( !KU( ~Ctrl_priv.1 ) @ #vk.40 )
                                            case compromise_tnic_private_key
                                            by contradiction /* from formulas */
                                          qed
                                        next
                                          case c_sign
                                          solve( !KU( ~HW_key_priv.2 ) @ #vk.42 )
                                            case compromise_tnic_private_key
                                            by contradiction /* from formulas */
                                          qed
                                        qed
                                      qed
                                    next
                                      case c_hmac
                                      by solve( !KU( ~n.4 ) @ #vk.40 )
                                    qed
                                  next
                                    case c_senc
                                    solve( !KU( ~secrets ) @ #vk.32 )
                                      case attestation_6c_7_8
                                      solve( !KU( get_master_key(hmac(~n.5, ~n.6), z.2) ) @ #vk.44 )
                                        case c_get_master_key
                                        solve( !KU( hmac(~n.3, ~n.4) ) @ #vk.45 )
                                          case attestation_4_5_6a
                                          solve( !KU( ~n.3 ) @ #vk.39 )
                                            case attestation_1
                                            solve( splitEqs(8) )
                                              case split_case_1
                                              solve( !KU( get_mTLS_key_half(partial_mTLS, ~Ctrl_priv.1,
                                                                            retrieve_certificate(CTRL_bin))
                                                     ) @ #vk.35 )
                                                case c_get_mTLS_key_half
                                                solve( !KU( ~Ctrl_priv.1 ) @ #vk.49 )
                                                  case compromise_tnic_private_key
                                                  by contradiction /* from formulas */
                                                qed
                                              qed
                                            next
                                              case split_case_2
                                              solve( splitEqs(9) )
                                                case split_case_1
                                                solve( !KU( get_mTLS_key_half(partial_mTLS, ~IPVendor_priv.1,
                                                                              pk(x))
                                                       ) @ #vk.46 )
                                                  case c_get_mTLS_key_half
                                                  solve( !KU( ~IPVendor_priv.1 ) @ #vk.49 )
                                                    case compromise_tnic_private_key
                                                    by contradiction /* from formulas */
                                                  qed
                                                qed
                                              next
                                                case split_case_2
                                                solve( !KU( sign(<
                                                                  h(embed_certificate($CTRL.1,
                                                                                      pk(~IPVendor_priv.1))), 
                                                                  pk(x)>,
                                                                 ~HW_key_priv.2)
                                                       ) @ #vk.44 )
                                                  case attestation_2_3
                                                  solve( !KU( ~Ctrl_priv.1 ) @ #vk.47 )
                                                    case compromise_tnic_private_key
                                                    by contradiction /* from formulas */
                                                  qed
                                                next
                                                  case c_sign
                                                  solve( !KU( ~HW_key_priv.2 ) @ #vk.49 )
                                                    case compromise_tnic_private_key
                                                    by contradiction /* from formulas */
                                                  qed
                                                qed
                                              qed
                                            next
                                              case split_case_3
                                              solve( !KU( get_mTLS_key_half(partial_mTLS, ~Ctrl_priv.1, z.1)
                                                     ) @ #vk.35 )
                                                case c_get_mTLS_key_half
                                                solve( !KU( ~Ctrl_priv.1 ) @ #vk.49 )
                                                  case compromise_tnic_private_key
                                                  by contradiction /* from formulas */
                                                qed
                                              qed
                                            qed
                                          qed
                                        next
                                          case c_hmac
                                          by solve( !KU( ~n.4 ) @ #vk.47 )
                                        qed
                                      next
                                        case compromise_tnic_private_key
                                        by contradiction /* from formulas */
                                      qed
                                    next
                                      case compromise_tnic_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                next
                                  case compromise_tnic_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          next
                            case recv_msg
                            solve( !KU( senc(<
                                              hmac(get_session_key(~secrets, $TNIC_ID, $TNIC_RECV),
                                                   <msg.1, %cnt>), 
                                              msg.1, %cnt>,
                                             get_session_key(~secrets, $TNIC_ID, $TNIC_RECV))
                                   ) @ #vk.17 )
                              case c_senc
                              solve( !KU( get_session_key(~secrets, $TNIC_ID, $TNIC_RECV) ) @ #vk.19 )
                                case c_get_session_key
                                solve( !KU( ~secrets ) @ #vk.24 )
                                  case attestation_6c_7_8
                                  solve( !KU( get_master_key(hmac(~n.3, ~n.4), z) ) @ #vk.38 )
                                    case c_get_master_key
                                    solve( !KU( hmac(~n.3, ~n.4) ) @ #vk.39 )
                                      case attestation_4_5_6a
                                      solve( !KU( ~n.3 ) @ #vk.33 )
                                        case attestation_1
                                        solve( splitEqs(9) )
                                          case split_case_1
                                          solve( !KU( get_mTLS_key_half(partial_mTLS, ~IPVendor_priv.1, pk(x))
                                                 ) @ #vk.40 )
                                            case c_get_mTLS_key_half
                                            solve( !KU( ~IPVendor_priv.1 ) @ #vk.43 )
                                              case compromise_tnic_private_key
                                              by contradiction /* from formulas */
                                            qed
                                          qed
                                        next
                                          case split_case_2
                                          solve( !KU( sign(<
                                                            h(embed_certificate($CTRL.1,
                                                                                pk(~IPVendor_priv.1))), 
                                                            pk(x)>,
                                                           ~HW_key_priv.1)
                                                 ) @ #vk.38 )
                                            case attestation_2_3
                                            solve( !KU( ~Ctrl_priv.1 ) @ #vk.41 )
                                              case compromise_tnic_private_key
                                              by contradiction /* from formulas */
                                            qed
                                          next
                                            case c_sign
                                            solve( !KU( ~HW_key_priv.1 ) @ #vk.43 )
                                              case compromise_tnic_private_key
                                              by contradiction /* from formulas */
                                            qed
                                          qed
                                        qed
                                      qed
                                    next
                                      case c_hmac
                                      by solve( !KU( ~n.4 ) @ #vk.41 )
                                    qed
                                  next
                                    case compromise_tnic_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case compromise_tnic_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            next
                              case send_msg
                              by solve( (¬(#vr.16 < #vr.20))  ∥ (∃ z. (%cnt = (z++(%cnt%+%1)))) )
                            qed
                          qed
                        qed
                      next
                        case c_mTLS_handshake
                        solve( !KU( ~Ctrl_priv.1 ) @ #vk.20 )
                          case compromise_tnic_private_key
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case c_sign
                solve( !KU( ~Ctrl_priv.1 ) @ #vk.21 )
                  case compromise_tnic_private_key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case c_sign
              solve( !KU( ~HW_key_priv.1 ) @ #vk.18 )
                case compromise_tnic_private_key
                by contradiction /* from formulas */
              qed
            qed
          qed
        next
          case c_senc
          solve( !KU( get_encryption_key(get_master_key(hmac(~n, ~n.1),
                                                        hmac(n.2, ~n.3)))
                 ) @ #vk.19 )
            case c_get_encryption_key
            solve( !KU( get_master_key(hmac(~n, ~n.1), hmac(n.2, ~n.3)) ) @ #vk.22 )
              case c_get_master_key
              solve( !KU( ~secrets ) @ #vk.22 )
                case attestation_6c_7_8
                solve( !KU( get_master_key(hmac(~n.4, ~n.5), z) ) @ #vk.36 )
                  case c_get_master_key
                  solve( !KU( hmac(~n, ~n.1) ) @ #vk.25 )
                    case attestation_4_5_6a
                    solve( !KU( hmac(~n.4, ~n.5) ) @ #vk.37 )
                      case attestation_4_5_6a
                      solve( !KU( ~n.4 ) @ #vk.31 )
                        case attestation_1
                        solve( !TNIC_Connection( $TNIC_SEND, $TNIC_RECV, ~secrets ) ▶₁ #j )
                          case init_ctrs
                          solve( splitEqs(4) )
                            case split_case_1
                            solve( !KU( get_mTLS_key_half(partial_mTLS, ~IPVendor_priv, pk(x.2))
                                   ) @ #vk.38 )
                              case c_get_mTLS_key_half
                              solve( !KU( ~IPVendor_priv ) @ #vk.43 )
                                case compromise_tnic_private_key
                                by contradiction /* from formulas */
                              qed
                            qed
                          next
                            case split_case_2
                            solve( !KU( sign(<h(embed_certificate($CTRL, pk(~IPVendor_priv))), 
                                              pk(x.2)>,
                                             ~HW_key_priv.1)
                                   ) @ #vk.27 )
                              case attestation_2_3
                              solve( !KU( ~Ctrl_priv.1 ) @ #vk.39 )
                                case compromise_tnic_private_key
                                by contradiction /* from formulas */
                              qed
                            next
                              case c_sign
                              solve( !KU( ~HW_key_priv.1 ) @ #vk.43 )
                                case compromise_tnic_private_key
                                by contradiction /* from formulas */
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case c_hmac
                      by solve( !KU( ~n.5 ) @ #vk.41 )
                    qed
                  next
                    case c_hmac
                    by solve( !KU( ~n.1 ) @ #vk.39 )
                  qed
                next
                  case compromise_tnic_private_key
                  by contradiction /* from formulas */
                qed
              next
                case compromise_tnic_private_key
                by contradiction /* from formulas */
              qed
            next
              case compromise_tnic_private_key
              by contradiction /* from formulas */
            qed
          qed
        qed
      qed
    next
      case c_senc
      solve( !KU( get_encryption_key(get_master_key(z, hmac(n, ~n.1)))
             ) @ #vk.9 )
        case c_get_encryption_key
        solve( !KU( get_master_key(z, hmac(n, ~n.1)) ) @ #vk.12 )
          case c_get_master_key
          solve( !KU( senc(<'Secrets', ~secrets>,
                           get_encryption_key(get_master_key(z, hmac(n, ~n.1))))
                 ) @ #vk.5 )
            case attestation_6c_7_8
            solve( !KU( hmac(~n, ~n.1) ) @ #vk.13 )
              case attestation_4_5_6a
              solve( !KU( ~n ) @ #vk.18 )
                case attestation_1
                solve( !TNIC_Connection( $TNIC_SEND, $TNIC_RECV, ~secrets ) ▶₁ #j )
                  case init_ctrs
                  solve( !KU( sign(<h(embed_certificate($CTRL, pk(~IPVendor_priv))), pk(x)
                                   >,
                                   ~HW_key_priv.1)
                         ) @ #vk.23 )
                    case attestation_2_3
                    solve( !KU( ~Ctrl_priv ) @ #vk.25 )
                      case compromise_tnic_private_key
                      by contradiction /* from formulas */
                    qed
                  next
                    case c_sign
                    solve( !KU( ~HW_key_priv.1 ) @ #vk.27 )
                      case compromise_tnic_private_key
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            next
              case c_hmac
              by solve( !KU( ~n.1 ) @ #vk.25 )
            qed
          next
            case c_senc
            solve( !KU( ~secrets ) @ #vk.17 )
              case attestation_6c_7_8
              solve( !KU( get_master_key(hmac(~n.2, ~n.3), z.2) ) @ #vk.29 )
                case c_get_master_key
                solve( !KU( hmac(~n.2, ~n.3) ) @ #vk.30 )
                  case attestation_4_5_6a
                  solve( !KU( ~n.2 ) @ #vk.24 )
                    case attestation_1
                    solve( !TNIC_Connection( $TNIC_SEND, $TNIC_RECV, ~secrets ) ▶₁ #j )
                      case init_ctrs
                      solve( splitEqs(2) )
                        case split_case_1
                        solve( !KU( get_mTLS_key_half(partial_mTLS, ~Ctrl_priv,
                                                      retrieve_certificate(CTRL_bin))
                               ) @ #vk.21 )
                          case c_get_mTLS_key_half
                          solve( !KU( ~Ctrl_priv ) @ #vk.34 )
                            case compromise_tnic_private_key
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case split_case_2
                        solve( !KU( get_mTLS_key_half(partial_mTLS, ~Ctrl_priv, z) ) @ #vk.21 )
                          case c_get_mTLS_key_half
                          solve( !KU( ~Ctrl_priv ) @ #vk.34 )
                            case compromise_tnic_private_key
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case split_case_3
                        solve( splitEqs(4) )
                          case split_case_1
                          solve( !KU( get_mTLS_key_half(partial_mTLS, ~IPVendor_priv, pk(x))
                                 ) @ #vk.31 )
                            case c_get_mTLS_key_half
                            solve( !KU( ~IPVendor_priv ) @ #vk.34 )
                              case compromise_tnic_private_key
                              by contradiction /* from formulas */
                            qed
                          qed
                        next
                          case split_case_2
                          solve( !KU( sign(<h(embed_certificate($CTRL, pk(~IPVendor_priv))), pk(x)
                                           >,
                                           ~HW_key_priv.1)
                                 ) @ #vk.29 )
                            case attestation_2_3
                            solve( !KU( ~Ctrl_priv ) @ #vk.32 )
                              case compromise_tnic_private_key
                              by contradiction /* from formulas */
                            qed
                          next
                            case c_sign
                            solve( !KU( ~HW_key_priv.1 ) @ #vk.34 )
                              case compromise_tnic_private_key
                              by contradiction /* from formulas */
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case c_hmac
                  by solve( !KU( ~n.3 ) @ #vk.32 )
                qed
              next
                case compromise_tnic_private_key
                by contradiction /* from formulas */
              qed
            next
              case compromise_tnic_private_key
              by contradiction /* from formulas */
            qed
          qed
        next
          case compromise_tnic_private_key
          by contradiction /* from formulas */
        qed
      qed
    qed
  qed
next
  case case_2
  solve( !TNIC_Connection( $TNIC_SEND, $TNIC_RECV, secrets ) ▶₁ #i )
    case init_ctrs
    solve( !KU( senc(<'Bitstream', TNIC_bit>,
                     get_encryption_key(get_master_key(z, hmac(n, ~n.1))))
           ) @ #vk.2 )
      case attestation_6c_7_8
      solve( !KU( ~n.1 ) @ #vk.11 )
        case attestation_1
        solve( !KU( senc(<'Secrets', ~secrets>,
                         get_encryption_key(get_master_key(hmac(~n, ~n.1), hmac(n.2, ~n.3))))
               ) @ #vk.4 )
          case attestation_6c_7_8
          solve( !TNIC_Connection( $TNIC_SEND, $TNIC_RECV, ~secrets ) ▶₁ #j )
            case init_ctrs
            solve( !KU( sign(<h(embed_certificate($CTRL, pk(~IPVendor_priv))), 
                              pk(x.2)>,
                             ~HW_key_priv.1)
                   ) @ #vk.16 )
              case attestation_2_3
              solve( !KU( sign(<~n, 
                                <h(embed_certificate($CTRL, pk(~IPVendor_priv))), pk(~Ctrl_priv.1)>, 
                                sign(<h(embed_certificate($CTRL, pk(~IPVendor_priv))), pk(~Ctrl_priv.1)>,
                                     ~HW_key_priv.1)
                               >,
                               ~Ctrl_priv.1)
                     ) @ #vk.17 )
                case attestation_2_3
                solve( !KU( senc(<
                                  hmac(get_session_key(~secrets, $TNIC_SEND, $TNIC_RECV), <msg, %cnt>), 
                                  msg, %cnt>,
                                 get_session_key(~secrets, $TNIC_SEND, $TNIC_RECV))
                       ) @ #vk.8 )
                  case c_senc
                  solve( !KU( get_session_key(~secrets, $TNIC_SEND, $TNIC_RECV)
                         ) @ #vk.21 )
                    case c_get_session_key
                    solve( !KU( ~secrets ) @ #vk.26 )
                      case attestation_6c_7_8
                      solve( !KU( get_master_key(hmac(~n.4, ~n.5), z) ) @ #vk.40 )
                        case c_get_master_key
                        solve( !KU( hmac(~n.4, ~n.5) ) @ #vk.41 )
                          case attestation_4_5_6a
                          solve( !KU( ~n.4 ) @ #vk.35 )
                            case attestation_1
                            solve( splitEqs(5) )
                              case split_case_1
                              solve( !KU( get_mTLS_key_half(partial_mTLS, ~IPVendor_priv.1, pk(x.2))
                                     ) @ #vk.42 )
                                case c_get_mTLS_key_half
                                solve( !KU( ~IPVendor_priv.1 ) @ #vk.45 )
                                  case compromise_tnic_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            next
                              case split_case_2
                              solve( !KU( sign(<h(embed_certificate($CTRL.1, pk(~IPVendor_priv.1))), 
                                                pk(x.2)>,
                                               ~HW_key_priv.2)
                                     ) @ #vk.40 )
                                case attestation_2_3
                                solve( !KU( ~Ctrl_priv.2 ) @ #vk.43 )
                                  case compromise_tnic_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case c_sign
                                solve( !KU( ~HW_key_priv.2 ) @ #vk.45 )
                                  case compromise_tnic_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        next
                          case c_hmac
                          by solve( !KU( ~n.5 ) @ #vk.43 )
                        qed
                      next
                        case compromise_tnic_private_key
                        by contradiction /* from formulas */
                      qed
                    next
                      case compromise_tnic_private_key
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case send_msg
                  solve( !KU( senc(<
                                    hmac(get_session_key(~secrets, $TNIC_SEND, $TNIC_RECV), <~msg, %cnt.1>), 
                                    ~msg, %cnt.1>,
                                   get_session_key(~secrets, $TNIC_SEND, $TNIC_RECV))
                         ) @ #vk.9 )
                    case c_senc
                    solve( !KU( get_session_key(~secrets, $TNIC_SEND, $TNIC_RECV)
                           ) @ #vk.21 )
                      case c_get_session_key
                      solve( !KU( ~msg ) @ #vk.24 )
                        case send_msg
                        solve( !KU( ~secrets ) @ #vk.26 )
                          case attestation_6c_7_8
                          solve( !KU( get_master_key(hmac(~n.4, ~n.5), z) ) @ #vk.40 )
                            case c_get_master_key
                            solve( !KU( hmac(~n.4, ~n.5) ) @ #vk.41 )
                              case attestation_4_5_6a
                              solve( !KU( ~n.4 ) @ #vk.35 )
                                case attestation_1
                                solve( splitEqs(8) )
                                  case split_case_1
                                  solve( !KU( get_mTLS_key_half(partial_mTLS, ~IPVendor_priv.1, pk(x.2))
                                         ) @ #vk.42 )
                                    case c_get_mTLS_key_half
                                    solve( !KU( ~IPVendor_priv.1 ) @ #vk.45 )
                                      case compromise_tnic_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                next
                                  case split_case_2
                                  solve( !KU( sign(<h(embed_certificate($CTRL.1, pk(~IPVendor_priv.1))), 
                                                    pk(x.2)>,
                                                   ~HW_key_priv.2)
                                         ) @ #vk.40 )
                                    case attestation_2_3
                                    solve( !KU( ~Ctrl_priv.2 ) @ #vk.43 )
                                      case compromise_tnic_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case c_sign
                                    solve( !KU( ~HW_key_priv.2 ) @ #vk.45 )
                                      case compromise_tnic_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            next
                              case c_hmac
                              by solve( !KU( ~n.5 ) @ #vk.43 )
                            qed
                          next
                            case compromise_tnic_private_key
                            by contradiction /* from formulas */
                          qed
                        next
                          case compromise_tnic_private_key
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case send_msg
                    solve( !KU( senc(<'frm', $frm>, ~HW_key_priv) ) @ #vk.12 )
                      case c_senc
                      solve( !KU( ~HW_key_priv ) @ #vk.20 )
                        case compromise_tnic_private_key
                        by contradiction /* from formulas */
                      qed
                    next
                      case publish_firmware
                      solve( !KU( mTLS_handshake(hmac(n.2, ~n.3), ~Ctrl_priv.1,
                                                 pk(~IPVendor_priv))
                             ) @ #vk.13 )
                        case attestation_6b
                        solve( !KU( embed_certificate($CTRL, pk(~IPVendor_priv)) ) @ #vk.12 )
                          case c_embed_certificate
                          solve( TNIC_RecvCounter( ~secrets, $TNIC_RECV, $TNIC_ID, %cnt ) ▶₂ #i )
                            case init_ctrs
                            solve( !KU( senc(<'Bitstream', TNIC_bit.1>,
                                             get_encryption_key(get_master_key(z, hmac(n.3, ~n.4))))
                                   ) @ #vk.18 )
                              case attestation_6c_7_8
                              solve( !KU( ~n.3 ) @ #vk.27 )
                                case attestation_1
                                solve( !KU( senc(<'Secrets', ~secrets>,
                                                 get_encryption_key(get_master_key(hmac(~n.3, ~n.4),
                                                                                   hmac(n.5, ~n.6))))
                                       ) @ #vk.20 )
                                  case attestation_6c_7_8
                                  solve( !KU( sign(<h(embed_certificate($CTRL.1, pk(~IPVendor_priv.1))), 
                                                    pk(x.2)>,
                                                   ~HW_key_priv.2)
                                         ) @ #vk.32 )
                                    case attestation_2_3
                                    solve( !KU( sign(<~n.3, 
                                                      <h(embed_certificate($CTRL.1, pk(~IPVendor_priv.1))), 
                                                       pk(~Ctrl_priv.2)>, 
                                                      sign(<
                                                            h(embed_certificate($CTRL.1,
                                                                                pk(~IPVendor_priv.1))), 
                                                            pk(~Ctrl_priv.2)>,
                                                           ~HW_key_priv.2)
                                                     >,
                                                     ~Ctrl_priv.2)
                                           ) @ #vk.33 )
                                      case attestation_2_3
                                      solve( !KU( senc(<'frm', $frm.1>, ~HW_key_priv.2) ) @ #vk.29 )
                                        case c_senc
                                        solve( !KU( ~HW_key_priv.2 ) @ #vk.37 )
                                          case compromise_tnic_private_key
                                          by contradiction /* from formulas */
                                        qed
                                      next
                                        case publish_firmware
                                        solve( !KU( mTLS_handshake(hmac(n.5, ~n.6), ~Ctrl_priv.1,
                                                                   pk(~IPVendor_priv.1))
                                               ) @ #vk.30 )
                                          case attestation_6b
                                          solve( !KU( embed_certificate($CTRL.1, pk(~IPVendor_priv.1))
                                                 ) @ #vk.29 )
                                            case c_embed_certificate
                                            solve( TNIC_RecvCounter( ~secrets, $TNIC_RECV, $TNIC_ID, %1
                                                   ) ▶₂ #j )
                                              case init_ctrs
                                              by contradiction /* cyclic */
                                            qed
                                          next
                                            case create_controller
                                            solve( TNIC_RecvCounter( ~secrets, $TNIC_RECV, $TNIC_ID, %1
                                                   ) ▶₂ #j )
                                              case init_ctrs
                                              by contradiction /* cyclic */
                                            qed
                                          qed
                                        next
                                          case c_mTLS_handshake
                                          solve( !KU( ~Ctrl_priv.1 ) @ #vk.37 )
                                            case compromise_tnic_private_key
                                            by contradiction /* from formulas */
                                          qed
                                        qed
                                      qed
                                    next
                                      case c_sign
                                      solve( !KU( ~Ctrl_priv.1 ) @ #vk.37 )
                                        case compromise_tnic_private_key
                                        by contradiction /* from formulas */
                                      qed
                                    qed
                                  next
                                    case c_sign
                                    solve( !KU( ~HW_key_priv.2 ) @ #vk.34 )
                                      case compromise_tnic_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                next
                                  case c_senc
                                  solve( !KU( get_encryption_key(get_master_key(hmac(~n.3, ~n.4),
                                                                                hmac(n.5, ~n.6)))
                                         ) @ #vk.35 )
                                    case c_get_encryption_key
                                    solve( !KU( get_master_key(hmac(~n.3, ~n.4), hmac(n.5, ~n.6))
                                           ) @ #vk.38 )
                                      case c_get_master_key
                                      solve( !KU( ~secrets ) @ #vk.38 )
                                        case attestation_6c_7_8
                                        solve( !KU( get_master_key(hmac(~n.7, ~n.8), z) ) @ #vk.52 )
                                          case c_get_master_key
                                          solve( !KU( hmac(~n.3, ~n.4) ) @ #vk.41 )
                                            case attestation_4_5_6a
                                            solve( !KU( hmac(~n.7, ~n.8) ) @ #vk.53 )
                                              case attestation_4_5_6a
                                              solve( !KU( ~n.7 ) @ #vk.47 )
                                                case attestation_1
                                                solve( splitEqs(9) )
                                                  case split_case_1
                                                  solve( !KU( get_mTLS_key_half(partial_mTLS,
                                                                                ~IPVendor_priv.1, pk(x))
                                                         ) @ #vk.54 )
                                                    case c_get_mTLS_key_half
                                                    solve( !KU( ~IPVendor_priv.1 ) @ #vk.59 )
                                                      case compromise_tnic_private_key
                                                      by contradiction /* from formulas */
                                                    qed
                                                  qed
                                                next
                                                  case split_case_2
                                                  solve( !KU( sign(<
                                                                    h(embed_certificate($CTRL.1,
                                                                                        pk(~IPVendor_priv.1))), 
                                                                    pk(x)>,
                                                                   ~HW_key_priv.2)
                                                         ) @ #vk.42 )
                                                    case attestation_2_3
                                                    solve( !KU( ~Ctrl_priv.1 ) @ #vk.55 )
                                                      case compromise_tnic_private_key
                                                      by contradiction /* from formulas */
                                                    qed
                                                  next
                                                    case c_sign
                                                    solve( !KU( ~HW_key_priv.2 ) @ #vk.59 )
                                                      case compromise_tnic_private_key
                                                      by contradiction /* from formulas */
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            next
                                              case c_hmac
                                              by solve( !KU( ~n.8 ) @ #vk.57 )
                                            qed
                                          next
                                            case c_hmac
                                            by solve( !KU( ~n.4 ) @ #vk.55 )
                                          qed
                                        next
                                          case compromise_tnic_private_key
                                          by contradiction /* from formulas */
                                        qed
                                      next
                                        case compromise_tnic_private_key
                                        by contradiction /* from formulas */
                                      qed
                                    next
                                      case compromise_tnic_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            next
                              case c_senc
                              solve( !KU( get_encryption_key(get_master_key(z, hmac(n.3, ~n.4)))
                                     ) @ #vk.25 )
                                case c_get_encryption_key
                                solve( !KU( get_master_key(z, hmac(n.3, ~n.4)) ) @ #vk.28 )
                                  case c_get_master_key
                                  solve( !KU( senc(<'Secrets', ~secrets>,
                                                   get_encryption_key(get_master_key(z, hmac(n.3, ~n.4))))
                                         ) @ #vk.21 )
                                    case attestation_6c_7_8
                                    solve( !KU( hmac(~n.3, ~n.4) ) @ #vk.29 )
                                      case attestation_4_5_6a
                                      solve( !KU( ~n.3 ) @ #vk.34 )
                                        case attestation_1
                                        solve( !KU( sign(<
                                                          h(embed_certificate($CTRL.1,
                                                                              pk(~IPVendor_priv.1))), 
                                                          pk(x)>,
                                                         ~HW_key_priv.2)
                                               ) @ #vk.39 )
                                          case attestation_2_3
                                          solve( !KU( ~Ctrl_priv.1 ) @ #vk.41 )
                                            case compromise_tnic_private_key
                                            by contradiction /* from formulas */
                                          qed
                                        next
                                          case c_sign
                                          solve( !KU( ~HW_key_priv.2 ) @ #vk.43 )
                                            case compromise_tnic_private_key
                                            by contradiction /* from formulas */
                                          qed
                                        qed
                                      qed
                                    next
                                      case c_hmac
                                      by solve( !KU( ~n.4 ) @ #vk.41 )
                                    qed
                                  next
                                    case c_senc
                                    solve( !KU( ~secrets ) @ #vk.33 )
                                      case attestation_6c_7_8
                                      solve( !KU( get_master_key(hmac(~n.5, ~n.6), z.2) ) @ #vk.45 )
                                        case c_get_master_key
                                        solve( !KU( hmac(~n.3, ~n.4) ) @ #vk.46 )
                                          case attestation_4_5_6a
                                          solve( !KU( ~n.3 ) @ #vk.40 )
                                            case attestation_1
                                            solve( splitEqs(8) )
                                              case split_case_1
                                              solve( !KU( get_mTLS_key_half(partial_mTLS, ~Ctrl_priv.1,
                                                                            retrieve_certificate(CTRL_bin))
                                                     ) @ #vk.36 )
                                                case c_get_mTLS_key_half
                                                solve( !KU( ~Ctrl_priv.1 ) @ #vk.50 )
                                                  case compromise_tnic_private_key
                                                  by contradiction /* from formulas */
                                                qed
                                              qed
                                            next
                                              case split_case_2
                                              solve( splitEqs(9) )
                                                case split_case_1
                                                solve( !KU( get_mTLS_key_half(partial_mTLS, ~IPVendor_priv.1,
                                                                              pk(x))
                                                       ) @ #vk.47 )
                                                  case c_get_mTLS_key_half
                                                  solve( !KU( ~IPVendor_priv.1 ) @ #vk.50 )
                                                    case compromise_tnic_private_key
                                                    by contradiction /* from formulas */
                                                  qed
                                                qed
                                              next
                                                case split_case_2
                                                solve( !KU( sign(<
                                                                  h(embed_certificate($CTRL.1,
                                                                                      pk(~IPVendor_priv.1))), 
                                                                  pk(x)>,
                                                                 ~HW_key_priv.2)
                                                       ) @ #vk.45 )
                                                  case attestation_2_3
                                                  solve( !KU( ~Ctrl_priv.1 ) @ #vk.48 )
                                                    case compromise_tnic_private_key
                                                    by contradiction /* from formulas */
                                                  qed
                                                next
                                                  case c_sign
                                                  solve( !KU( ~HW_key_priv.2 ) @ #vk.50 )
                                                    case compromise_tnic_private_key
                                                    by contradiction /* from formulas */
                                                  qed
                                                qed
                                              qed
                                            next
                                              case split_case_3
                                              solve( !KU( get_mTLS_key_half(partial_mTLS, ~Ctrl_priv.1, z.1)
                                                     ) @ #vk.36 )
                                                case c_get_mTLS_key_half
                                                solve( !KU( ~Ctrl_priv.1 ) @ #vk.50 )
                                                  case compromise_tnic_private_key
                                                  by contradiction /* from formulas */
                                                qed
                                              qed
                                            qed
                                          qed
                                        next
                                          case c_hmac
                                          by solve( !KU( ~n.4 ) @ #vk.48 )
                                        qed
                                      next
                                        case compromise_tnic_private_key
                                        by contradiction /* from formulas */
                                      qed
                                    next
                                      case compromise_tnic_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                next
                                  case compromise_tnic_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          next
                            case recv_msg
                            solve( !KU( senc(<
                                              hmac(get_session_key(~secrets, $TNIC_ID, $TNIC_RECV),
                                                   <msg.1, %cnt>), 
                                              msg.1, %cnt>,
                                             get_session_key(~secrets, $TNIC_ID, $TNIC_RECV))
                                   ) @ #vk.18 )
                              case c_senc
                              solve( !KU( get_session_key(~secrets, $TNIC_ID, $TNIC_RECV) ) @ #vk.20 )
                                case c_get_session_key
                                solve( !KU( ~secrets ) @ #vk.25 )
                                  case attestation_6c_7_8
                                  solve( !KU( get_master_key(hmac(~n.3, ~n.4), z) ) @ #vk.39 )
                                    case c_get_master_key
                                    solve( !KU( hmac(~n.3, ~n.4) ) @ #vk.40 )
                                      case attestation_4_5_6a
                                      solve( !KU( ~n.3 ) @ #vk.34 )
                                        case attestation_1
                                        solve( splitEqs(9) )
                                          case split_case_1
                                          solve( !KU( get_mTLS_key_half(partial_mTLS, ~IPVendor_priv.1, pk(x))
                                                 ) @ #vk.41 )
                                            case c_get_mTLS_key_half
                                            solve( !KU( ~IPVendor_priv.1 ) @ #vk.44 )
                                              case compromise_tnic_private_key
                                              by contradiction /* from formulas */
                                            qed
                                          qed
                                        next
                                          case split_case_2
                                          solve( !KU( sign(<
                                                            h(embed_certificate($CTRL.1,
                                                                                pk(~IPVendor_priv.1))), 
                                                            pk(x)>,
                                                           ~HW_key_priv.1)
                                                 ) @ #vk.39 )
                                            case attestation_2_3
                                            solve( !KU( ~Ctrl_priv.1 ) @ #vk.42 )
                                              case compromise_tnic_private_key
                                              by contradiction /* from formulas */
                                            qed
                                          next
                                            case c_sign
                                            solve( !KU( ~HW_key_priv.1 ) @ #vk.44 )
                                              case compromise_tnic_private_key
                                              by contradiction /* from formulas */
                                            qed
                                          qed
                                        qed
                                      qed
                                    next
                                      case c_hmac
                                      by solve( !KU( ~n.4 ) @ #vk.42 )
                                    qed
                                  next
                                    case compromise_tnic_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case compromise_tnic_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            next
                              case send_msg
                              by solve( (¬(#vr.16 < #vr.19))  ∥ (∃ z. (%cnt = (z++(%cnt%+%1)))) )
                            qed
                          qed
                        next
                          case create_controller
                          solve( TNIC_RecvCounter( ~secrets, $TNIC_RECV, $TNIC_ID, %cnt ) ▶₂ #i )
                            case init_ctrs
                            solve( !KU( senc(<'Bitstream', TNIC_bit.1>,
                                             get_encryption_key(get_master_key(z, hmac(n.3, ~n.4))))
                                   ) @ #vk.17 )
                              case attestation_6c_7_8
                              solve( !KU( ~n.3 ) @ #vk.26 )
                                case attestation_1
                                solve( !KU( senc(<'Secrets', ~secrets>,
                                                 get_encryption_key(get_master_key(hmac(~n.3, ~n.4),
                                                                                   hmac(n.5, ~n.6))))
                                       ) @ #vk.19 )
                                  case attestation_6c_7_8
                                  solve( !KU( sign(<h(embed_certificate($CTRL.1, pk(~IPVendor_priv.1))), 
                                                    pk(x.2)>,
                                                   ~HW_key_priv.2)
                                         ) @ #vk.31 )
                                    case attestation_2_3
                                    solve( !KU( sign(<~n.3, 
                                                      <h(embed_certificate($CTRL.1, pk(~IPVendor_priv.1))), 
                                                       pk(~Ctrl_priv.2)>, 
                                                      sign(<
                                                            h(embed_certificate($CTRL.1,
                                                                                pk(~IPVendor_priv.1))), 
                                                            pk(~Ctrl_priv.2)>,
                                                           ~HW_key_priv.2)
                                                     >,
                                                     ~Ctrl_priv.2)
                                           ) @ #vk.32 )
                                      case attestation_2_3
                                      solve( !KU( senc(<'frm', $frm.1>, ~HW_key_priv.2) ) @ #vk.28 )
                                        case c_senc
                                        solve( !KU( ~HW_key_priv.2 ) @ #vk.36 )
                                          case compromise_tnic_private_key
                                          by contradiction /* from formulas */
                                        qed
                                      next
                                        case publish_firmware
                                        solve( !KU( mTLS_handshake(hmac(n.5, ~n.6), ~Ctrl_priv.1,
                                                                   pk(~IPVendor_priv.1))
                                               ) @ #vk.29 )
                                          case attestation_6b
                                          solve( !KU( embed_certificate($CTRL.1, pk(~IPVendor_priv.1))
                                                 ) @ #vk.28 )
                                            case c_embed_certificate
                                            solve( TNIC_RecvCounter( ~secrets, $TNIC_RECV, $TNIC_ID, %1
                                                   ) ▶₂ #j )
                                              case init_ctrs
                                              by contradiction /* cyclic */
                                            qed
                                          next
                                            case create_controller
                                            solve( TNIC_RecvCounter( ~secrets, $TNIC_RECV, $TNIC_ID, %1
                                                   ) ▶₂ #j )
                                              case init_ctrs
                                              by contradiction /* cyclic */
                                            qed
                                          qed
                                        next
                                          case c_mTLS_handshake
                                          solve( !KU( ~Ctrl_priv.1 ) @ #vk.36 )
                                            case compromise_tnic_private_key
                                            by contradiction /* from formulas */
                                          qed
                                        qed
                                      qed
                                    next
                                      case c_sign
                                      solve( !KU( ~Ctrl_priv.1 ) @ #vk.36 )
                                        case compromise_tnic_private_key
                                        by contradiction /* from formulas */
                                      qed
                                    qed
                                  next
                                    case c_sign
                                    solve( !KU( ~HW_key_priv.2 ) @ #vk.33 )
                                      case compromise_tnic_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                next
                                  case c_senc
                                  solve( !KU( get_encryption_key(get_master_key(hmac(~n.3, ~n.4),
                                                                                hmac(n.5, ~n.6)))
                                         ) @ #vk.34 )
                                    case c_get_encryption_key
                                    solve( !KU( get_master_key(hmac(~n.3, ~n.4), hmac(n.5, ~n.6))
                                           ) @ #vk.37 )
                                      case c_get_master_key
                                      solve( !KU( ~secrets ) @ #vk.37 )
                                        case attestation_6c_7_8
                                        solve( !KU( get_master_key(hmac(~n.7, ~n.8), z) ) @ #vk.51 )
                                          case c_get_master_key
                                          solve( !KU( hmac(~n.3, ~n.4) ) @ #vk.40 )
                                            case attestation_4_5_6a
                                            solve( !KU( hmac(~n.7, ~n.8) ) @ #vk.52 )
                                              case attestation_4_5_6a
                                              solve( !KU( ~n.7 ) @ #vk.46 )
                                                case attestation_1
                                                solve( splitEqs(9) )
                                                  case split_case_1
                                                  solve( !KU( get_mTLS_key_half(partial_mTLS,
                                                                                ~IPVendor_priv.1, pk(x))
                                                         ) @ #vk.53 )
                                                    case c_get_mTLS_key_half
                                                    solve( !KU( ~IPVendor_priv.1 ) @ #vk.58 )
                                                      case compromise_tnic_private_key
                                                      by contradiction /* from formulas */
                                                    qed
                                                  qed
                                                next
                                                  case split_case_2
                                                  solve( !KU( sign(<
                                                                    h(embed_certificate($CTRL.1,
                                                                                        pk(~IPVendor_priv.1))), 
                                                                    pk(x)>,
                                                                   ~HW_key_priv.2)
                                                         ) @ #vk.41 )
                                                    case attestation_2_3
                                                    solve( !KU( ~Ctrl_priv.1 ) @ #vk.54 )
                                                      case compromise_tnic_private_key
                                                      by contradiction /* from formulas */
                                                    qed
                                                  next
                                                    case c_sign
                                                    solve( !KU( ~HW_key_priv.2 ) @ #vk.58 )
                                                      case compromise_tnic_private_key
                                                      by contradiction /* from formulas */
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            next
                                              case c_hmac
                                              by solve( !KU( ~n.8 ) @ #vk.56 )
                                            qed
                                          next
                                            case c_hmac
                                            by solve( !KU( ~n.4 ) @ #vk.54 )
                                          qed
                                        next
                                          case compromise_tnic_private_key
                                          by contradiction /* from formulas */
                                        qed
                                      next
                                        case compromise_tnic_private_key
                                        by contradiction /* from formulas */
                                      qed
                                    next
                                      case compromise_tnic_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            next
                              case c_senc
                              solve( !KU( get_encryption_key(get_master_key(z, hmac(n.3, ~n.4)))
                                     ) @ #vk.24 )
                                case c_get_encryption_key
                                solve( !KU( get_master_key(z, hmac(n.3, ~n.4)) ) @ #vk.27 )
                                  case c_get_master_key
                                  solve( !KU( senc(<'Secrets', ~secrets>,
                                                   get_encryption_key(get_master_key(z, hmac(n.3, ~n.4))))
                                         ) @ #vk.20 )
                                    case attestation_6c_7_8
                                    solve( !KU( hmac(~n.3, ~n.4) ) @ #vk.28 )
                                      case attestation_4_5_6a
                                      solve( !KU( ~n.3 ) @ #vk.33 )
                                        case attestation_1
                                        solve( !KU( sign(<
                                                          h(embed_certificate($CTRL.1,
                                                                              pk(~IPVendor_priv.1))), 
                                                          pk(x)>,
                                                         ~HW_key_priv.2)
                                               ) @ #vk.38 )
                                          case attestation_2_3
                                          solve( !KU( ~Ctrl_priv.1 ) @ #vk.40 )
                                            case compromise_tnic_private_key
                                            by contradiction /* from formulas */
                                          qed
                                        next
                                          case c_sign
                                          solve( !KU( ~HW_key_priv.2 ) @ #vk.42 )
                                            case compromise_tnic_private_key
                                            by contradiction /* from formulas */
                                          qed
                                        qed
                                      qed
                                    next
                                      case c_hmac
                                      by solve( !KU( ~n.4 ) @ #vk.40 )
                                    qed
                                  next
                                    case c_senc
                                    solve( !KU( ~secrets ) @ #vk.32 )
                                      case attestation_6c_7_8
                                      solve( !KU( get_master_key(hmac(~n.5, ~n.6), z.2) ) @ #vk.44 )
                                        case c_get_master_key
                                        solve( !KU( hmac(~n.3, ~n.4) ) @ #vk.45 )
                                          case attestation_4_5_6a
                                          solve( !KU( ~n.3 ) @ #vk.39 )
                                            case attestation_1
                                            solve( splitEqs(8) )
                                              case split_case_1
                                              solve( !KU( get_mTLS_key_half(partial_mTLS, ~Ctrl_priv.1,
                                                                            retrieve_certificate(CTRL_bin))
                                                     ) @ #vk.35 )
                                                case c_get_mTLS_key_half
                                                solve( !KU( ~Ctrl_priv.1 ) @ #vk.49 )
                                                  case compromise_tnic_private_key
                                                  by contradiction /* from formulas */
                                                qed
                                              qed
                                            next
                                              case split_case_2
                                              solve( splitEqs(9) )
                                                case split_case_1
                                                solve( !KU( get_mTLS_key_half(partial_mTLS, ~IPVendor_priv.1,
                                                                              pk(x))
                                                       ) @ #vk.46 )
                                                  case c_get_mTLS_key_half
                                                  solve( !KU( ~IPVendor_priv.1 ) @ #vk.49 )
                                                    case compromise_tnic_private_key
                                                    by contradiction /* from formulas */
                                                  qed
                                                qed
                                              next
                                                case split_case_2
                                                solve( !KU( sign(<
                                                                  h(embed_certificate($CTRL.1,
                                                                                      pk(~IPVendor_priv.1))), 
                                                                  pk(x)>,
                                                                 ~HW_key_priv.2)
                                                       ) @ #vk.44 )
                                                  case attestation_2_3
                                                  solve( !KU( ~Ctrl_priv.1 ) @ #vk.47 )
                                                    case compromise_tnic_private_key
                                                    by contradiction /* from formulas */
                                                  qed
                                                next
                                                  case c_sign
                                                  solve( !KU( ~HW_key_priv.2 ) @ #vk.49 )
                                                    case compromise_tnic_private_key
                                                    by contradiction /* from formulas */
                                                  qed
                                                qed
                                              qed
                                            next
                                              case split_case_3
                                              solve( !KU( get_mTLS_key_half(partial_mTLS, ~Ctrl_priv.1, z.1)
                                                     ) @ #vk.35 )
                                                case c_get_mTLS_key_half
                                                solve( !KU( ~Ctrl_priv.1 ) @ #vk.49 )
                                                  case compromise_tnic_private_key
                                                  by contradiction /* from formulas */
                                                qed
                                              qed
                                            qed
                                          qed
                                        next
                                          case c_hmac
                                          by solve( !KU( ~n.4 ) @ #vk.47 )
                                        qed
                                      next
                                        case compromise_tnic_private_key
                                        by contradiction /* from formulas */
                                      qed
                                    next
                                      case compromise_tnic_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                next
                                  case compromise_tnic_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          next
                            case recv_msg
                            solve( !KU( senc(<
                                              hmac(get_session_key(~secrets, $TNIC_ID, $TNIC_RECV),
                                                   <msg.1, %cnt>), 
                                              msg.1, %cnt>,
                                             get_session_key(~secrets, $TNIC_ID, $TNIC_RECV))
                                   ) @ #vk.17 )
                              case c_senc
                              solve( !KU( get_session_key(~secrets, $TNIC_ID, $TNIC_RECV) ) @ #vk.19 )
                                case c_get_session_key
                                solve( !KU( ~secrets ) @ #vk.24 )
                                  case attestation_6c_7_8
                                  solve( !KU( get_master_key(hmac(~n.3, ~n.4), z) ) @ #vk.38 )
                                    case c_get_master_key
                                    solve( !KU( hmac(~n.3, ~n.4) ) @ #vk.39 )
                                      case attestation_4_5_6a
                                      solve( !KU( ~n.3 ) @ #vk.33 )
                                        case attestation_1
                                        solve( splitEqs(9) )
                                          case split_case_1
                                          solve( !KU( get_mTLS_key_half(partial_mTLS, ~IPVendor_priv.1, pk(x))
                                                 ) @ #vk.40 )
                                            case c_get_mTLS_key_half
                                            solve( !KU( ~IPVendor_priv.1 ) @ #vk.43 )
                                              case compromise_tnic_private_key
                                              by contradiction /* from formulas */
                                            qed
                                          qed
                                        next
                                          case split_case_2
                                          solve( !KU( sign(<
                                                            h(embed_certificate($CTRL.1,
                                                                                pk(~IPVendor_priv.1))), 
                                                            pk(x)>,
                                                           ~HW_key_priv.1)
                                                 ) @ #vk.38 )
                                            case attestation_2_3
                                            solve( !KU( ~Ctrl_priv.1 ) @ #vk.41 )
                                              case compromise_tnic_private_key
                                              by contradiction /* from formulas */
                                            qed
                                          next
                                            case c_sign
                                            solve( !KU( ~HW_key_priv.1 ) @ #vk.43 )
                                              case compromise_tnic_private_key
                                              by contradiction /* from formulas */
                                            qed
                                          qed
                                        qed
                                      qed
                                    next
                                      case c_hmac
                                      by solve( !KU( ~n.4 ) @ #vk.41 )
                                    qed
                                  next
                                    case compromise_tnic_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case compromise_tnic_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            next
                              case send_msg
                              by solve( (¬(#vr.16 < #vr.20))  ∥ (∃ z. (%cnt = (z++(%cnt%+%1)))) )
                            qed
                          qed
                        qed
                      next
                        case c_mTLS_handshake
                        solve( !KU( ~Ctrl_priv.1 ) @ #vk.20 )
                          case compromise_tnic_private_key
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case c_sign
                solve( !KU( ~Ctrl_priv.1 ) @ #vk.21 )
                  case compromise_tnic_private_key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case c_sign
              solve( !KU( ~HW_key_priv.1 ) @ #vk.18 )
                case compromise_tnic_private_key
                by contradiction /* from formulas */
              qed
            qed
          qed
        next
          case c_senc
          solve( !KU( get_encryption_key(get_master_key(hmac(~n, ~n.1),
                                                        hmac(n.2, ~n.3)))
                 ) @ #vk.19 )
            case c_get_encryption_key
            solve( !KU( get_master_key(hmac(~n, ~n.1), hmac(n.2, ~n.3)) ) @ #vk.22 )
              case c_get_master_key
              solve( !KU( ~secrets ) @ #vk.22 )
                case attestation_6c_7_8
                solve( !KU( get_master_key(hmac(~n.4, ~n.5), z) ) @ #vk.36 )
                  case c_get_master_key
                  solve( !KU( hmac(~n, ~n.1) ) @ #vk.25 )
                    case attestation_4_5_6a
                    solve( !KU( hmac(~n.4, ~n.5) ) @ #vk.37 )
                      case attestation_4_5_6a
                      solve( !KU( ~n.4 ) @ #vk.31 )
                        case attestation_1
                        solve( !TNIC_Connection( $TNIC_SEND, $TNIC_RECV, ~secrets ) ▶₁ #j )
                          case init_ctrs
                          solve( splitEqs(4) )
                            case split_case_1
                            solve( !KU( get_mTLS_key_half(partial_mTLS, ~IPVendor_priv, pk(x.2))
                                   ) @ #vk.38 )
                              case c_get_mTLS_key_half
                              solve( !KU( ~IPVendor_priv ) @ #vk.43 )
                                case compromise_tnic_private_key
                                by contradiction /* from formulas */
                              qed
                            qed
                          next
                            case split_case_2
                            solve( !KU( sign(<h(embed_certificate($CTRL, pk(~IPVendor_priv))), 
                                              pk(x.2)>,
                                             ~HW_key_priv.1)
                                   ) @ #vk.27 )
                              case attestation_2_3
                              solve( !KU( ~Ctrl_priv.1 ) @ #vk.39 )
                                case compromise_tnic_private_key
                                by contradiction /* from formulas */
                              qed
                            next
                              case c_sign
                              solve( !KU( ~HW_key_priv.1 ) @ #vk.43 )
                                case compromise_tnic_private_key
                                by contradiction /* from formulas */
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case c_hmac
                      by solve( !KU( ~n.5 ) @ #vk.41 )
                    qed
                  next
                    case c_hmac
                    by solve( !KU( ~n.1 ) @ #vk.39 )
                  qed
                next
                  case compromise_tnic_private_key
                  by contradiction /* from formulas */
                qed
              next
                case compromise_tnic_private_key
                by contradiction /* from formulas */
              qed
            next
              case compromise_tnic_private_key
              by contradiction /* from formulas */
            qed
          qed
        qed
      qed
    next
      case c_senc
      solve( !KU( get_encryption_key(get_master_key(z, hmac(n, ~n.1)))
             ) @ #vk.9 )
        case c_get_encryption_key
        solve( !KU( get_master_key(z, hmac(n, ~n.1)) ) @ #vk.12 )
          case c_get_master_key
          solve( !KU( senc(<'Secrets', ~secrets>,
                           get_encryption_key(get_master_key(z, hmac(n, ~n.1))))
                 ) @ #vk.5 )
            case attestation_6c_7_8
            solve( !KU( hmac(~n, ~n.1) ) @ #vk.13 )
              case attestation_4_5_6a
              solve( !KU( ~n ) @ #vk.18 )
                case attestation_1
                solve( !TNIC_Connection( $TNIC_SEND, $TNIC_RECV, ~secrets ) ▶₁ #j )
                  case init_ctrs
                  solve( !KU( sign(<h(embed_certificate($CTRL, pk(~IPVendor_priv))), pk(x)
                                   >,
                                   ~HW_key_priv.1)
                         ) @ #vk.23 )
                    case attestation_2_3
                    solve( !KU( ~Ctrl_priv ) @ #vk.25 )
                      case compromise_tnic_private_key
                      by contradiction /* from formulas */
                    qed
                  next
                    case c_sign
                    solve( !KU( ~HW_key_priv.1 ) @ #vk.27 )
                      case compromise_tnic_private_key
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            next
              case c_hmac
              by solve( !KU( ~n.1 ) @ #vk.25 )
            qed
          next
            case c_senc
            solve( !KU( ~secrets ) @ #vk.17 )
              case attestation_6c_7_8
              solve( !KU( get_master_key(hmac(~n.2, ~n.3), z.2) ) @ #vk.29 )
                case c_get_master_key
                solve( !KU( hmac(~n.2, ~n.3) ) @ #vk.30 )
                  case attestation_4_5_6a
                  solve( !KU( ~n.2 ) @ #vk.24 )
                    case attestation_1
                    solve( !TNIC_Connection( $TNIC_SEND, $TNIC_RECV, ~secrets ) ▶₁ #j )
                      case init_ctrs
                      solve( splitEqs(2) )
                        case split_case_1
                        solve( !KU( get_mTLS_key_half(partial_mTLS, ~Ctrl_priv,
                                                      retrieve_certificate(CTRL_bin))
                               ) @ #vk.21 )
                          case c_get_mTLS_key_half
                          solve( !KU( ~Ctrl_priv ) @ #vk.34 )
                            case compromise_tnic_private_key
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case split_case_2
                        solve( !KU( get_mTLS_key_half(partial_mTLS, ~Ctrl_priv, z) ) @ #vk.21 )
                          case c_get_mTLS_key_half
                          solve( !KU( ~Ctrl_priv ) @ #vk.34 )
                            case compromise_tnic_private_key
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case split_case_3
                        solve( splitEqs(4) )
                          case split_case_1
                          solve( !KU( get_mTLS_key_half(partial_mTLS, ~IPVendor_priv, pk(x))
                                 ) @ #vk.31 )
                            case c_get_mTLS_key_half
                            solve( !KU( ~IPVendor_priv ) @ #vk.34 )
                              case compromise_tnic_private_key
                              by contradiction /* from formulas */
                            qed
                          qed
                        next
                          case split_case_2
                          solve( !KU( sign(<h(embed_certificate($CTRL, pk(~IPVendor_priv))), pk(x)
                                           >,
                                           ~HW_key_priv.1)
                                 ) @ #vk.29 )
                            case attestation_2_3
                            solve( !KU( ~Ctrl_priv ) @ #vk.32 )
                              case compromise_tnic_private_key
                              by contradiction /* from formulas */
                            qed
                          next
                            case c_sign
                            solve( !KU( ~HW_key_priv.1 ) @ #vk.34 )
                              case compromise_tnic_private_key
                              by contradiction /* from formulas */
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case c_hmac
                  by solve( !KU( ~n.3 ) @ #vk.32 )
                qed
              next
                case compromise_tnic_private_key
                by contradiction /* from formulas */
              qed
            next
              case compromise_tnic_private_key
              by contradiction /* from formulas */
            qed
          qed
        next
          case compromise_tnic_private_key
          by contradiction /* from formulas */
        qed
      qed
    qed
  qed
qed









































/* All wellformedness checks were successful. */

/*
Generated from:
Tamarin version 1.8.0
Maude version 3.3.1
Git revision: UNKNOWN, branch: UNKNOWN
Compiled at: 2024-08-18 15:59:38.606680173 UTC
*/

end